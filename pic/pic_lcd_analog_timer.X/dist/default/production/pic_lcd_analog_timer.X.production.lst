

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 10 10:41:31 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F18877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x7E,2
    56     0000                     
    57                           ; Generated 09/02/2023 GMT
    58                           ; 
    59                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F18877 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     000E                     	;# 
   106     000F                     	;# 
   107     0010                     	;# 
   108     0011                     	;# 
   109     0012                     	;# 
   110     0013                     	;# 
   111     0014                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001C                     	;# 
   119     001C                     	;# 
   120     001D                     	;# 
   121     001D                     	;# 
   122     001E                     	;# 
   123     001F                     	;# 
   124     008C                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     008E                     	;# 
   129     008F                     	;# 
   130     0090                     	;# 
   131     0090                     	;# 
   132     0091                     	;# 
   133     0093                     	;# 
   134     0094                     	;# 
   135     0095                     	;# 
   136     0096                     	;# 
   137     0097                     	;# 
   138     0098                     	;# 
   139     0099                     	;# 
   140     009A                     	;# 
   141     009B                     	;# 
   142     009C                     	;# 
   143     009D                     	;# 
   144     009E                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010E                     	;# 
   149     010F                     	;# 
   150     0110                     	;# 
   151     0110                     	;# 
   152     0111                     	;# 
   153     0112                     	;# 
   154     0112                     	;# 
   155     0113                     	;# 
   156     0114                     	;# 
   157     0114                     	;# 
   158     0115                     	;# 
   159     0116                     	;# 
   160     0116                     	;# 
   161     0117                     	;# 
   162     0119                     	;# 
   163     0119                     	;# 
   164     0119                     	;# 
   165     011A                     	;# 
   166     011A                     	;# 
   167     011A                     	;# 
   168     011B                     	;# 
   169     011B                     	;# 
   170     011B                     	;# 
   171     011B                     	;# 
   172     011B                     	;# 
   173     011C                     	;# 
   174     011C                     	;# 
   175     011C                     	;# 
   176     011D                     	;# 
   177     011D                     	;# 
   178     011D                     	;# 
   179     011E                     	;# 
   180     011E                     	;# 
   181     011E                     	;# 
   182     011F                     	;# 
   183     011F                     	;# 
   184     011F                     	;# 
   185     011F                     	;# 
   186     011F                     	;# 
   187     018C                     	;# 
   188     018D                     	;# 
   189     018E                     	;# 
   190     018F                     	;# 
   191     0190                     	;# 
   192     0191                     	;# 
   193     0192                     	;# 
   194     0196                     	;# 
   195     0197                     	;# 
   196     0198                     	;# 
   197     0199                     	;# 
   198     019A                     	;# 
   199     019B                     	;# 
   200     019C                     	;# 
   201     020C                     	;# 
   202     020C                     	;# 
   203     020D                     	;# 
   204     020E                     	;# 
   205     020F                     	;# 
   206     020F                     	;# 
   207     0210                     	;# 
   208     0210                     	;# 
   209     0211                     	;# 
   210     0211                     	;# 
   211     0212                     	;# 
   212     0212                     	;# 
   213     0213                     	;# 
   214     0214                     	;# 
   215     0215                     	;# 
   216     0215                     	;# 
   217     0216                     	;# 
   218     0216                     	;# 
   219     0217                     	;# 
   220     0217                     	;# 
   221     0218                     	;# 
   222     0218                     	;# 
   223     0219                     	;# 
   224     021A                     	;# 
   225     021B                     	;# 
   226     021B                     	;# 
   227     021C                     	;# 
   228     021C                     	;# 
   229     021D                     	;# 
   230     021D                     	;# 
   231     021E                     	;# 
   232     021F                     	;# 
   233     028C                     	;# 
   234     028C                     	;# 
   235     028D                     	;# 
   236     028D                     	;# 
   237     028E                     	;# 
   238     028F                     	;# 
   239     0290                     	;# 
   240     0290                     	;# 
   241     0291                     	;# 
   242     0292                     	;# 
   243     0292                     	;# 
   244     0293                     	;# 
   245     0293                     	;# 
   246     0294                     	;# 
   247     0295                     	;# 
   248     0296                     	;# 
   249     0296                     	;# 
   250     0297                     	;# 
   251     0298                     	;# 
   252     0298                     	;# 
   253     0299                     	;# 
   254     0299                     	;# 
   255     029A                     	;# 
   256     029B                     	;# 
   257     029C                     	;# 
   258     029C                     	;# 
   259     029D                     	;# 
   260     030C                     	;# 
   261     030C                     	;# 
   262     030D                     	;# 
   263     030E                     	;# 
   264     030F                     	;# 
   265     0310                     	;# 
   266     0310                     	;# 
   267     0311                     	;# 
   268     0312                     	;# 
   269     0313                     	;# 
   270     0314                     	;# 
   271     0314                     	;# 
   272     0315                     	;# 
   273     0316                     	;# 
   274     0317                     	;# 
   275     0318                     	;# 
   276     0318                     	;# 
   277     0319                     	;# 
   278     031A                     	;# 
   279     031B                     	;# 
   280     031C                     	;# 
   281     031C                     	;# 
   282     031D                     	;# 
   283     031E                     	;# 
   284     031F                     	;# 
   285     038C                     	;# 
   286     038C                     	;# 
   287     038D                     	;# 
   288     038E                     	;# 
   289     0390                     	;# 
   290     0390                     	;# 
   291     0391                     	;# 
   292     0392                     	;# 
   293     040C                     	;# 
   294     040D                     	;# 
   295     040E                     	;# 
   296     040F                     	;# 
   297     0410                     	;# 
   298     0411                     	;# 
   299     0416                     	;# 
   300     0416                     	;# 
   301     0417                     	;# 
   302     0418                     	;# 
   303     0418                     	;# 
   304     0419                     	;# 
   305     041A                     	;# 
   306     041A                     	;# 
   307     041B                     	;# 
   308     041C                     	;# 
   309     041C                     	;# 
   310     041D                     	;# 
   311     041E                     	;# 
   312     041F                     	;# 
   313     048C                     	;# 
   314     048C                     	;# 
   315     048D                     	;# 
   316     048E                     	;# 
   317     048F                     	;# 
   318     048F                     	;# 
   319     0490                     	;# 
   320     0491                     	;# 
   321     0492                     	;# 
   322     0492                     	;# 
   323     0493                     	;# 
   324     0494                     	;# 
   325     0495                     	;# 
   326     0495                     	;# 
   327     0496                     	;# 
   328     0497                     	;# 
   329     0498                     	;# 
   330     0499                     	;# 
   331     049A                     	;# 
   332     049B                     	;# 
   333     049C                     	;# 
   334     049D                     	;# 
   335     050C                     	;# 
   336     050C                     	;# 
   337     050D                     	;# 
   338     050E                     	;# 
   339     050F                     	;# 
   340     050F                     	;# 
   341     0510                     	;# 
   342     0511                     	;# 
   343     0512                     	;# 
   344     0512                     	;# 
   345     0513                     	;# 
   346     0514                     	;# 
   347     0515                     	;# 
   348     0515                     	;# 
   349     0516                     	;# 
   350     0517                     	;# 
   351     0518                     	;# 
   352     0519                     	;# 
   353     051A                     	;# 
   354     051B                     	;# 
   355     051C                     	;# 
   356     051D                     	;# 
   357     058C                     	;# 
   358     058C                     	;# 
   359     058D                     	;# 
   360     058E                     	;# 
   361     058F                     	;# 
   362     058F                     	;# 
   363     0590                     	;# 
   364     0591                     	;# 
   365     0592                     	;# 
   366     0593                     	;# 
   367     060C                     	;# 
   368     060D                     	;# 
   369     060E                     	;# 
   370     060F                     	;# 
   371     0610                     	;# 
   372     0611                     	;# 
   373     0612                     	;# 
   374     0613                     	;# 
   375     0614                     	;# 
   376     0616                     	;# 
   377     0617                     	;# 
   378     0618                     	;# 
   379     0619                     	;# 
   380     061A                     	;# 
   381     061B                     	;# 
   382     061C                     	;# 
   383     061D                     	;# 
   384     061E                     	;# 
   385     068C                     	;# 
   386     068D                     	;# 
   387     068E                     	;# 
   388     068F                     	;# 
   389     0690                     	;# 
   390     0691                     	;# 
   391     0692                     	;# 
   392     0693                     	;# 
   393     0694                     	;# 
   394     070C                     	;# 
   395     070D                     	;# 
   396     070E                     	;# 
   397     070F                     	;# 
   398     0710                     	;# 
   399     0711                     	;# 
   400     0712                     	;# 
   401     0713                     	;# 
   402     0714                     	;# 
   403     0716                     	;# 
   404     0717                     	;# 
   405     0718                     	;# 
   406     0719                     	;# 
   407     071A                     	;# 
   408     071B                     	;# 
   409     071C                     	;# 
   410     071D                     	;# 
   411     071E                     	;# 
   412     0796                     	;# 
   413     0797                     	;# 
   414     0798                     	;# 
   415     0799                     	;# 
   416     079A                     	;# 
   417     079B                     	;# 
   418     080C                     	;# 
   419     080D                     	;# 
   420     080E                     	;# 
   421     080F                     	;# 
   422     0810                     	;# 
   423     0811                     	;# 
   424     0812                     	;# 
   425     0813                     	;# 
   426     0814                     	;# 
   427     081A                     	;# 
   428     081B                     	;# 
   429     081C                     	;# 
   430     081D                     	;# 
   431     081E                     	;# 
   432     081F                     	;# 
   433     088C                     	;# 
   434     088D                     	;# 
   435     088E                     	;# 
   436     088F                     	;# 
   437     0890                     	;# 
   438     0891                     	;# 
   439     0892                     	;# 
   440     0893                     	;# 
   441     0895                     	;# 
   442     0896                     	;# 
   443     0897                     	;# 
   444     0898                     	;# 
   445     0899                     	;# 
   446     089A                     	;# 
   447     089B                     	;# 
   448     090C                     	;# 
   449     090E                     	;# 
   450     090F                     	;# 
   451     091F                     	;# 
   452     098F                     	;# 
   453     098F                     	;# 
   454     0990                     	;# 
   455     0991                     	;# 
   456     0992                     	;# 
   457     0993                     	;# 
   458     0994                     	;# 
   459     0995                     	;# 
   460     0996                     	;# 
   461     0997                     	;# 
   462     1E0F                     	;# 
   463     1E10                     	;# 
   464     1E11                     	;# 
   465     1E12                     	;# 
   466     1E13                     	;# 
   467     1E14                     	;# 
   468     1E15                     	;# 
   469     1E16                     	;# 
   470     1E17                     	;# 
   471     1E18                     	;# 
   472     1E19                     	;# 
   473     1E1A                     	;# 
   474     1E1B                     	;# 
   475     1E1C                     	;# 
   476     1E1D                     	;# 
   477     1E1E                     	;# 
   478     1E1F                     	;# 
   479     1E20                     	;# 
   480     1E21                     	;# 
   481     1E22                     	;# 
   482     1E23                     	;# 
   483     1E24                     	;# 
   484     1E25                     	;# 
   485     1E26                     	;# 
   486     1E27                     	;# 
   487     1E28                     	;# 
   488     1E29                     	;# 
   489     1E2A                     	;# 
   490     1E2B                     	;# 
   491     1E2C                     	;# 
   492     1E2D                     	;# 
   493     1E2E                     	;# 
   494     1E2F                     	;# 
   495     1E30                     	;# 
   496     1E31                     	;# 
   497     1E32                     	;# 
   498     1E33                     	;# 
   499     1E34                     	;# 
   500     1E35                     	;# 
   501     1E36                     	;# 
   502     1E37                     	;# 
   503     1E8F                     	;# 
   504     1E90                     	;# 
   505     1E91                     	;# 
   506     1E92                     	;# 
   507     1E93                     	;# 
   508     1E94                     	;# 
   509     1E95                     	;# 
   510     1E96                     	;# 
   511     1E97                     	;# 
   512     1E9C                     	;# 
   513     1E9D                     	;# 
   514     1E9E                     	;# 
   515     1EA1                     	;# 
   516     1EA2                     	;# 
   517     1EA3                     	;# 
   518     1EA4                     	;# 
   519     1EA5                     	;# 
   520     1EA9                     	;# 
   521     1EAA                     	;# 
   522     1EAB                     	;# 
   523     1EAC                     	;# 
   524     1EB1                     	;# 
   525     1EB2                     	;# 
   526     1EB3                     	;# 
   527     1EB8                     	;# 
   528     1EB9                     	;# 
   529     1EBA                     	;# 
   530     1EBB                     	;# 
   531     1EBC                     	;# 
   532     1EBD                     	;# 
   533     1EBE                     	;# 
   534     1EC3                     	;# 
   535     1EC5                     	;# 
   536     1EC6                     	;# 
   537     1EC7                     	;# 
   538     1EC8                     	;# 
   539     1EC9                     	;# 
   540     1ECA                     	;# 
   541     1ECB                     	;# 
   542     1ECC                     	;# 
   543     1F10                     	;# 
   544     1F11                     	;# 
   545     1F12                     	;# 
   546     1F13                     	;# 
   547     1F14                     	;# 
   548     1F15                     	;# 
   549     1F16                     	;# 
   550     1F17                     	;# 
   551     1F18                     	;# 
   552     1F19                     	;# 
   553     1F1A                     	;# 
   554     1F1B                     	;# 
   555     1F1C                     	;# 
   556     1F1D                     	;# 
   557     1F1E                     	;# 
   558     1F1F                     	;# 
   559     1F20                     	;# 
   560     1F21                     	;# 
   561     1F22                     	;# 
   562     1F23                     	;# 
   563     1F24                     	;# 
   564     1F25                     	;# 
   565     1F26                     	;# 
   566     1F27                     	;# 
   567     1F28                     	;# 
   568     1F29                     	;# 
   569     1F2A                     	;# 
   570     1F2B                     	;# 
   571     1F2C                     	;# 
   572     1F2D                     	;# 
   573     1F2E                     	;# 
   574     1F2F                     	;# 
   575     1F30                     	;# 
   576     1F31                     	;# 
   577     1F32                     	;# 
   578     1F38                     	;# 
   579     1F39                     	;# 
   580     1F3A                     	;# 
   581     1F3B                     	;# 
   582     1F3C                     	;# 
   583     1F3D                     	;# 
   584     1F3E                     	;# 
   585     1F3F                     	;# 
   586     1F40                     	;# 
   587     1F41                     	;# 
   588     1F43                     	;# 
   589     1F44                     	;# 
   590     1F45                     	;# 
   591     1F46                     	;# 
   592     1F47                     	;# 
   593     1F48                     	;# 
   594     1F49                     	;# 
   595     1F4A                     	;# 
   596     1F4B                     	;# 
   597     1F4C                     	;# 
   598     1F4E                     	;# 
   599     1F4F                     	;# 
   600     1F50                     	;# 
   601     1F51                     	;# 
   602     1F52                     	;# 
   603     1F53                     	;# 
   604     1F54                     	;# 
   605     1F55                     	;# 
   606     1F56                     	;# 
   607     1F57                     	;# 
   608     1F59                     	;# 
   609     1F5A                     	;# 
   610     1F5B                     	;# 
   611     1F5C                     	;# 
   612     1F5D                     	;# 
   613     1F61                     	;# 
   614     1F62                     	;# 
   615     1F64                     	;# 
   616     1F65                     	;# 
   617     1F66                     	;# 
   618     1F67                     	;# 
   619     1F68                     	;# 
   620     1F69                     	;# 
   621     1F6A                     	;# 
   622     1F6B                     	;# 
   623     1F6C                     	;# 
   624     1F6D                     	;# 
   625     1FE4                     	;# 
   626     1FE5                     	;# 
   627     1FE6                     	;# 
   628     1FE7                     	;# 
   629     1FE8                     	;# 
   630     1FE9                     	;# 
   631     1FEA                     	;# 
   632     1FEB                     	;# 
   633     1FED                     	;# 
   634     1FEE                     	;# 
   635     1FEF                     	;# 
   636     0000                     	;# 
   637     0001                     	;# 
   638     0002                     	;# 
   639     0003                     	;# 
   640     0004                     	;# 
   641     0005                     	;# 
   642     0006                     	;# 
   643     0007                     	;# 
   644     0008                     	;# 
   645     0009                     	;# 
   646     000A                     	;# 
   647     000B                     	;# 
   648     000C                     	;# 
   649     000D                     	;# 
   650     000E                     	;# 
   651     000F                     	;# 
   652     0010                     	;# 
   653     0011                     	;# 
   654     0012                     	;# 
   655     0013                     	;# 
   656     0014                     	;# 
   657     0015                     	;# 
   658     0016                     	;# 
   659     0017                     	;# 
   660     0018                     	;# 
   661     0019                     	;# 
   662     001A                     	;# 
   663     001C                     	;# 
   664     001C                     	;# 
   665     001D                     	;# 
   666     001D                     	;# 
   667     001E                     	;# 
   668     001F                     	;# 
   669     008C                     	;# 
   670     008C                     	;# 
   671     008D                     	;# 
   672     008E                     	;# 
   673     008E                     	;# 
   674     008F                     	;# 
   675     0090                     	;# 
   676     0090                     	;# 
   677     0091                     	;# 
   678     0093                     	;# 
   679     0094                     	;# 
   680     0095                     	;# 
   681     0096                     	;# 
   682     0097                     	;# 
   683     0098                     	;# 
   684     0099                     	;# 
   685     009A                     	;# 
   686     009B                     	;# 
   687     009C                     	;# 
   688     009D                     	;# 
   689     009E                     	;# 
   690     010C                     	;# 
   691     010D                     	;# 
   692     010E                     	;# 
   693     010E                     	;# 
   694     010F                     	;# 
   695     0110                     	;# 
   696     0110                     	;# 
   697     0111                     	;# 
   698     0112                     	;# 
   699     0112                     	;# 
   700     0113                     	;# 
   701     0114                     	;# 
   702     0114                     	;# 
   703     0115                     	;# 
   704     0116                     	;# 
   705     0116                     	;# 
   706     0117                     	;# 
   707     0119                     	;# 
   708     0119                     	;# 
   709     0119                     	;# 
   710     011A                     	;# 
   711     011A                     	;# 
   712     011A                     	;# 
   713     011B                     	;# 
   714     011B                     	;# 
   715     011B                     	;# 
   716     011B                     	;# 
   717     011B                     	;# 
   718     011C                     	;# 
   719     011C                     	;# 
   720     011C                     	;# 
   721     011D                     	;# 
   722     011D                     	;# 
   723     011D                     	;# 
   724     011E                     	;# 
   725     011E                     	;# 
   726     011E                     	;# 
   727     011F                     	;# 
   728     011F                     	;# 
   729     011F                     	;# 
   730     011F                     	;# 
   731     011F                     	;# 
   732     018C                     	;# 
   733     018D                     	;# 
   734     018E                     	;# 
   735     018F                     	;# 
   736     0190                     	;# 
   737     0191                     	;# 
   738     0192                     	;# 
   739     0196                     	;# 
   740     0197                     	;# 
   741     0198                     	;# 
   742     0199                     	;# 
   743     019A                     	;# 
   744     019B                     	;# 
   745     019C                     	;# 
   746     020C                     	;# 
   747     020C                     	;# 
   748     020D                     	;# 
   749     020E                     	;# 
   750     020F                     	;# 
   751     020F                     	;# 
   752     0210                     	;# 
   753     0210                     	;# 
   754     0211                     	;# 
   755     0211                     	;# 
   756     0212                     	;# 
   757     0212                     	;# 
   758     0213                     	;# 
   759     0214                     	;# 
   760     0215                     	;# 
   761     0215                     	;# 
   762     0216                     	;# 
   763     0216                     	;# 
   764     0217                     	;# 
   765     0217                     	;# 
   766     0218                     	;# 
   767     0218                     	;# 
   768     0219                     	;# 
   769     021A                     	;# 
   770     021B                     	;# 
   771     021B                     	;# 
   772     021C                     	;# 
   773     021C                     	;# 
   774     021D                     	;# 
   775     021D                     	;# 
   776     021E                     	;# 
   777     021F                     	;# 
   778     028C                     	;# 
   779     028C                     	;# 
   780     028D                     	;# 
   781     028D                     	;# 
   782     028E                     	;# 
   783     028F                     	;# 
   784     0290                     	;# 
   785     0290                     	;# 
   786     0291                     	;# 
   787     0292                     	;# 
   788     0292                     	;# 
   789     0293                     	;# 
   790     0293                     	;# 
   791     0294                     	;# 
   792     0295                     	;# 
   793     0296                     	;# 
   794     0296                     	;# 
   795     0297                     	;# 
   796     0298                     	;# 
   797     0298                     	;# 
   798     0299                     	;# 
   799     0299                     	;# 
   800     029A                     	;# 
   801     029B                     	;# 
   802     029C                     	;# 
   803     029C                     	;# 
   804     029D                     	;# 
   805     030C                     	;# 
   806     030C                     	;# 
   807     030D                     	;# 
   808     030E                     	;# 
   809     030F                     	;# 
   810     0310                     	;# 
   811     0310                     	;# 
   812     0311                     	;# 
   813     0312                     	;# 
   814     0313                     	;# 
   815     0314                     	;# 
   816     0314                     	;# 
   817     0315                     	;# 
   818     0316                     	;# 
   819     0317                     	;# 
   820     0318                     	;# 
   821     0318                     	;# 
   822     0319                     	;# 
   823     031A                     	;# 
   824     031B                     	;# 
   825     031C                     	;# 
   826     031C                     	;# 
   827     031D                     	;# 
   828     031E                     	;# 
   829     031F                     	;# 
   830     038C                     	;# 
   831     038C                     	;# 
   832     038D                     	;# 
   833     038E                     	;# 
   834     0390                     	;# 
   835     0390                     	;# 
   836     0391                     	;# 
   837     0392                     	;# 
   838     040C                     	;# 
   839     040D                     	;# 
   840     040E                     	;# 
   841     040F                     	;# 
   842     0410                     	;# 
   843     0411                     	;# 
   844     0416                     	;# 
   845     0416                     	;# 
   846     0417                     	;# 
   847     0418                     	;# 
   848     0418                     	;# 
   849     0419                     	;# 
   850     041A                     	;# 
   851     041A                     	;# 
   852     041B                     	;# 
   853     041C                     	;# 
   854     041C                     	;# 
   855     041D                     	;# 
   856     041E                     	;# 
   857     041F                     	;# 
   858     048C                     	;# 
   859     048C                     	;# 
   860     048D                     	;# 
   861     048E                     	;# 
   862     048F                     	;# 
   863     048F                     	;# 
   864     0490                     	;# 
   865     0491                     	;# 
   866     0492                     	;# 
   867     0492                     	;# 
   868     0493                     	;# 
   869     0494                     	;# 
   870     0495                     	;# 
   871     0495                     	;# 
   872     0496                     	;# 
   873     0497                     	;# 
   874     0498                     	;# 
   875     0499                     	;# 
   876     049A                     	;# 
   877     049B                     	;# 
   878     049C                     	;# 
   879     049D                     	;# 
   880     050C                     	;# 
   881     050C                     	;# 
   882     050D                     	;# 
   883     050E                     	;# 
   884     050F                     	;# 
   885     050F                     	;# 
   886     0510                     	;# 
   887     0511                     	;# 
   888     0512                     	;# 
   889     0512                     	;# 
   890     0513                     	;# 
   891     0514                     	;# 
   892     0515                     	;# 
   893     0515                     	;# 
   894     0516                     	;# 
   895     0517                     	;# 
   896     0518                     	;# 
   897     0519                     	;# 
   898     051A                     	;# 
   899     051B                     	;# 
   900     051C                     	;# 
   901     051D                     	;# 
   902     058C                     	;# 
   903     058C                     	;# 
   904     058D                     	;# 
   905     058E                     	;# 
   906     058F                     	;# 
   907     058F                     	;# 
   908     0590                     	;# 
   909     0591                     	;# 
   910     0592                     	;# 
   911     0593                     	;# 
   912     060C                     	;# 
   913     060D                     	;# 
   914     060E                     	;# 
   915     060F                     	;# 
   916     0610                     	;# 
   917     0611                     	;# 
   918     0612                     	;# 
   919     0613                     	;# 
   920     0614                     	;# 
   921     0616                     	;# 
   922     0617                     	;# 
   923     0618                     	;# 
   924     0619                     	;# 
   925     061A                     	;# 
   926     061B                     	;# 
   927     061C                     	;# 
   928     061D                     	;# 
   929     061E                     	;# 
   930     068C                     	;# 
   931     068D                     	;# 
   932     068E                     	;# 
   933     068F                     	;# 
   934     0690                     	;# 
   935     0691                     	;# 
   936     0692                     	;# 
   937     0693                     	;# 
   938     0694                     	;# 
   939     070C                     	;# 
   940     070D                     	;# 
   941     070E                     	;# 
   942     070F                     	;# 
   943     0710                     	;# 
   944     0711                     	;# 
   945     0712                     	;# 
   946     0713                     	;# 
   947     0714                     	;# 
   948     0716                     	;# 
   949     0717                     	;# 
   950     0718                     	;# 
   951     0719                     	;# 
   952     071A                     	;# 
   953     071B                     	;# 
   954     071C                     	;# 
   955     071D                     	;# 
   956     071E                     	;# 
   957     0796                     	;# 
   958     0797                     	;# 
   959     0798                     	;# 
   960     0799                     	;# 
   961     079A                     	;# 
   962     079B                     	;# 
   963     080C                     	;# 
   964     080D                     	;# 
   965     080E                     	;# 
   966     080F                     	;# 
   967     0810                     	;# 
   968     0811                     	;# 
   969     0812                     	;# 
   970     0813                     	;# 
   971     0814                     	;# 
   972     081A                     	;# 
   973     081B                     	;# 
   974     081C                     	;# 
   975     081D                     	;# 
   976     081E                     	;# 
   977     081F                     	;# 
   978     088C                     	;# 
   979     088D                     	;# 
   980     088E                     	;# 
   981     088F                     	;# 
   982     0890                     	;# 
   983     0891                     	;# 
   984     0892                     	;# 
   985     0893                     	;# 
   986     0895                     	;# 
   987     0896                     	;# 
   988     0897                     	;# 
   989     0898                     	;# 
   990     0899                     	;# 
   991     089A                     	;# 
   992     089B                     	;# 
   993     090C                     	;# 
   994     090E                     	;# 
   995     090F                     	;# 
   996     091F                     	;# 
   997     098F                     	;# 
   998     098F                     	;# 
   999     0990                     	;# 
  1000     0991                     	;# 
  1001     0992                     	;# 
  1002     0993                     	;# 
  1003     0994                     	;# 
  1004     0995                     	;# 
  1005     0996                     	;# 
  1006     0997                     	;# 
  1007     1E0F                     	;# 
  1008     1E10                     	;# 
  1009     1E11                     	;# 
  1010     1E12                     	;# 
  1011     1E13                     	;# 
  1012     1E14                     	;# 
  1013     1E15                     	;# 
  1014     1E16                     	;# 
  1015     1E17                     	;# 
  1016     1E18                     	;# 
  1017     1E19                     	;# 
  1018     1E1A                     	;# 
  1019     1E1B                     	;# 
  1020     1E1C                     	;# 
  1021     1E1D                     	;# 
  1022     1E1E                     	;# 
  1023     1E1F                     	;# 
  1024     1E20                     	;# 
  1025     1E21                     	;# 
  1026     1E22                     	;# 
  1027     1E23                     	;# 
  1028     1E24                     	;# 
  1029     1E25                     	;# 
  1030     1E26                     	;# 
  1031     1E27                     	;# 
  1032     1E28                     	;# 
  1033     1E29                     	;# 
  1034     1E2A                     	;# 
  1035     1E2B                     	;# 
  1036     1E2C                     	;# 
  1037     1E2D                     	;# 
  1038     1E2E                     	;# 
  1039     1E2F                     	;# 
  1040     1E30                     	;# 
  1041     1E31                     	;# 
  1042     1E32                     	;# 
  1043     1E33                     	;# 
  1044     1E34                     	;# 
  1045     1E35                     	;# 
  1046     1E36                     	;# 
  1047     1E37                     	;# 
  1048     1E8F                     	;# 
  1049     1E90                     	;# 
  1050     1E91                     	;# 
  1051     1E92                     	;# 
  1052     1E93                     	;# 
  1053     1E94                     	;# 
  1054     1E95                     	;# 
  1055     1E96                     	;# 
  1056     1E97                     	;# 
  1057     1E9C                     	;# 
  1058     1E9D                     	;# 
  1059     1E9E                     	;# 
  1060     1EA1                     	;# 
  1061     1EA2                     	;# 
  1062     1EA3                     	;# 
  1063     1EA4                     	;# 
  1064     1EA5                     	;# 
  1065     1EA9                     	;# 
  1066     1EAA                     	;# 
  1067     1EAB                     	;# 
  1068     1EAC                     	;# 
  1069     1EB1                     	;# 
  1070     1EB2                     	;# 
  1071     1EB3                     	;# 
  1072     1EB8                     	;# 
  1073     1EB9                     	;# 
  1074     1EBA                     	;# 
  1075     1EBB                     	;# 
  1076     1EBC                     	;# 
  1077     1EBD                     	;# 
  1078     1EBE                     	;# 
  1079     1EC3                     	;# 
  1080     1EC5                     	;# 
  1081     1EC6                     	;# 
  1082     1EC7                     	;# 
  1083     1EC8                     	;# 
  1084     1EC9                     	;# 
  1085     1ECA                     	;# 
  1086     1ECB                     	;# 
  1087     1ECC                     	;# 
  1088     1F10                     	;# 
  1089     1F11                     	;# 
  1090     1F12                     	;# 
  1091     1F13                     	;# 
  1092     1F14                     	;# 
  1093     1F15                     	;# 
  1094     1F16                     	;# 
  1095     1F17                     	;# 
  1096     1F18                     	;# 
  1097     1F19                     	;# 
  1098     1F1A                     	;# 
  1099     1F1B                     	;# 
  1100     1F1C                     	;# 
  1101     1F1D                     	;# 
  1102     1F1E                     	;# 
  1103     1F1F                     	;# 
  1104     1F20                     	;# 
  1105     1F21                     	;# 
  1106     1F22                     	;# 
  1107     1F23                     	;# 
  1108     1F24                     	;# 
  1109     1F25                     	;# 
  1110     1F26                     	;# 
  1111     1F27                     	;# 
  1112     1F28                     	;# 
  1113     1F29                     	;# 
  1114     1F2A                     	;# 
  1115     1F2B                     	;# 
  1116     1F2C                     	;# 
  1117     1F2D                     	;# 
  1118     1F2E                     	;# 
  1119     1F2F                     	;# 
  1120     1F30                     	;# 
  1121     1F31                     	;# 
  1122     1F32                     	;# 
  1123     1F38                     	;# 
  1124     1F39                     	;# 
  1125     1F3A                     	;# 
  1126     1F3B                     	;# 
  1127     1F3C                     	;# 
  1128     1F3D                     	;# 
  1129     1F3E                     	;# 
  1130     1F3F                     	;# 
  1131     1F40                     	;# 
  1132     1F41                     	;# 
  1133     1F43                     	;# 
  1134     1F44                     	;# 
  1135     1F45                     	;# 
  1136     1F46                     	;# 
  1137     1F47                     	;# 
  1138     1F48                     	;# 
  1139     1F49                     	;# 
  1140     1F4A                     	;# 
  1141     1F4B                     	;# 
  1142     1F4C                     	;# 
  1143     1F4E                     	;# 
  1144     1F4F                     	;# 
  1145     1F50                     	;# 
  1146     1F51                     	;# 
  1147     1F52                     	;# 
  1148     1F53                     	;# 
  1149     1F54                     	;# 
  1150     1F55                     	;# 
  1151     1F56                     	;# 
  1152     1F57                     	;# 
  1153     1F59                     	;# 
  1154     1F5A                     	;# 
  1155     1F5B                     	;# 
  1156     1F5C                     	;# 
  1157     1F5D                     	;# 
  1158     1F61                     	;# 
  1159     1F62                     	;# 
  1160     1F64                     	;# 
  1161     1F65                     	;# 
  1162     1F66                     	;# 
  1163     1F67                     	;# 
  1164     1F68                     	;# 
  1165     1F69                     	;# 
  1166     1F6A                     	;# 
  1167     1F6B                     	;# 
  1168     1F6C                     	;# 
  1169     1F6D                     	;# 
  1170     1FE4                     	;# 
  1171     1FE5                     	;# 
  1172     1FE6                     	;# 
  1173     1FE7                     	;# 
  1174     1FE8                     	;# 
  1175     1FE9                     	;# 
  1176     1FEA                     	;# 
  1177     1FEB                     	;# 
  1178     1FED                     	;# 
  1179     1FEE                     	;# 
  1180     1FEF                     	;# 
  1181                           
  1182                           	psect	idataBANK1
  1183     0610                     __pidataBANK1:
  1184                           
  1185                           ;initializer for main@F12497
  1186     0610  3441               	retlw	65
  1187     0611  3475               	retlw	117
  1188     0612  346E               	retlw	110
  1189     0613  3467               	retlw	103
  1190     0614  3420               	retlw	32
  1191     0615  3457               	retlw	87
  1192     0616  3469               	retlw	105
  1193     0617  346E               	retlw	110
  1194     0618  3420               	retlw	32
  1195     0619  3448               	retlw	72
  1196     061A  3474               	retlw	116
  1197     061B  3475               	retlw	117
  1198     061C  3474               	retlw	116
  1199     061D  3400               	retlw	0
  1200     061E  3400               	retlw	0
  1201     061F  3400               	retlw	0
  1202                           
  1203                           ;initializer for _hexvalue
  1204     0620  343F               	retlw	63
  1205     0621  3406               	retlw	6
  1206     0622  345B               	retlw	91
  1207     0623  344F               	retlw	79
  1208     0624  3466               	retlw	102
  1209     0625  346D               	retlw	109
  1210     0626  347D               	retlw	125
  1211     0627  3407               	retlw	7
  1212     0628  347F               	retlw	127
  1213     0629  346F               	retlw	111
  1214     0010                     _PORTEbits	set	16
  1215     000F                     _PORTD	set	15
  1216     0014                     _TRISD	set	20
  1217     0015                     _TRISE	set	21
  1218     000E                     _PORTC	set	14
  1219     000E                     _PORTCbits	set	14
  1220     0013                     _TRISC	set	19
  1221     0011                     _TRISA	set	17
  1222     000B                     _INTCONbits	set	11
  1223     000D                     _PORTBbits	set	13
  1224     001C                     _TMR0L	set	28
  1225     001D                     _TMR0H	set	29
  1226     001F                     _T0CON1	set	31
  1227     001E                     _T0CON0	set	30
  1228     0017                     _LATBbits	set	23
  1229     0012                     _TRISB	set	18
  1230     00D2                     _LATE2	set	210
  1231     00D0                     _LATE0	set	208
  1232     008C                     _ADRESL	set	140
  1233     008D                     _ADRESH	set	141
  1234     0093                     _ADCON0bits	set	147
  1235     009E                     _ADPCH	set	158
  1236     0093                     _ADCON0	set	147
  1237     009D                     _ADACQ	set	157
  1238     0098                     _ADCLK	set	152
  1239     009A                     _ADREF	set	154
  1240     0716                     _PIE0bits	set	1814
  1241     070C                     _PIR0bits	set	1804
  1242     1F38                     _ANSELA	set	7992
  1243                           
  1244                           	psect	stringtext1
  1245     06B5                     __pstringtext1:
  1246     06B5                     STR_2:
  1247     06B5  344F               	retlw	79	;'O'
  1248     06B6  3432               	retlw	50	;'2'
  1249     06B7  3420               	retlw	32	;' '
  1250     06B8  3469               	retlw	105	;'i'
  1251     06B9  3473               	retlw	115	;'s'
  1252     06BA  3420               	retlw	32	;' '
  1253     06BB  3469               	retlw	105	;'i'
  1254     06BC  346E               	retlw	110	;'n'
  1255     06BD  3420               	retlw	32	;' '
  1256     06BE  3464               	retlw	100	;'d'
  1257     06BF  3461               	retlw	97	;'a'
  1258     06C0  346E               	retlw	110	;'n'
  1259     06C1  3467               	retlw	103	;'g'
  1260     06C2  3465               	retlw	101	;'e'
  1261     06C3  3472               	retlw	114	;'r'
  1262     06C4  3421               	retlw	33	;'!'
  1263     06C5  3400               	retlw	0
  1264                           
  1265                           	psect	stringtext2
  1266     06C6                     __pstringtext2:
  1267     06C6                     STR_4:
  1268     06C6  344F               	retlw	79	;'O'
  1269     06C7  3432               	retlw	50	;'2'
  1270     06C8  3420               	retlw	32	;' '
  1271     06C9  3469               	retlw	105	;'i'
  1272     06CA  3473               	retlw	115	;'s'
  1273     06CB  3420               	retlw	32	;' '
  1274     06CC  344F               	retlw	79	;'O'
  1275     06CD  344B               	retlw	75	;'K'
  1276     06CE  3420               	retlw	32	;' '
  1277     06CF  3461               	retlw	97	;'a'
  1278     06D0  3467               	retlw	103	;'g'
  1279     06D1  3461               	retlw	97	;'a'
  1280     06D2  3469               	retlw	105	;'i'
  1281     06D3  346E               	retlw	110	;'n'
  1282     06D4  3421               	retlw	33	;'!'
  1283     06D5  3400               	retlw	0
  1284                           
  1285                           	psect	stringtext3
  1286     06D6                     __pstringtext3:
  1287     06D6                     STR_1:
  1288     06D6  344F               	retlw	79	;'O'
  1289     06D7  3432               	retlw	50	;'2'
  1290     06D8  3420               	retlw	32	;' '
  1291     06D9  346C               	retlw	108	;'l'
  1292     06DA  3476               	retlw	118	;'v'
  1293     06DB  346C               	retlw	108	;'l'
  1294     06DC  3420               	retlw	32	;' '
  1295     06DD  343D               	retlw	61	;'='
  1296     06DE  3420               	retlw	32	;' '
  1297     06DF  3425               	retlw	37	;'%'
  1298     06E0  3433               	retlw	51	;'3'
  1299     06E1  3475               	retlw	117	;'u'
  1300     06E2  3425               	retlw	37	;'%'
  1301     06E3  3425               	retlw	37	;'%'
  1302     06E4  3400               	retlw	0
  1303                           
  1304                           	psect	stringtext4
  1305     06E5                     __pstringtext4:
  1306     06E5                     STR_3:
  1307     06E5  3450               	retlw	80	;'P'
  1308     06E6  3448               	retlw	72	;'H'
  1309     06E7  3420               	retlw	32	;' '
  1310     06E8  346C               	retlw	108	;'l'
  1311     06E9  3476               	retlw	118	;'v'
  1312     06EA  346C               	retlw	108	;'l'
  1313     06EB  3420               	retlw	32	;' '
  1314     06EC  343D               	retlw	61	;'='
  1315     06ED  3420               	retlw	32	;' '
  1316     06EE  3425               	retlw	37	;'%'
  1317     06EF  3433               	retlw	51	;'3'
  1318     06F0  3475               	retlw	117	;'u'
  1319     06F1  3425               	retlw	37	;'%'
  1320     06F2  3425               	retlw	37	;'%'
  1321     06F3  3400               	retlw	0
  1322                           
  1323                           	psect	stringtext5
  1324     0000                     __pstringtext5:
  1325                           
  1326                           	psect	cinit
  1327     0031                     start_initialization:	
  1328                           ; #config settings
  1329                           
  1330     0031                     __initialization:
  1331                           
  1332                           ; Initialize objects allocated to BANK1
  1333     0031  3010               	movlw	low __pidataBANK1
  1334     0032  0084               	movwf	4
  1335     0033  3086               	movlw	(high __pidataBANK1)| (0+128)
  1336     0034  0085               	movwf	5
  1337     0035  30C6               	movlw	low __pdataBANK1
  1338     0036  0086               	movwf	6
  1339     0037  3000               	movlw	high __pdataBANK1
  1340     0038  0087               	movwf	7
  1341     0039  301A               	movlw	26
  1342     003A  3187  275B  3180   	fcall	init_ram
  1343                           
  1344                           ; Clear objects allocated to BANK0
  1345     003D  01EA               	clrf	__pbssBANK0& (0+127)
  1346     003E  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  1347     003F  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  1348     0040  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  1349     0041  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  1350                           
  1351                           ; Clear objects allocated to BANK2
  1352     0042  3020               	movlw	low __pbssBANK2
  1353     0043  0084               	movwf	4
  1354     0044  3001               	movlw	high __pbssBANK2
  1355     0045  0085               	movwf	5
  1356     0046  3020               	movlw	32
  1357     0047  3187  2761  3180   	fcall	clear_ram0
  1358     004A                     end_of_initialization:	
  1359                           ;End of C runtime variable initialization code
  1360                           
  1361     004A                     __end_of__initialization:
  1362     004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1363     004B  0140               	movlb	0
  1364     004C  3180  284E         	ljmp	_main	;jump to C main() function
  1365                           
  1366                           	psect	bssBANK0
  1367     006A                     __pbssBANK0:
  1368     006A                     _width:
  1369     006A                     	ds	2
  1370     006C                     _prec:
  1371     006C                     	ds	2
  1372     006E                     _flags:
  1373     006E                     	ds	1
  1374                           
  1375                           	psect	dataBANK1
  1376     00C6                     __pdataBANK1:
  1377     00C6                     main@F12497:
  1378     00C6                     	ds	16
  1379     00D6                     _hexvalue:
  1380     00D6                     	ds	10
  1381                           
  1382                           	psect	bssBANK2
  1383     0120                     __pbssBANK2:
  1384     0120                     _dbuf:
  1385     0120                     	ds	32
  1386                           
  1387                           	psect	inittext
  1388     075B                     init_ram:
  1389     075B  00FE               	movwf	btemp
  1390     075C                     initloop:
  1391     075C  0012               	moviw fsr0++
  1392     075D  001E               	movwi fsr1++
  1393     075E  0BFE               	decfsz	btemp,f
  1394     075F  2F5C               	goto	initloop
  1395     0760  3400               	retlw	0
  1396                           
  1397                           	psect	clrtext
  1398     0761                     clear_ram0:	
  1399                           ;	Called with FSR0 containing the base address, and
  1400                           ;	WREG with the size to clear
  1401                           
  1402     0761  0064               	clrwdt	;clear the watchdog before getting into this loop
  1403     0762                     clrloop0:
  1404     0762  0180               	clrf	0	;clear RAM location pointed to by FSR
  1405     0763  3101               	addfsr 0,1
  1406     0764  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1407     0765  2F62               	goto	clrloop0	;have we reached the end yet?
  1408     0766  3400               	retlw	0	;all done for this memory range, return
  1409                           
  1410                           	psect	cstackBANK1
  1411     00A0                     __pcstackBANK1:
  1412     00A0                     main@name:
  1413                           
  1414                           ; 16 bytes @ 0x0
  1415     00A0                     	ds	16
  1416     00B0                     main@buffer:
  1417                           
  1418                           ; 16 bytes @ 0x10
  1419     00B0                     	ds	16
  1420     00C0                     main@j:
  1421                           
  1422                           ; 2 bytes @ 0x20
  1423     00C0                     	ds	2
  1424     00C2                     main@PH_level:
  1425                           
  1426                           ; 2 bytes @ 0x22
  1427     00C2                     	ds	2
  1428     00C4                     main@O2_level:
  1429                           
  1430                           ; 2 bytes @ 0x24
  1431     00C4                     	ds	2
  1432                           
  1433                           	psect	cstackCOMMON
  1434     0070                     __pcstackCOMMON:
  1435     0070                     ?_Timer0_Init:
  1436     0070                     ?_ADC_Init:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439     0070                     ?_init7Segment:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442     0070                     ?_LCD_Init:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445     0070                     ?_LCD_Clear:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448     0070                     ?_timer:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451     0070                     ?_LCD_Cmd:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454     0070                     ?_putch:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457     0070                     ?_main:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460     0070                     ?_isr:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463     0070                     ?_LCD_Char:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466     0070                     ?i1_LCD_Cmd:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469     0070                     ?i1_LCD_Char:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472     0070                     ?i1_LCD_Send:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475     0070                     ?i1_LCD_Clear:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478     0070                     putch@c:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481     0070                     i1LCD_Send@RS:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484                           
  1485                           ; 2 bytes @ 0x0
  1486     0070                     	ds	2
  1487     0072                     i1LCD_Send@data:
  1488                           
  1489                           ; 1 bytes @ 0x2
  1490     0072                     	ds	1
  1491     0073                     ??i1_LCD_Send:
  1492                           
  1493                           ; 1 bytes @ 0x3
  1494     0073                     	ds	2
  1495     0075                     ??i1_LCD_Cmd:
  1496     0075                     ??i1_LCD_Char:	
  1497                           ; 1 bytes @ 0x5
  1498                           
  1499     0075                     i1LCD_Cmd@command:	
  1500                           ; 1 bytes @ 0x5
  1501                           
  1502     0075                     i1LCD_Char@data:	
  1503                           ; 1 bytes @ 0x5
  1504                           
  1505                           
  1506                           ; 1 bytes @ 0x5
  1507     0075                     	ds	1
  1508     0076                     ?i1_LCD_String:
  1509     0076                     ??i1_LCD_Clear:	
  1510                           ; 1 bytes @ 0x6
  1511                           
  1512     0076                     ?i1_lcd_set_cursor:	
  1513                           ; 1 bytes @ 0x6
  1514                           
  1515     0076                     i1lcd_set_cursor@line:	
  1516                           ; 1 bytes @ 0x6
  1517                           
  1518     0076                     i1LCD_String@text:	
  1519                           ; 1 bytes @ 0x6
  1520                           
  1521                           
  1522                           ; 2 bytes @ 0x6
  1523     0076                     	ds	1
  1524     0077                     ??i1_lcd_set_cursor:
  1525     0077                     i1lcd_set_cursor@col:	
  1526                           ; 1 bytes @ 0x7
  1527                           
  1528                           
  1529                           ; 1 bytes @ 0x7
  1530     0077                     	ds	1
  1531     0078                     ??i1_LCD_String:
  1532                           
  1533                           ; 1 bytes @ 0x8
  1534     0078                     	ds	1
  1535     0079                     ??_isr:
  1536                           
  1537                           ; 1 bytes @ 0x9
  1538     0079                     	ds	2
  1539                           
  1540                           	psect	cstackBANK0
  1541     0020                     __pcstackBANK0:
  1542     0020                     ??_Timer0_Init:
  1543     0020                     ??_ADC_Init:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546     0020                     ??_init7Segment:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549     0020                     ??_timer:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552     0020                     ?_LCD_Send:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555     0020                     ??_putch:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558     0020                     ?_ADC_Read:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561     0020                     ?_fputc:	
  1562                           ; 2 bytes @ 0x0
  1563                           
  1564     0020                     ?___wmul:	
  1565                           ; 2 bytes @ 0x0
  1566                           
  1567     0020                     ?___awdiv:	
  1568                           ; 2 bytes @ 0x0
  1569                           
  1570     0020                     ?___lwmod:	
  1571                           ; 2 bytes @ 0x0
  1572                           
  1573     0020                     LCD_Send@RS:	
  1574                           ; 2 bytes @ 0x0
  1575                           
  1576     0020                     ___wmul@multiplier:	
  1577                           ; 2 bytes @ 0x0
  1578                           
  1579     0020                     ___awdiv@divisor:	
  1580                           ; 2 bytes @ 0x0
  1581                           
  1582     0020                     ___lwmod@divisor:	
  1583                           ; 2 bytes @ 0x0
  1584                           
  1585     0020                     fputc@c:	
  1586                           ; 2 bytes @ 0x0
  1587                           
  1588                           
  1589                           ; 2 bytes @ 0x0
  1590     0020                     	ds	2
  1591     0022                     ??_ADC_Read:
  1592     0022                     LCD_Send@data:	
  1593                           ; 1 bytes @ 0x2
  1594                           
  1595     0022                     fputc@fp:	
  1596                           ; 1 bytes @ 0x2
  1597                           
  1598     0022                     ADC_Read@result:	
  1599                           ; 1 bytes @ 0x2
  1600                           
  1601     0022                     ___wmul@multiplicand:	
  1602                           ; 2 bytes @ 0x2
  1603                           
  1604     0022                     ___awdiv@dividend:	
  1605                           ; 2 bytes @ 0x2
  1606                           
  1607     0022                     ___lwmod@dividend:	
  1608                           ; 2 bytes @ 0x2
  1609                           
  1610                           
  1611                           ; 2 bytes @ 0x2
  1612     0022                     	ds	1
  1613     0023                     ??_LCD_Send:
  1614     0023                     ??_fputc:	
  1615                           ; 1 bytes @ 0x3
  1616                           
  1617                           
  1618                           ; 1 bytes @ 0x3
  1619     0023                     	ds	1
  1620     0024                     ??___wmul:
  1621     0024                     ??___awdiv:	
  1622                           ; 1 bytes @ 0x4
  1623                           
  1624     0024                     ??___lwmod:	
  1625                           ; 1 bytes @ 0x4
  1626                           
  1627     0024                     ADC_Read@channel:	
  1628                           ; 1 bytes @ 0x4
  1629                           
  1630     0024                     ___wmul@product:	
  1631                           ; 1 bytes @ 0x4
  1632                           
  1633                           
  1634                           ; 2 bytes @ 0x4
  1635     0024                     	ds	1
  1636     0025                     ??_LCD_Cmd:
  1637     0025                     ??_LCD_Char:	
  1638                           ; 1 bytes @ 0x5
  1639                           
  1640     0025                     LCD_Cmd@command:	
  1641                           ; 1 bytes @ 0x5
  1642                           
  1643     0025                     LCD_Char@data:	
  1644                           ; 1 bytes @ 0x5
  1645                           
  1646     0025                     ___awdiv@counter:	
  1647                           ; 1 bytes @ 0x5
  1648                           
  1649     0025                     ___lwmod@counter:	
  1650                           ; 1 bytes @ 0x5
  1651                           
  1652                           
  1653                           ; 1 bytes @ 0x5
  1654     0025                     	ds	1
  1655     0026                     ??_LCD_Init:
  1656     0026                     ??_LCD_Clear:	
  1657                           ; 1 bytes @ 0x6
  1658                           
  1659     0026                     ?_lcd_set_cursor:	
  1660                           ; 1 bytes @ 0x6
  1661                           
  1662     0026                     ?_LCD_String:	
  1663                           ; 1 bytes @ 0x6
  1664                           
  1665     0026                     ?___lwdiv:	
  1666                           ; 1 bytes @ 0x6
  1667                           
  1668     0026                     ?_read_prec_or_width:	
  1669                           ; 2 bytes @ 0x6
  1670                           
  1671     0026                     lcd_set_cursor@line:	
  1672                           ; 2 bytes @ 0x6
  1673                           
  1674     0026                     ___awdiv@sign:	
  1675                           ; 1 bytes @ 0x6
  1676                           
  1677     0026                     read_prec_or_width@ap:	
  1678                           ; 1 bytes @ 0x6
  1679                           
  1680     0026                     LCD_String@text:	
  1681                           ; 1 bytes @ 0x6
  1682                           
  1683     0026                     ___lwdiv@divisor:	
  1684                           ; 2 bytes @ 0x6
  1685                           
  1686                           
  1687                           ; 2 bytes @ 0x6
  1688     0026                     	ds	1
  1689     0027                     ??_lcd_set_cursor:
  1690     0027                     lcd_set_cursor@col:	
  1691                           ; 1 bytes @ 0x7
  1692                           
  1693     0027                     ___awdiv@quotient:	
  1694                           ; 1 bytes @ 0x7
  1695                           
  1696                           
  1697                           ; 2 bytes @ 0x7
  1698     0027                     	ds	1
  1699     0028                     ??_LCD_String:
  1700     0028                     ??_read_prec_or_width:	
  1701                           ; 1 bytes @ 0x8
  1702                           
  1703     0028                     ?_fputs:	
  1704                           ; 1 bytes @ 0x8
  1705                           
  1706     0028                     fputs@fp:	
  1707                           ; 2 bytes @ 0x8
  1708                           
  1709     0028                     ___lwdiv@dividend:	
  1710                           ; 1 bytes @ 0x8
  1711                           
  1712                           
  1713                           ; 2 bytes @ 0x8
  1714     0028                     	ds	1
  1715     0029                     ??_fputs:
  1716     0029                     ?___awmod:	
  1717                           ; 1 bytes @ 0x9
  1718                           
  1719     0029                     ___awmod@divisor:	
  1720                           ; 2 bytes @ 0x9
  1721                           
  1722                           
  1723                           ; 2 bytes @ 0x9
  1724     0029                     	ds	1
  1725     002A                     ??___lwdiv:
  1726                           
  1727                           ; 1 bytes @ 0xA
  1728     002A                     	ds	1
  1729     002B                     read_prec_or_width@c:
  1730     002B                     fputs@c:	
  1731                           ; 1 bytes @ 0xB
  1732                           
  1733     002B                     ___awmod@dividend:	
  1734                           ; 1 bytes @ 0xB
  1735                           
  1736     002B                     ___lwdiv@quotient:	
  1737                           ; 2 bytes @ 0xB
  1738                           
  1739                           
  1740                           ; 2 bytes @ 0xB
  1741     002B                     	ds	1
  1742     002C                     read_prec_or_width@n:
  1743     002C                     fputs@i:	
  1744                           ; 2 bytes @ 0xC
  1745                           
  1746                           
  1747                           ; 2 bytes @ 0xC
  1748     002C                     	ds	1
  1749     002D                     ??___awmod:
  1750     002D                     ___lwdiv@counter:	
  1751                           ; 1 bytes @ 0xD
  1752                           
  1753                           
  1754                           ; 1 bytes @ 0xD
  1755     002D                     	ds	1
  1756     002E                     ___awmod@counter:
  1757     002E                     read_prec_or_width@fmt:	
  1758                           ; 1 bytes @ 0xE
  1759                           
  1760     002E                     fputs@s:	
  1761                           ; 1 bytes @ 0xE
  1762                           
  1763                           
  1764                           ; 1 bytes @ 0xE
  1765     002E                     	ds	1
  1766     002F                     ?_pad:
  1767     002F                     ___awmod@sign:	
  1768                           ; 1 bytes @ 0xF
  1769                           
  1770     002F                     pad@buf:	
  1771                           ; 1 bytes @ 0xF
  1772                           
  1773                           
  1774                           ; 1 bytes @ 0xF
  1775     002F                     	ds	1
  1776     0030                     ?_seven_seg_Show:
  1777     0030                     seven_seg_Show@i:	
  1778                           ; 1 bytes @ 0x10
  1779                           
  1780     0030                     pad@p:	
  1781                           ; 2 bytes @ 0x10
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x10
  1785     0030                     	ds	2
  1786     0032                     ??_seven_seg_Show:
  1787     0032                     ??_pad:	
  1788                           ; 1 bytes @ 0x12
  1789                           
  1790                           
  1791                           ; 1 bytes @ 0x12
  1792     0032                     	ds	1
  1793     0033                     seven_seg_Show@tens_digit:
  1794     0033                     pad@i:	
  1795                           ; 1 bytes @ 0x13
  1796                           
  1797                           
  1798                           ; 2 bytes @ 0x13
  1799     0033                     	ds	1
  1800     0034                     seven_seg_Show@ones_digit:
  1801                           
  1802                           ; 1 bytes @ 0x14
  1803     0034                     	ds	1
  1804     0035                     pad@w:
  1805                           
  1806                           ; 2 bytes @ 0x15
  1807     0035                     	ds	2
  1808     0037                     pad@fp:
  1809                           
  1810                           ; 1 bytes @ 0x17
  1811     0037                     	ds	1
  1812     0038                     ?_utoa:
  1813     0038                     utoa@d:	
  1814                           ; 1 bytes @ 0x18
  1815                           
  1816                           
  1817                           ; 2 bytes @ 0x18
  1818     0038                     	ds	2
  1819     003A                     ??_utoa:
  1820                           
  1821                           ; 1 bytes @ 0x1A
  1822     003A                     	ds	1
  1823     003B                     utoa@w:
  1824                           
  1825                           ; 2 bytes @ 0x1B
  1826     003B                     	ds	2
  1827     003D                     utoa@fp:
  1828                           
  1829                           ; 1 bytes @ 0x1D
  1830     003D                     	ds	1
  1831     003E                     utoa@p:
  1832                           
  1833                           ; 2 bytes @ 0x1E
  1834     003E                     	ds	2
  1835     0040                     utoa@i:
  1836                           
  1837                           ; 2 bytes @ 0x20
  1838     0040                     	ds	2
  1839     0042                     ?_vfpfcnvrt:
  1840     0042                     vfpfcnvrt@fmt:	
  1841                           ; 1 bytes @ 0x22
  1842                           
  1843                           
  1844                           ; 1 bytes @ 0x22
  1845     0042                     	ds	1
  1846     0043                     vfpfcnvrt@ap:
  1847                           
  1848                           ; 1 bytes @ 0x23
  1849     0043                     	ds	1
  1850     0044                     ??_vfpfcnvrt:
  1851                           
  1852                           ; 1 bytes @ 0x24
  1853     0044                     	ds	4
  1854     0048                     vfpfcnvrt@convarg:
  1855                           
  1856                           ; 4 bytes @ 0x28
  1857     0048                     	ds	4
  1858     004C                     vfpfcnvrt@cp:
  1859                           
  1860                           ; 2 bytes @ 0x2C
  1861     004C                     	ds	2
  1862     004E                     vfpfcnvrt@fp:
  1863                           
  1864                           ; 1 bytes @ 0x2E
  1865     004E                     	ds	1
  1866     004F                     ?_vfprintf:
  1867     004F                     vfprintf@fmt:	
  1868                           ; 2 bytes @ 0x2F
  1869                           
  1870                           
  1871                           ; 2 bytes @ 0x2F
  1872     004F                     	ds	2
  1873     0051                     vfprintf@ap:
  1874                           
  1875                           ; 1 bytes @ 0x31
  1876     0051                     	ds	1
  1877     0052                     ??_vfprintf:
  1878                           
  1879                           ; 1 bytes @ 0x32
  1880     0052                     	ds	1
  1881     0053                     vfprintf@fp:
  1882                           
  1883                           ; 1 bytes @ 0x33
  1884     0053                     	ds	1
  1885     0054                     vfprintf@cfmt:
  1886                           
  1887                           ; 2 bytes @ 0x34
  1888     0054                     	ds	2
  1889     0056                     ?_sprintf:
  1890     0056                     sprintf@fmt:	
  1891                           ; 2 bytes @ 0x36
  1892                           
  1893                           
  1894                           ; 2 bytes @ 0x36
  1895     0056                     	ds	4
  1896     005A                     ??_sprintf:
  1897                           
  1898                           ; 1 bytes @ 0x3A
  1899     005A                     	ds	1
  1900     005B                     sprintf@ap:
  1901                           
  1902                           ; 1 bytes @ 0x3B
  1903     005B                     	ds	1
  1904     005C                     sprintf@s:
  1905                           
  1906                           ; 1 bytes @ 0x3C
  1907     005C                     	ds	1
  1908     005D                     sprintf@f:
  1909                           
  1910                           ; 11 bytes @ 0x3D
  1911     005D                     	ds	11
  1912     0068                     ??_main:
  1913                           
  1914                           ; 1 bytes @ 0x48
  1915     0068                     	ds	2
  1916                           
  1917                           	psect	maintext
  1918     004E                     __pmaintext:	
  1919 ;;
  1920 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1921 ;;
  1922 ;; *************** function _main *****************
  1923 ;; Defined at:
  1924 ;;		line 90 in file "timer.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  j               2   32[BANK1 ] int 
  1929 ;;  O2_level        2   36[BANK1 ] unsigned int 
  1930 ;;  PH_level        2   34[BANK1 ] unsigned int 
  1931 ;;  buffer         16   16[BANK1 ] unsigned char [16]
  1932 ;;  name           16    0[BANK1 ] unsigned char [16]
  1933 ;;  motor_status    2    0        unsigned int 
  1934 ;;  i               2    0        int 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : B3F/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         0       2      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:       40 bytes
  1949 ;; Hardware stack levels required when called: 12
  1950 ;; This function calls:
  1951 ;;		_ADC_Init
  1952 ;;		_ADC_Read
  1953 ;;		_LCD_Clear
  1954 ;;		_LCD_Init
  1955 ;;		_LCD_String
  1956 ;;		_Timer0_Init
  1957 ;;		___lwdiv
  1958 ;;		___wmul
  1959 ;;		_init7Segment
  1960 ;;		_lcd_set_cursor
  1961 ;;		_seven_seg_Show
  1962 ;;		_sprintf
  1963 ;;		_timer
  1964 ;; This function is called by:
  1965 ;;		Startup code after reset
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969     004E                     _main:	
  1970                           ;psect for function _main
  1971                           
  1972     004E                     l1918:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1975                           
  1976                           
  1977                           ;timer.c: 91:     TRISB = 0b00000000;
  1978     004E  0140               	movlb	0	; select bank0
  1979     004F  0192               	clrf	18	;volatile
  1980     0050                     l1920:
  1981                           
  1982                           ;timer.c: 92:     char name[16] = "Aung Win Htut";
  1983     0050  30C6               	movlw	low main@F12497
  1984     0051  0086               	movwf	6
  1985     0052  3000               	movlw	high main@F12497
  1986     0053  0087               	movwf	7
  1987     0054  30A0               	movlw	low main@name
  1988     0055  0084               	movwf	4
  1989     0056  3000               	movlw	high main@name
  1990     0057  0085               	movwf	5
  1991     0058  3010               	movlw	16
  1992     0059  00E8               	movwf	??_main
  1993     005A                     u1350:
  1994     005A  0016               	moviw fsr1++
  1995     005B  001A               	movwi fsr0++
  1996     005C  0BE8               	decfsz	??_main,f
  1997     005D  285A               	goto	u1350
  1998     005E                     l1922:
  1999     005E                     l1924:
  2000                           
  2001                           ;timer.c: 95:     Timer0_Init();
  2002     005E  3187  2747  3180   	fcall	_Timer0_Init
  2003     0061                     l1926:
  2004                           
  2005                           ;timer.c: 96:     ADC_Init();
  2006     0061  3186  26A3  3180   	fcall	_ADC_Init
  2007     0064                     l1928:
  2008                           
  2009                           ;timer.c: 97:     init7Segment();
  2010     0064  3187  273D  3180   	fcall	_init7Segment
  2011     0067                     l1930:
  2012                           
  2013                           ;timer.c: 98:     LCD_Init();
  2014     0067  3185  25B7  3180   	fcall	_LCD_Init
  2015     006A                     l1932:
  2016                           
  2017                           ;timer.c: 99:     LCD_Clear();
  2018     006A  3186  26F4  3180   	fcall	_LCD_Clear
  2019     006D                     l1934:
  2020     006D                     l1936:
  2021                           
  2022                           ;timer.c: 101:     _delay((unsigned long)((300)*(4000000/4000.0)));
  2023     006D  3002               	movlw	2
  2024     006E  0140               	movlb	0	; select bank0
  2025     006F  00E9               	movwf	??_main+1
  2026     0070  3086               	movlw	134
  2027     0071  00E8               	movwf	??_main
  2028     0072  3099               	movlw	153
  2029     0073                     u1397:
  2030     0073  0B89               	decfsz	9,f
  2031     0074  2873               	goto	u1397
  2032     0075  0BE8               	decfsz	??_main,f
  2033     0076  2873               	goto	u1397
  2034     0077  0BE9               	decfsz	??_main+1,f
  2035     0078  2873               	goto	u1397
  2036     0079                     l1938:
  2037                           
  2038                           ;timer.c: 107:         unsigned int O2_level = ADC_Read(0);
  2039     0079  3000               	movlw	0
  2040     007A  3186  265C  3180   	fcall	_ADC_Read
  2041     007D  0140               	movlb	0	; select bank0
  2042     007E  0821               	movf	?_ADC_Read+1,w
  2043     007F  0141               	movlb	1	; select bank1
  2044     0080  00C5               	movwf	(main@O2_level+1)^(0+128)
  2045     0081  0140               	movlb	0	; select bank0
  2046     0082  0820               	movf	?_ADC_Read,w
  2047     0083  0141               	movlb	1	; select bank1
  2048     0084  00C4               	movwf	main@O2_level^(0+128)
  2049     0085                     l1940:
  2050                           
  2051                           ;timer.c: 108:         O2_level = O2_level * 100 / 1023;
  2052     0085  30FF               	movlw	255
  2053     0086  0140               	movlb	0	; select bank0
  2054     0087  00A6               	movwf	___lwdiv@divisor
  2055     0088  3003               	movlw	3
  2056     0089  00A7               	movwf	___lwdiv@divisor+1
  2057     008A  0141               	movlb	1	; select bank1
  2058     008B  0845               	movf	(main@O2_level+1)^(0+128),w
  2059     008C  0140               	movlb	0	; select bank0
  2060     008D  00A1               	movwf	___wmul@multiplier+1
  2061     008E  0141               	movlb	1	; select bank1
  2062     008F  0844               	movf	main@O2_level^(0+128),w
  2063     0090  0140               	movlb	0	; select bank0
  2064     0091  00A0               	movwf	___wmul@multiplier
  2065     0092  3064               	movlw	100
  2066     0093  00A2               	movwf	___wmul@multiplicand
  2067     0094  3000               	movlw	0
  2068     0095  00A3               	movwf	___wmul@multiplicand+1
  2069     0096  3185  2597  3180   	fcall	___wmul
  2070     0099  0140               	movlb	0	; select bank0
  2071     009A  0821               	movf	?___wmul+1,w
  2072     009B  00A9               	movwf	___lwdiv@dividend+1
  2073     009C  0820               	movf	?___wmul,w
  2074     009D  00A8               	movwf	___lwdiv@dividend
  2075     009E  3184  24A0  3180   	fcall	___lwdiv
  2076     00A1  0140               	movlb	0	; select bank0
  2077     00A2  0827               	movf	?___lwdiv+1,w
  2078     00A3  0141               	movlb	1	; select bank1
  2079     00A4  00C5               	movwf	(main@O2_level+1)^(0+128)
  2080     00A5  0140               	movlb	0	; select bank0
  2081     00A6  0826               	movf	?___lwdiv,w
  2082     00A7  0141               	movlb	1	; select bank1
  2083     00A8  00C4               	movwf	main@O2_level^(0+128)
  2084     00A9                     l1942:
  2085                           
  2086                           ;timer.c: 109:         sprintf(buffer, "O2 lvl = %3u%%", O2_level);
  2087     00A9  30D6               	movlw	low (STR_1| (0+32768))
  2088     00AA  0140               	movlb	0	; select bank0
  2089     00AB  00D6               	movwf	sprintf@fmt
  2090     00AC  3086               	movlw	high (STR_1| (0+32768))
  2091     00AD  00D7               	movwf	sprintf@fmt+1
  2092     00AE  0141               	movlb	1	; select bank1
  2093     00AF  0845               	movf	(main@O2_level+1)^(0+128),w
  2094     00B0  0140               	movlb	0	; select bank0
  2095     00B1  00D9               	movwf	?_sprintf+3
  2096     00B2  0141               	movlb	1	; select bank1
  2097     00B3  0844               	movf	main@O2_level^(0+128),w
  2098     00B4  0140               	movlb	0	; select bank0
  2099     00B5  00D8               	movwf	?_sprintf+2
  2100     00B6  30B0               	movlw	(low (main@buffer| 0))& (0+255)
  2101     00B7  3185  25D7  3180   	fcall	_sprintf
  2102     00BA                     l1944:
  2103                           
  2104                           ;timer.c: 111:         for(int j=0;j<10;j++)
  2105     00BA  0141               	movlb	1	; select bank1
  2106     00BB  01C0               	clrf	main@j^(0+128)
  2107     00BC  01C1               	clrf	(main@j+1)^(0+128)
  2108     00BD                     l1950:
  2109                           
  2110                           ;timer.c: 112:             seven_seg_Show(O2_level);
  2111     00BD  0141               	movlb	1	; select bank1
  2112     00BE  0845               	movf	(main@O2_level+1)^(0+128),w
  2113     00BF  0140               	movlb	0	; select bank0
  2114     00C0  00B1               	movwf	seven_seg_Show@i+1
  2115     00C1  0141               	movlb	1	; select bank1
  2116     00C2  0844               	movf	main@O2_level^(0+128),w
  2117     00C3  0140               	movlb	0	; select bank0
  2118     00C4  00B0               	movwf	seven_seg_Show@i
  2119     00C5  3184  2411  3180   	fcall	_seven_seg_Show
  2120     00C8                     l1952:
  2121     00C8  3001               	movlw	1
  2122     00C9  0141               	movlb	1	; select bank1
  2123     00CA  07C0               	addwf	main@j^(0+128),f
  2124     00CB  3000               	movlw	0
  2125     00CC  3DC1               	addwfc	(main@j+1)^(0+128),f
  2126     00CD                     l1954:
  2127     00CD  0841               	movf	(main@j+1)^(0+128),w
  2128     00CE  3A80               	xorlw	128
  2129     00CF  0140               	movlb	0	; select bank0
  2130     00D0  00E8               	movwf	??_main
  2131     00D1  3080               	movlw	128
  2132     00D2  0268               	subwf	??_main,w
  2133     00D3  1D03               	skipz
  2134     00D4  28D8               	goto	u1365
  2135     00D5  300A               	movlw	10
  2136     00D6  0141               	movlb	1	; select bank1
  2137     00D7  0240               	subwf	main@j^(0+128),w
  2138     00D8                     u1365:
  2139     00D8  1C03               	skipc
  2140     00D9  28DB               	goto	u1361
  2141     00DA  28DC               	goto	u1360
  2142     00DB                     u1361:
  2143     00DB  28BD               	goto	l1950
  2144     00DC                     u1360:
  2145     00DC                     l1956:
  2146                           
  2147                           ;timer.c: 113:         if(O2_level<=20)
  2148     00DC  3000               	movlw	0
  2149     00DD  0141               	movlb	1	; select bank1
  2150     00DE  0245               	subwf	(main@O2_level+1)^(0+128),w
  2151     00DF  3015               	movlw	21
  2152     00E0  1903               	skipnz
  2153     00E1  0244               	subwf	main@O2_level^(0+128),w
  2154     00E2  1803               	skipnc
  2155     00E3  28E5               	goto	u1371
  2156     00E4  28E6               	goto	u1370
  2157     00E5                     u1371:
  2158     00E5  2905               	goto	l1972
  2159     00E6                     u1370:
  2160     00E6                     l1958:
  2161     00E6                     l1960:
  2162                           
  2163                           ;timer.c: 117:             LATBbits.LATB0 = 1;
  2164     00E6  0140               	movlb	0	; select bank0
  2165     00E7  1417               	bsf	23,0	;volatile
  2166     00E8                     l1962:
  2167                           
  2168                           ;timer.c: 118:             LCD_Clear();
  2169     00E8  3186  26F4  3180   	fcall	_LCD_Clear
  2170     00EB                     l1964:
  2171                           
  2172                           ;timer.c: 119:             lcd_set_cursor(1,1);
  2173     00EB  0140               	movlb	0	; select bank0
  2174     00EC  01A6               	clrf	lcd_set_cursor@line
  2175     00ED  0AA6               	incf	lcd_set_cursor@line,f
  2176     00EE  3001               	movlw	1
  2177     00EF  3186  262A  3180   	fcall	_lcd_set_cursor
  2178     00F2                     l1966:
  2179                           
  2180                           ;timer.c: 120:             LCD_String("O2 is in danger!");
  2181     00F2  30B5               	movlw	low (STR_2| (0+32768))
  2182     00F3  0140               	movlb	0	; select bank0
  2183     00F4  00A6               	movwf	LCD_String@text
  2184     00F5  3086               	movlw	high (STR_2| (0+32768))
  2185     00F6  00A7               	movwf	LCD_String@text+1
  2186     00F7  3186  2643  3180   	fcall	_LCD_String
  2187     00FA                     l1968:
  2188                           
  2189                           ;timer.c: 121:             timer();
  2190     00FA  3187  2702  3180   	fcall	_timer
  2191     00FD                     l1970:
  2192                           
  2193                           ;timer.c: 122:             _delay((unsigned long)((30)*(4000000/4000.0)));
  2194     00FD  3027               	movlw	39
  2195     00FE  0140               	movlb	0	; select bank0
  2196     00FF  00E8               	movwf	??_main
  2197     0100  30F5               	movlw	245
  2198     0101                     u1407:
  2199     0101  0B89               	decfsz	9,f
  2200     0102  2901               	goto	u1407
  2201     0103  0BE8               	decfsz	??_main,f
  2202     0104  2901               	goto	u1407
  2203     0105                     l1972:
  2204                           
  2205                           ;timer.c: 130:         LCD_Clear();
  2206     0105  3186  26F4  3180   	fcall	_LCD_Clear
  2207     0108                     l1974:
  2208                           
  2209                           ;timer.c: 131:         lcd_set_cursor(1,1);
  2210     0108  0140               	movlb	0	; select bank0
  2211     0109  01A6               	clrf	lcd_set_cursor@line
  2212     010A  0AA6               	incf	lcd_set_cursor@line,f
  2213     010B  3001               	movlw	1
  2214     010C  3186  262A  3180   	fcall	_lcd_set_cursor
  2215     010F                     l1976:
  2216                           
  2217                           ;timer.c: 132:         LCD_String(buffer);
  2218     010F  30B0               	movlw	low main@buffer
  2219     0110  0140               	movlb	0	; select bank0
  2220     0111  00A6               	movwf	LCD_String@text
  2221     0112  3000               	movlw	high main@buffer
  2222     0113  00A7               	movwf	LCD_String@text+1
  2223     0114  3186  2643  3180   	fcall	_LCD_String
  2224     0117                     l1978:
  2225                           
  2226                           ;timer.c: 135:         unsigned int PH_level = ADC_Read(1);
  2227     0117  3001               	movlw	1
  2228     0118  3186  265C  3180   	fcall	_ADC_Read
  2229     011B  0140               	movlb	0	; select bank0
  2230     011C  0821               	movf	?_ADC_Read+1,w
  2231     011D  0141               	movlb	1	; select bank1
  2232     011E  00C3               	movwf	(main@PH_level+1)^(0+128)
  2233     011F  0140               	movlb	0	; select bank0
  2234     0120  0820               	movf	?_ADC_Read,w
  2235     0121  0141               	movlb	1	; select bank1
  2236     0122  00C2               	movwf	main@PH_level^(0+128)
  2237     0123                     l1980:
  2238                           
  2239                           ;timer.c: 136:         PH_level = PH_level * 14 / 1023;
  2240     0123  30FF               	movlw	255
  2241     0124  0140               	movlb	0	; select bank0
  2242     0125  00A6               	movwf	___lwdiv@divisor
  2243     0126  3003               	movlw	3
  2244     0127  00A7               	movwf	___lwdiv@divisor+1
  2245     0128  0141               	movlb	1	; select bank1
  2246     0129  0843               	movf	(main@PH_level+1)^(0+128),w
  2247     012A  0140               	movlb	0	; select bank0
  2248     012B  00A1               	movwf	___wmul@multiplier+1
  2249     012C  0141               	movlb	1	; select bank1
  2250     012D  0842               	movf	main@PH_level^(0+128),w
  2251     012E  0140               	movlb	0	; select bank0
  2252     012F  00A0               	movwf	___wmul@multiplier
  2253     0130  300E               	movlw	14
  2254     0131  00A2               	movwf	___wmul@multiplicand
  2255     0132  3000               	movlw	0
  2256     0133  00A3               	movwf	___wmul@multiplicand+1
  2257     0134  3185  2597  3180   	fcall	___wmul
  2258     0137  0140               	movlb	0	; select bank0
  2259     0138  0821               	movf	?___wmul+1,w
  2260     0139  00A9               	movwf	___lwdiv@dividend+1
  2261     013A  0820               	movf	?___wmul,w
  2262     013B  00A8               	movwf	___lwdiv@dividend
  2263     013C  3184  24A0  3180   	fcall	___lwdiv
  2264     013F  0140               	movlb	0	; select bank0
  2265     0140  0827               	movf	?___lwdiv+1,w
  2266     0141  0141               	movlb	1	; select bank1
  2267     0142  00C3               	movwf	(main@PH_level+1)^(0+128)
  2268     0143  0140               	movlb	0	; select bank0
  2269     0144  0826               	movf	?___lwdiv,w
  2270     0145  0141               	movlb	1	; select bank1
  2271     0146  00C2               	movwf	main@PH_level^(0+128)
  2272     0147                     l1982:
  2273                           
  2274                           ;timer.c: 137:         sprintf(buffer, "PH lvl = %3u%%", PH_level);
  2275     0147  30E5               	movlw	low (STR_3| (0+32768))
  2276     0148  0140               	movlb	0	; select bank0
  2277     0149  00D6               	movwf	sprintf@fmt
  2278     014A  3086               	movlw	high (STR_3| (0+32768))
  2279     014B  00D7               	movwf	sprintf@fmt+1
  2280     014C  0141               	movlb	1	; select bank1
  2281     014D  0843               	movf	(main@PH_level+1)^(0+128),w
  2282     014E  0140               	movlb	0	; select bank0
  2283     014F  00D9               	movwf	?_sprintf+3
  2284     0150  0141               	movlb	1	; select bank1
  2285     0151  0842               	movf	main@PH_level^(0+128),w
  2286     0152  0140               	movlb	0	; select bank0
  2287     0153  00D8               	movwf	?_sprintf+2
  2288     0154  30B0               	movlw	(low (main@buffer| 0))& (0+255)
  2289     0155  3185  25D7  3180   	fcall	_sprintf
  2290     0158                     l1984:
  2291                           
  2292                           ;timer.c: 138:         lcd_set_cursor(1,2);
  2293     0158  3002               	movlw	2
  2294     0159  0140               	movlb	0	; select bank0
  2295     015A  00A6               	movwf	lcd_set_cursor@line
  2296     015B  3001               	movlw	1
  2297     015C  3186  262A  3180   	fcall	_lcd_set_cursor
  2298     015F                     l1986:
  2299                           
  2300                           ;timer.c: 139:         LCD_String(buffer);
  2301     015F  30B0               	movlw	low main@buffer
  2302     0160  0140               	movlb	0	; select bank0
  2303     0161  00A6               	movwf	LCD_String@text
  2304     0162  3000               	movlw	high main@buffer
  2305     0163  00A7               	movwf	LCD_String@text+1
  2306     0164  3186  2643  3180   	fcall	_LCD_String
  2307     0167                     l1988:
  2308                           
  2309                           ;timer.c: 140:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2310     0167  3082               	movlw	130
  2311     0168  0140               	movlb	0	; select bank0
  2312     0169  00E8               	movwf	??_main
  2313     016A  30DD               	movlw	221
  2314     016B                     u1417:
  2315     016B  0B89               	decfsz	9,f
  2316     016C  296B               	goto	u1417
  2317     016D  0BE8               	decfsz	??_main,f
  2318     016E  296B               	goto	u1417
  2319     016F  3200               	nop2
  2320     0170  2879               	goto	l1938
  2321     0171  3180  282F         	ljmp	start
  2322     0173                     __end_of_main:
  2323                           
  2324                           	psect	text1
  2325     0702                     __ptext1:	
  2326 ;; *************** function _timer *****************
  2327 ;; Defined at:
  2328 ;;		line 169 in file "timer.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 4
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356     0702                     _timer:	
  2357                           ;psect for function _timer
  2358                           
  2359     0702                     l1888:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _timer: [wreg]
  2362                           
  2363                           
  2364                           ;timer.c: 171:     INTCONbits.GIE = 0;
  2365     0702  138B               	bcf	11,7	;volatile
  2366     0703                     l1890:
  2367                           
  2368                           ;timer.c: 172:     T0CON0 = 0b10000100;
  2369     0703  3084               	movlw	132
  2370     0704  0140               	movlb	0	; select bank0
  2371     0705  009E               	movwf	30	;volatile
  2372                           
  2373                           ;timer.c: 173:     T0CON1 = 0b01001011;
  2374     0706  304B               	movlw	75
  2375     0707  009F               	movwf	31	;volatile
  2376                           
  2377                           ;timer.c: 174:     TMR0H = 200;
  2378     0708  30C8               	movlw	200
  2379     0709  009D               	movwf	29	;volatile
  2380     070A                     l1892:
  2381                           
  2382                           ;timer.c: 175:     PIR0bits.TMR0IF = 0;
  2383     070A  014E               	movlb	14	; select bank14
  2384     070B  128C               	bcf	12,5	;volatile
  2385     070C                     l1894:
  2386                           
  2387                           ;timer.c: 176:     PIE0bits.TMR0IE = 1;
  2388     070C  1696               	bsf	22,5	;volatile
  2389     070D                     l1896:
  2390                           
  2391                           ;timer.c: 177:     INTCONbits.GIE = 1;
  2392     070D  178B               	bsf	11,7	;volatile
  2393     070E                     l113:
  2394     070E  0008               	return
  2395     070F                     __end_of_timer:
  2396                           
  2397                           	psect	text2
  2398     05D7                     __ptext2:	
  2399 ;; *************** function _sprintf *****************
  2400 ;; Defined at:
  2401 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  s               1    wreg     PTR unsigned char 
  2404 ;;		 -> main@buffer(16), 
  2405 ;;  fmt             2   54[BANK0 ] PTR const unsigned char 
  2406 ;;		 -> STR_3(15), STR_1(15), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  s               1   60[BANK0 ] PTR unsigned char 
  2409 ;;		 -> main@buffer(16), 
  2410 ;;  f              11   61[BANK0 ] struct _IO_FILE
  2411 ;;  ret             2    0        int 
  2412 ;;  ap              1   59[BANK0 ] PTR void [1]
  2413 ;;		 -> ?_sprintf(2), 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  2   54[BANK0 ] int 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2424 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2426 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2427 ;;Total ram usage:       18 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 11
  2430 ;; This function calls:
  2431 ;;		_vfprintf
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437     05D7                     _sprintf:	
  2438                           ;psect for function _sprintf
  2439                           
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2443                           ;sprintf@s stored from wreg
  2444     05D7  0140               	movlb	0	; select bank0
  2445     05D8  00DC               	movwf	sprintf@s
  2446     05D9                     l1842:
  2447     05D9  3058               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2448     05DA  00DB               	movwf	sprintf@ap
  2449     05DB  085C               	movf	sprintf@s,w
  2450     05DC  00DD               	movwf	sprintf@f
  2451     05DD                     l1844:
  2452     05DD  01DF               	clrf	sprintf@f+2
  2453     05DE  01E0               	clrf	sprintf@f+3
  2454     05DF                     l1846:
  2455     05DF  01E6               	clrf	sprintf@f+9
  2456     05E0  01E7               	clrf	sprintf@f+10
  2457     05E1                     l1848:
  2458     05E1  0857               	movf	sprintf@fmt+1,w
  2459     05E2  00D0               	movwf	vfprintf@fmt+1
  2460     05E3  0856               	movf	sprintf@fmt,w
  2461     05E4  00CF               	movwf	vfprintf@fmt
  2462     05E5  305B               	movlw	(low (sprintf@ap| 0))& (0+255)
  2463     05E6  00D1               	movwf	vfprintf@ap
  2464     05E7  305D               	movlw	(low (sprintf@f| 0))& (0+255)
  2465     05E8  3185  25F4  3185   	fcall	_vfprintf
  2466     05EB                     l1850:
  2467     05EB  0140               	movlb	0	; select bank0
  2468     05EC  085F               	movf	sprintf@f+2,w
  2469     05ED  075C               	addwf	sprintf@s,w
  2470     05EE  00DA               	movwf	??_sprintf
  2471     05EF  085A               	movf	??_sprintf,w
  2472     05F0  0086               	movwf	6
  2473     05F1  0187               	clrf	7
  2474     05F2  0181               	clrf	1
  2475     05F3                     l773:
  2476     05F3  0008               	return
  2477     05F4                     __end_of_sprintf:
  2478                           
  2479                           	psect	text3
  2480     05F4                     __ptext3:	
  2481 ;; *************** function _vfprintf *****************
  2482 ;; Defined at:
  2483 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  fp              1    wreg     PTR struct _IO_FILE
  2486 ;;		 -> sprintf@f(11), 
  2487 ;;  fmt             2   47[BANK0 ] PTR const unsigned char 
  2488 ;;		 -> STR_3(15), STR_1(15), 
  2489 ;;  ap              1   49[BANK0 ] PTR PTR void 
  2490 ;;		 -> sprintf@ap(1), 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
  2493 ;;		 -> sprintf@f(11), 
  2494 ;;  cfmt            2   52[BANK0 ] PTR unsigned char 
  2495 ;;		 -> STR_3(15), STR_1(15), 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  2   47[BANK0 ] int 
  2498 ;; Registers used:
  2499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2505 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2506 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2507 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2508 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2509 ;;Total ram usage:        7 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 10
  2512 ;; This function calls:
  2513 ;;		_vfpfcnvrt
  2514 ;; This function is called by:
  2515 ;;		_sprintf
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519     05F4                     _vfprintf:	
  2520                           ;psect for function _vfprintf
  2521                           
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2525                           ;vfprintf@fp stored from wreg
  2526     05F4  0140               	movlb	0	; select bank0
  2527     05F5  00D3               	movwf	vfprintf@fp
  2528     05F6                     l1778:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2531     05F6  0850               	movf	vfprintf@fmt+1,w
  2532     05F7  00D5               	movwf	vfprintf@cfmt+1
  2533     05F8  084F               	movf	vfprintf@fmt,w
  2534     05F9  00D4               	movwf	vfprintf@cfmt
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2537     05FA  2E03               	goto	l1782
  2538     05FB                     l1780:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2541     05FB  3054               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2542     05FC  00C2               	movwf	vfpfcnvrt@fmt
  2543     05FD  0851               	movf	vfprintf@ap,w
  2544     05FE  00C3               	movwf	vfpfcnvrt@ap
  2545     05FF  0853               	movf	vfprintf@fp,w
  2546     0600  3181  2173  3185   	fcall	_vfpfcnvrt
  2547     0603                     l1782:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2550     0603  0140               	movlb	0	; select bank0
  2551     0604  0854               	movf	vfprintf@cfmt,w
  2552     0605  0084               	movwf	4
  2553     0606  0855               	movf	vfprintf@cfmt+1,w
  2554     0607  0085               	movwf	5
  2555     0608  0012               	moviw fsr0++
  2556     0609  1D03               	btfss	3,2
  2557     060A  2E0C               	goto	u1271
  2558     060B  2E0D               	goto	u1270
  2559     060C                     u1271:
  2560     060C  2DFB               	goto	l1780
  2561     060D                     u1270:
  2562     060D                     l1784:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2565     060D  01CF               	clrf	?_vfprintf
  2566     060E  01D0               	clrf	?_vfprintf+1
  2567     060F                     l837:
  2568     060F  0008               	return
  2569     0610                     __end_of_vfprintf:
  2570                           
  2571                           	psect	text4
  2572     0173                     __ptext4:	
  2573 ;; *************** function _vfpfcnvrt *****************
  2574 ;; Defined at:
  2575 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  fp              1    wreg     PTR struct _IO_FILE
  2578 ;;		 -> sprintf@f(11), 
  2579 ;;  fmt             1   34[BANK0 ] PTR PTR unsigned char 
  2580 ;;		 -> vfprintf@cfmt(2), 
  2581 ;;  ap              1   35[BANK0 ] PTR PTR void 
  2582 ;;		 -> sprintf@ap(1), 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  fp              1   46[BANK0 ] PTR struct _IO_FILE
  2585 ;;		 -> sprintf@f(11), 
  2586 ;;  convarg         4   40[BANK0 ] struct .
  2587 ;;  cp              2   44[BANK0 ] PTR unsigned char 
  2588 ;;		 -> STR_3(15), STR_1(15), 
  2589 ;;  i               2    0        int 
  2590 ;;  done            2    0        int 
  2591 ;;  c               1    0        unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2604 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:       13 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 9
  2608 ;; This function calls:
  2609 ;;		_fputc
  2610 ;;		_read_prec_or_width
  2611 ;;		_utoa
  2612 ;; This function is called by:
  2613 ;;		_vfprintf
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617     0173                     _vfpfcnvrt:	
  2618                           ;psect for function _vfpfcnvrt
  2619                           
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2623                           ;vfpfcnvrt@fp stored from wreg
  2624     0173  0140               	movlb	0	; select bank0
  2625     0174  00CE               	movwf	vfpfcnvrt@fp
  2626     0175                     l1616:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2629     0175  0842               	movf	vfpfcnvrt@fmt,w
  2630     0176  0086               	movwf	6
  2631     0177  0187               	clrf	7
  2632     0178  3F40               	moviw [0]fsr1
  2633     0179  00C4               	movwf	??_vfpfcnvrt
  2634     017A  3F41               	moviw [1]fsr1
  2635     017B  00C5               	movwf	??_vfpfcnvrt+1
  2636     017C  0844               	movf	??_vfpfcnvrt,w
  2637     017D  0084               	movwf	4
  2638     017E  0845               	movf	??_vfpfcnvrt+1,w
  2639     017F  0085               	movwf	5
  2640     0180  0012               	moviw fsr0++
  2641     0181  3A25               	xorlw	37
  2642     0182  1D03               	btfss	3,2
  2643     0183  2985               	goto	u1031
  2644     0184  2986               	goto	u1030
  2645     0185                     u1031:
  2646     0185  2A20               	goto	l1660
  2647     0186                     u1030:
  2648     0186                     l1618:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2651     0186  0842               	movf	vfpfcnvrt@fmt,w
  2652     0187  0086               	movwf	6
  2653     0188  0187               	clrf	7
  2654     0189  3001               	movlw	1
  2655     018A  0781               	addwf	1,f
  2656     018B  3141               	addfsr 1,1
  2657     018C  1803               	skipnc
  2658     018D  0A81               	incf	1,f
  2659     018E                     l1620:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2662     018E  01EA               	clrf	_width
  2663     018F  01EB               	clrf	_width+1
  2664     0190  1003               	clrc
  2665     0191  3000               	movlw	0
  2666     0192  1803               	btfsc	3,0
  2667     0193  3001               	movlw	1
  2668     0194  00EE               	movwf	_flags
  2669     0195                     l1622:
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2672     0195  30FF               	movlw	255
  2673     0196  00EC               	movwf	_prec
  2674     0197  30FF               	movlw	255
  2675     0198  00ED               	movwf	_prec+1
  2676     0199                     l1624:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2679     0199  0843               	movf	vfpfcnvrt@ap,w
  2680     019A  00A6               	movwf	read_prec_or_width@ap
  2681     019B  0842               	movf	vfpfcnvrt@fmt,w
  2682     019C  3182  22AB  3181   	fcall	_read_prec_or_width
  2683     019F  0140               	movlb	0	; select bank0
  2684     01A0  0827               	movf	?_read_prec_or_width+1,w
  2685     01A1  00EB               	movwf	_width+1
  2686     01A2  0826               	movf	?_read_prec_or_width,w
  2687     01A3  00EA               	movwf	_width
  2688     01A4                     l1626:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  2691     01A4  1FEB               	btfss	_width+1,7
  2692     01A5  29A7               	goto	u1041
  2693     01A6  29A8               	goto	u1040
  2694     01A7                     u1041:
  2695     01A7  29AE               	goto	l1632
  2696     01A8                     u1040:
  2697     01A8                     l1628:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  2700     01A8  146E               	bsf	_flags,0
  2701     01A9                     l1630:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  2704     01A9  09EA               	comf	_width,f
  2705     01AA  09EB               	comf	_width+1,f
  2706     01AB  0AEA               	incf	_width,f
  2707     01AC  1903               	skipnz
  2708     01AD  0AEB               	incf	_width+1,f
  2709     01AE                     l1632:
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1265:   if (0
  2712     01AE  0842               	movf	vfpfcnvrt@fmt,w
  2713     01AF  0086               	movwf	6
  2714     01B0  0187               	clrf	7
  2715     01B1  3F40               	moviw [0]fsr1
  2716     01B2  00CC               	movwf	vfpfcnvrt@cp
  2717     01B3  3F41               	moviw [1]fsr1
  2718     01B4  00CD               	movwf	vfpfcnvrt@cp+1
  2719     01B5                     l1634:
  2720     01B5  084C               	movf	vfpfcnvrt@cp,w
  2721     01B6  0084               	movwf	4
  2722     01B7  084D               	movf	vfpfcnvrt@cp+1,w
  2723     01B8  0085               	movwf	5
  2724     01B9  0012               	moviw fsr0++
  2725     01BA  3A75               	xorlw	117
  2726     01BB  1D03               	btfss	3,2
  2727     01BC  29BE               	goto	u1051
  2728     01BD  29BF               	goto	u1050
  2729     01BE                     u1051:
  2730     01BE  29F3               	goto	l1648
  2731     01BF                     u1050:
  2732     01BF                     l1636:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1278:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1321:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2735     01BF  0843               	movf	vfpfcnvrt@ap,w
  2736     01C0  0086               	movwf	6
  2737     01C1  0187               	clrf	7
  2738     01C2  0801               	movf	1,w
  2739     01C3  0084               	movwf	4
  2740     01C4  0185               	clrf	5
  2741     01C5  3002               	movlw	2
  2742     01C6  0781               	addwf	1,f
  2743     01C7  3F00               	moviw [0]fsr0
  2744     01C8  00C8               	movwf	vfpfcnvrt@convarg
  2745     01C9  3F01               	moviw [1]fsr0
  2746     01CA  00C9               	movwf	vfpfcnvrt@convarg+1
  2747     01CB                     l1638:
  2748                           
  2749                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  2750     01CB  084C               	movf	vfpfcnvrt@cp,w
  2751     01CC  3E01               	addlw	1
  2752     01CD  00C4               	movwf	??_vfpfcnvrt
  2753     01CE  3000               	movlw	0
  2754     01CF  3D4D               	addwfc	vfpfcnvrt@cp+1,w
  2755     01D0  00C5               	movwf	??_vfpfcnvrt+1
  2756     01D1  0842               	movf	vfpfcnvrt@fmt,w
  2757     01D2  0086               	movwf	6
  2758     01D3  0187               	clrf	7
  2759     01D4  0844               	movf	??_vfpfcnvrt,w
  2760     01D5  3FC0               	movwi [0]fsr1
  2761     01D6  0845               	movf	??_vfpfcnvrt+1,w
  2762     01D7  3FC1               	movwi [1]fsr1
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  2765     01D8  29E2               	goto	l1646
  2766     01D9                     l1640:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1331:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  2769     01D9  0849               	movf	vfpfcnvrt@convarg+1,w
  2770     01DA  00B9               	movwf	utoa@d+1
  2771     01DB  0848               	movf	vfpfcnvrt@convarg,w
  2772     01DC  00B8               	movwf	utoa@d
  2773     01DD  084E               	movf	vfpfcnvrt@fp,w
  2774     01DE  3182  2239  3181   	fcall	_utoa
  2775     01E1  2A38               	goto	l829
  2776     01E2                     l1646:
  2777     01E2  084C               	movf	vfpfcnvrt@cp,w
  2778     01E3  0084               	movwf	4
  2779     01E4  084D               	movf	vfpfcnvrt@cp+1,w
  2780     01E5  0085               	movwf	5
  2781     01E6  0800               	movf	0,w	;code access
  2782     01E7  00C4               	movwf	??_vfpfcnvrt
  2783     01E8  01C5               	clrf	??_vfpfcnvrt+1
  2784                           
  2785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2786                           ; Switch size 1, requested type "simple"
  2787                           ; Number of cases is 1, Range of values is 0 to 0
  2788                           ; switch strategies available:
  2789                           ; Name         Instructions Cycles
  2790                           ; simple_byte            4     3 (average)
  2791                           ; direct_byte            8     6 (fixed)
  2792                           ; jumptable            260     6 (fixed)
  2793                           ;	Chosen strategy is simple_byte
  2794     01E9  0845               	movf	??_vfpfcnvrt+1,w
  2795     01EA  3A00               	xorlw	0	; case 0
  2796     01EB  1903               	skipnz
  2797     01EC  29EE               	goto	l2022
  2798     01ED  29F3               	goto	l1648
  2799     01EE                     l2022:
  2800                           
  2801                           ; Switch size 1, requested type "simple"
  2802                           ; Number of cases is 1, Range of values is 117 to 117
  2803                           ; switch strategies available:
  2804                           ; Name         Instructions Cycles
  2805                           ; simple_byte            4     3 (average)
  2806                           ; direct_byte           11     9 (fixed)
  2807                           ; jumptable            263     9 (fixed)
  2808                           ;	Chosen strategy is simple_byte
  2809     01EE  0844               	movf	??_vfpfcnvrt,w
  2810     01EF  3A75               	xorlw	117	; case 117
  2811     01F0  1903               	skipnz
  2812     01F1  29D9               	goto	l1640
  2813     01F2  29F3               	goto	l1648
  2814     01F3                     l1648:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1527:         if 
      +                          ((*fmt)[0] == '%') {
  2817     01F3  0842               	movf	vfpfcnvrt@fmt,w
  2818     01F4  0086               	movwf	6
  2819     01F5  0187               	clrf	7
  2820     01F6  3F40               	moviw [0]fsr1
  2821     01F7  00C4               	movwf	??_vfpfcnvrt
  2822     01F8  3F41               	moviw [1]fsr1
  2823     01F9  00C5               	movwf	??_vfpfcnvrt+1
  2824     01FA  0844               	movf	??_vfpfcnvrt,w
  2825     01FB  0084               	movwf	4
  2826     01FC  0845               	movf	??_vfpfcnvrt+1,w
  2827     01FD  0085               	movwf	5
  2828     01FE  0012               	moviw fsr0++
  2829     01FF  3A25               	xorlw	37
  2830     0200  1D03               	btfss	3,2
  2831     0201  2A03               	goto	u1061
  2832     0202  2A04               	goto	u1060
  2833     0203                     u1061:
  2834     0203  2A16               	goto	l1656
  2835     0204                     u1060:
  2836     0204                     l1650:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1528:            
      +                           ++*fmt;
  2839     0204  0842               	movf	vfpfcnvrt@fmt,w
  2840     0205  0086               	movwf	6
  2841     0206  0187               	clrf	7
  2842     0207  3001               	movlw	1
  2843     0208  0781               	addwf	1,f
  2844     0209  3141               	addfsr 1,1
  2845     020A  1803               	skipnc
  2846     020B  0A81               	incf	1,f
  2847     020C                     l1652:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1529:            
      +                           fputc((int)'%', fp);
  2850     020C  3025               	movlw	37
  2851     020D  00A0               	movwf	fputc@c
  2852     020E  3000               	movlw	0
  2853     020F  00A1               	movwf	fputc@c+1
  2854     0210  084E               	movf	vfpfcnvrt@fp,w
  2855     0211  00A2               	movwf	fputc@fp
  2856     0212  3183  23BF  3181   	fcall	_fputc
  2857     0215  2A38               	goto	l829
  2858     0216                     l1656:
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2861     0216  0140               	movlb	0	; select bank0
  2862     0217  0842               	movf	vfpfcnvrt@fmt,w
  2863     0218  0086               	movwf	6
  2864     0219  0187               	clrf	7
  2865     021A  3001               	movlw	1
  2866     021B  0781               	addwf	1,f
  2867     021C  3141               	addfsr 1,1
  2868     021D  1803               	skipnc
  2869     021E  0A81               	incf	1,f
  2870     021F  2A38               	goto	l829
  2871     0220                     l1660:
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2874     0220  0842               	movf	vfpfcnvrt@fmt,w
  2875     0221  0086               	movwf	6
  2876     0222  0187               	clrf	7
  2877     0223  3F40               	moviw [0]fsr1
  2878     0224  00C4               	movwf	??_vfpfcnvrt
  2879     0225  3F41               	moviw [1]fsr1
  2880     0226  00C5               	movwf	??_vfpfcnvrt+1
  2881     0227  0844               	movf	??_vfpfcnvrt,w
  2882     0228  0084               	movwf	4
  2883     0229  0845               	movf	??_vfpfcnvrt+1,w
  2884     022A  0085               	movwf	5
  2885     022B  0800               	movf	0,w	;code access
  2886     022C  00C6               	movwf	??_vfpfcnvrt+2
  2887     022D  01C7               	clrf	??_vfpfcnvrt+3
  2888     022E  0846               	movf	??_vfpfcnvrt+2,w
  2889     022F  00A0               	movwf	fputc@c
  2890     0230  0847               	movf	??_vfpfcnvrt+3,w
  2891     0231  00A1               	movwf	fputc@c+1
  2892     0232  084E               	movf	vfpfcnvrt@fp,w
  2893     0233  00A2               	movwf	fputc@fp
  2894     0234  3183  23BF  3181   	fcall	_fputc
  2895     0237  2A16               	goto	l1656
  2896     0238                     l829:
  2897     0238  0008               	return
  2898     0239                     __end_of_vfpfcnvrt:
  2899                           
  2900                           	psect	text5
  2901     0239                     __ptext5:	
  2902 ;; *************** function _utoa *****************
  2903 ;; Defined at:
  2904 ;;		line 917 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  fp              1    wreg     PTR struct _IO_FILE
  2907 ;;		 -> sprintf@f(11), 
  2908 ;;  d               2   24[BANK0 ] unsigned int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  2911 ;;		 -> sprintf@f(11), 
  2912 ;;  i               2   32[BANK0 ] int 
  2913 ;;  p               2   30[BANK0 ] int 
  2914 ;;  w               2   27[BANK0 ] int 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2925 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2927 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2928 ;;Total ram usage:       10 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 8
  2931 ;; This function calls:
  2932 ;;		___lwdiv
  2933 ;;		___lwmod
  2934 ;;		_pad
  2935 ;; This function is called by:
  2936 ;;		_vfpfcnvrt
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940     0239                     _utoa:	
  2941                           ;psect for function _utoa
  2942                           
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2946                           ;utoa@fp stored from wreg
  2947     0239  0140               	movlb	0	; select bank0
  2948     023A  00BD               	movwf	utoa@fp
  2949     023B                     l1548:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 917: static void 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 918: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           919:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprn
      +                          t.c: 927:     p = (0 <= prec) ? prec : 1;
  2952     023B  1FED               	btfss	_prec+1,7
  2953     023C  2A3E               	goto	u961
  2954     023D  2A3F               	goto	u960
  2955     023E                     u961:
  2956     023E  2A44               	goto	l1552
  2957     023F                     u960:
  2958     023F                     l1550:
  2959     023F  3001               	movlw	1
  2960     0240  00BE               	movwf	utoa@p
  2961     0241  3000               	movlw	0
  2962     0242  00BF               	movwf	utoa@p+1
  2963     0243  2A48               	goto	l805
  2964     0244                     l1552:
  2965     0244  086D               	movf	_prec+1,w
  2966     0245  00BF               	movwf	utoa@p+1
  2967     0246  086C               	movf	_prec,w
  2968     0247  00BE               	movwf	utoa@p
  2969     0248                     l805:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 928:     w = widt
      +                          h;
  2972     0248  086B               	movf	_width+1,w
  2973     0249  00BC               	movwf	utoa@w+1
  2974     024A  086A               	movf	_width,w
  2975     024B  00BB               	movwf	utoa@w
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 931:     i = size
      +                          of(dbuf) - 1;
  2978     024C  301F               	movlw	31
  2979     024D  00C0               	movwf	utoa@i
  2980     024E  3000               	movlw	0
  2981     024F  00C1               	movwf	utoa@i+1
  2982     0250                     l1554:
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 932:     dbuf[i] 
      +                          = '\0';
  2985     0250  0142               	movlb	2	; select bank2
  2986     0251  01BF               	clrf	(_dbuf^(0+256)+31)
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  2989     0252  2A84               	goto	l1566
  2990     0253                     l1556:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 937:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 938:         --i;
  2993     0253  30FF               	movlw	255
  2994     0254  0140               	movlb	0	; select bank0
  2995     0255  07C0               	addwf	utoa@i,f
  2996     0256  30FF               	movlw	255
  2997     0257  3DC1               	addwfc	utoa@i+1,f
  2998     0258                     l1558:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 939:         dbuf
      +                          [i] = '0' + (d % 10);
  3001     0258  0840               	movf	utoa@i,w
  3002     0259  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3003     025A  0086               	movwf	6
  3004     025B  3001               	movlw	1	; select bank2/3
  3005     025C  0087               	movwf	7
  3006     025D  300A               	movlw	10
  3007     025E  00A0               	movwf	___lwmod@divisor
  3008     025F  3000               	movlw	0
  3009     0260  00A1               	movwf	___lwmod@divisor+1
  3010     0261  0839               	movf	utoa@d+1,w
  3011     0262  00A3               	movwf	___lwmod@dividend+1
  3012     0263  0838               	movf	utoa@d,w
  3013     0264  00A2               	movwf	___lwmod@dividend
  3014     0265  3184  24DD  3182   	fcall	___lwmod
  3015     0268  0140               	movlb	0	; select bank0
  3016     0269  0820               	movf	?___lwmod,w
  3017     026A  3E30               	addlw	48
  3018     026B  0081               	movwf	1
  3019     026C                     l1560:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 940:         --p;
  3022     026C  30FF               	movlw	255
  3023     026D  07BE               	addwf	utoa@p,f
  3024     026E  30FF               	movlw	255
  3025     026F  3DBF               	addwfc	utoa@p+1,f
  3026     0270                     l1562:
  3027                           
  3028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 941:         --w;
  3029     0270  30FF               	movlw	255
  3030     0271  07BB               	addwf	utoa@w,f
  3031     0272  30FF               	movlw	255
  3032     0273  3DBC               	addwfc	utoa@w+1,f
  3033     0274                     l1564:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 942:         d = 
      +                          d / 10;
  3036     0274  300A               	movlw	10
  3037     0275  00A6               	movwf	___lwdiv@divisor
  3038     0276  3000               	movlw	0
  3039     0277  00A7               	movwf	___lwdiv@divisor+1
  3040     0278  0839               	movf	utoa@d+1,w
  3041     0279  00A9               	movwf	___lwdiv@dividend+1
  3042     027A  0838               	movf	utoa@d,w
  3043     027B  00A8               	movwf	___lwdiv@dividend
  3044     027C  3184  24A0  3182   	fcall	___lwdiv
  3045     027F  0140               	movlb	0	; select bank0
  3046     0280  0827               	movf	?___lwdiv+1,w
  3047     0281  00B9               	movwf	utoa@d+1
  3048     0282  0826               	movf	?___lwdiv,w
  3049     0283  00B8               	movwf	utoa@d
  3050     0284                     l1566:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  3053     0284  0140               	movlb	0	; select bank0
  3054     0285  0840               	movf	utoa@i,w
  3055     0286  0441               	iorwf	utoa@i+1,w
  3056     0287  1903               	btfsc	3,2
  3057     0288  2A8A               	goto	u971
  3058     0289  2A8B               	goto	u970
  3059     028A                     u971:
  3060     028A  2A9E               	goto	l1572
  3061     028B                     u970:
  3062     028B                     l1568:
  3063     028B  0838               	movf	utoa@d,w
  3064     028C  0439               	iorwf	utoa@d+1,w
  3065     028D  1D03               	btfss	3,2
  3066     028E  2A90               	goto	u981
  3067     028F  2A91               	goto	u980
  3068     0290                     u981:
  3069     0290  2A53               	goto	l1556
  3070     0291                     u980:
  3071     0291                     l1570:
  3072     0291  083F               	movf	utoa@p+1,w
  3073     0292  3A80               	xorlw	128
  3074     0293  00BA               	movwf	??_utoa
  3075     0294  3080               	movlw	128
  3076     0295  023A               	subwf	??_utoa,w
  3077     0296  1D03               	skipz
  3078     0297  2A9A               	goto	u995
  3079     0298  3001               	movlw	1
  3080     0299  023E               	subwf	utoa@p,w
  3081     029A                     u995:
  3082     029A  1803               	skipnc
  3083     029B  2A9D               	goto	u991
  3084     029C  2A9E               	goto	u990
  3085     029D                     u991:
  3086     029D  2A53               	goto	l1556
  3087     029E                     u990:
  3088     029E                     l1572:
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 946:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3091     029E  0140               	movlb	0	; select bank0
  3092     029F  0840               	movf	utoa@i,w
  3093     02A0  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3094     02A1  00AF               	movwf	pad@buf
  3095     02A2  083C               	movf	utoa@w+1,w
  3096     02A3  00B1               	movwf	pad@p+1
  3097     02A4  083B               	movf	utoa@w,w
  3098     02A5  00B0               	movwf	pad@p
  3099     02A6  083D               	movf	utoa@fp,w
  3100     02A7  3184  245C  3182   	fcall	_pad
  3101     02AA                     l811:
  3102     02AA  0008               	return
  3103     02AB                     __end_of_utoa:
  3104                           
  3105                           	psect	text6
  3106     045C                     __ptext6:	
  3107 ;; *************** function _pad *****************
  3108 ;; Defined at:
  3109 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  fp              1    wreg     PTR struct _IO_FILE
  3112 ;;		 -> sprintf@f(11), 
  3113 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  3114 ;;		 -> dbuf(32), 
  3115 ;;  p               2   16[BANK0 ] int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  3118 ;;		 -> sprintf@f(11), 
  3119 ;;  w               2   21[BANK0 ] int 
  3120 ;;  i               2   19[BANK0 ] int 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3130 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3131 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3132 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3133 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3134 ;;Total ram usage:        9 bytes
  3135 ;; Hardware stack levels used: 1
  3136 ;; Hardware stack levels required when called: 7
  3137 ;; This function calls:
  3138 ;;		_fputc
  3139 ;;		_fputs
  3140 ;; This function is called by:
  3141 ;;		_utoa
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145     045C                     _pad:	
  3146                           ;psect for function _pad
  3147                           
  3148                           
  3149                           ;incstack = 0
  3150                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3151                           ;pad@fp stored from wreg
  3152     045C  0140               	movlb	0	; select bank0
  3153     045D  00B7               	movwf	pad@fp
  3154     045E                     l1530:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  3157     045E  1C6E               	btfss	_flags,0
  3158     045F  2C61               	goto	u921
  3159     0460  2C62               	goto	u920
  3160     0461                     u921:
  3161     0461  2C68               	goto	l1534
  3162     0462                     u920:
  3163     0462                     l1532:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  3166     0462  0837               	movf	pad@fp,w
  3167     0463  00A8               	movwf	fputs@fp
  3168     0464  082F               	movf	pad@buf,w
  3169     0465  3185  2572  3184   	fcall	_fputs
  3170     0468                     l1534:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  3173     0468  0140               	movlb	0	; select bank0
  3174     0469  1BB1               	btfsc	pad@p+1,7
  3175     046A  2C6C               	goto	u931
  3176     046B  2C6D               	goto	u930
  3177     046C                     u931:
  3178     046C  2C72               	goto	l1538
  3179     046D                     u930:
  3180     046D                     l1536:
  3181     046D  0831               	movf	pad@p+1,w
  3182     046E  00B6               	movwf	pad@w+1
  3183     046F  0830               	movf	pad@p,w
  3184     0470  00B5               	movwf	pad@w
  3185     0471  2C74               	goto	l794
  3186     0472                     l1538:
  3187     0472  01B5               	clrf	pad@w
  3188     0473  01B6               	clrf	pad@w+1
  3189     0474                     l794:
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3192     0474  01B3               	clrf	pad@i
  3193     0475  01B4               	clrf	pad@i+1
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3196     0476  2C86               	goto	l1544
  3197     0477                     l1540:
  3198                           
  3199                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3200     0477  3020               	movlw	32
  3201     0478  0140               	movlb	0	; select bank0
  3202     0479  00A0               	movwf	fputc@c
  3203     047A  3000               	movlw	0
  3204     047B  00A1               	movwf	fputc@c+1
  3205     047C  0837               	movf	pad@fp,w
  3206     047D  00A2               	movwf	fputc@fp
  3207     047E  3183  23BF  3184   	fcall	_fputc
  3208     0481                     l1542:
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3211     0481  3001               	movlw	1
  3212     0482  0140               	movlb	0	; select bank0
  3213     0483  07B3               	addwf	pad@i,f
  3214     0484  3000               	movlw	0
  3215     0485  3DB4               	addwfc	pad@i+1,f
  3216     0486                     l1544:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3219     0486  0834               	movf	pad@i+1,w
  3220     0487  3A80               	xorlw	128
  3221     0488  00B2               	movwf	??_pad
  3222     0489  0836               	movf	pad@w+1,w
  3223     048A  3A80               	xorlw	128
  3224     048B  0232               	subwf	??_pad,w
  3225     048C  1D03               	skipz
  3226     048D  2C90               	goto	u945
  3227     048E  0835               	movf	pad@w,w
  3228     048F  0233               	subwf	pad@i,w
  3229     0490                     u945:
  3230     0490  1C03               	skipc
  3231     0491  2C93               	goto	u941
  3232     0492  2C94               	goto	u940
  3233     0493                     u941:
  3234     0493  2C77               	goto	l1540
  3235     0494                     u940:
  3236     0494                     l797:
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  3239     0494  0140               	movlb	0	; select bank0
  3240     0495  186E               	btfsc	_flags,0
  3241     0496  2C98               	goto	u951
  3242     0497  2C99               	goto	u950
  3243     0498                     u951:
  3244     0498  2C9F               	goto	l799
  3245     0499                     u950:
  3246     0499                     l1546:
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3249     0499  0837               	movf	pad@fp,w
  3250     049A  00A8               	movwf	fputs@fp
  3251     049B  082F               	movf	pad@buf,w
  3252     049C  3185  2572  3184   	fcall	_fputs
  3253     049F                     l799:
  3254     049F  0008               	return
  3255     04A0                     __end_of_pad:
  3256                           
  3257                           	psect	text7
  3258     0572                     __ptext7:	
  3259 ;; *************** function _fputs *****************
  3260 ;; Defined at:
  3261 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  s               1    wreg     PTR const unsigned char 
  3264 ;;		 -> dbuf(32), 
  3265 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  3266 ;;		 -> sprintf@f(11), 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  3269 ;;		 -> dbuf(32), 
  3270 ;;  i               2   12[BANK0 ] int 
  3271 ;;  c               1   11[BANK0 ] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  2    8[BANK0 ] int 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3281 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3282 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3283 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3284 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3285 ;;Total ram usage:        7 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; Hardware stack levels required when called: 6
  3288 ;; This function calls:
  3289 ;;		_fputc
  3290 ;; This function is called by:
  3291 ;;		_pad
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295     0572                     _fputs:	
  3296                           ;psect for function _fputs
  3297                           
  3298                           
  3299                           ;incstack = 0
  3300                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3301                           ;fputs@s stored from wreg
  3302     0572  0140               	movlb	0	; select bank0
  3303     0573  00AE               	movwf	fputs@s
  3304     0574                     l1460:
  3305     0574  01AC               	clrf	fputs@i
  3306     0575  01AD               	clrf	fputs@i+1
  3307     0576  2D88               	goto	l1466
  3308     0577                     l1462:
  3309     0577  082B               	movf	fputs@c,w
  3310     0578  00A9               	movwf	??_fputs
  3311     0579  01AA               	clrf	??_fputs+1
  3312     057A  0829               	movf	??_fputs,w
  3313     057B  00A0               	movwf	fputc@c
  3314     057C  082A               	movf	??_fputs+1,w
  3315     057D  00A1               	movwf	fputc@c+1
  3316     057E  0828               	movf	fputs@fp,w
  3317     057F  00A2               	movwf	fputc@fp
  3318     0580  3183  23BF  3185   	fcall	_fputc
  3319     0583                     l1464:
  3320     0583  3001               	movlw	1
  3321     0584  0140               	movlb	0	; select bank0
  3322     0585  07AC               	addwf	fputs@i,f
  3323     0586  3000               	movlw	0
  3324     0587  3DAD               	addwfc	fputs@i+1,f
  3325     0588                     l1466:
  3326     0588  082C               	movf	fputs@i,w
  3327     0589  072E               	addwf	fputs@s,w
  3328     058A  00A9               	movwf	??_fputs
  3329     058B  0829               	movf	??_fputs,w
  3330     058C  0086               	movwf	6
  3331     058D  3001               	movlw	1	; select bank2/3
  3332     058E  0087               	movwf	7
  3333     058F  0801               	movf	1,w
  3334     0590  00AB               	movwf	fputs@c
  3335     0591  082B               	movf	fputs@c,w
  3336     0592  1D03               	btfss	3,2
  3337     0593  2D95               	goto	u741
  3338     0594  2D96               	goto	u740
  3339     0595                     u741:
  3340     0595  2D77               	goto	l1462
  3341     0596                     u740:
  3342     0596                     l857:
  3343     0596  0008               	return
  3344     0597                     __end_of_fputs:
  3345                           
  3346                           	psect	text8
  3347     03BF                     __ptext8:	
  3348 ;; *************** function _fputc *****************
  3349 ;; Defined at:
  3350 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  c               2    0[BANK0 ] int 
  3353 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  3354 ;;		 -> sprintf@f(11), 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2    0[BANK0 ] int 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3366 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3368 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3369 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3370 ;;Total ram usage:        8 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 5
  3373 ;; This function calls:
  3374 ;;		_putch
  3375 ;; This function is called by:
  3376 ;;		_pad
  3377 ;;		_vfpfcnvrt
  3378 ;;		_fputs
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382     03BF                     _fputc:	
  3383                           ;psect for function _fputc
  3384                           
  3385     03BF                     l1444:	
  3386                           ;incstack = 0
  3387                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3388                           
  3389     03BF  0140               	movlb	0	; select bank0
  3390     03C0  0822               	movf	fputc@fp,w
  3391     03C1  1903               	btfsc	3,2
  3392     03C2  2BC4               	goto	u701
  3393     03C3  2BC5               	goto	u700
  3394     03C4                     u701:
  3395     03C4  2BCA               	goto	l1448
  3396     03C5                     u700:
  3397     03C5                     l1446:
  3398     03C5  0822               	movf	fputc@fp,w
  3399     03C6  1D03               	btfss	3,2
  3400     03C7  2BC9               	goto	u711
  3401     03C8  2BCA               	goto	u710
  3402     03C9                     u711:
  3403     03C9  2BCF               	goto	l1450
  3404     03CA                     u710:
  3405     03CA                     l1448:
  3406     03CA  0820               	movf	fputc@c,w
  3407     03CB  3187  2767  3183   	fcall	_putch
  3408     03CE  2C10               	goto	l849
  3409     03CF                     l1450:
  3410     03CF  0822               	movf	fputc@fp,w
  3411     03D0  3E09               	addlw	9
  3412     03D1  0086               	movwf	6
  3413     03D2  0187               	clrf	7
  3414     03D3  0016               	moviw fsr1++
  3415     03D4  0401               	iorwf	1,w
  3416     03D5  1903               	btfsc	3,2
  3417     03D6  2BD8               	goto	u721
  3418     03D7  2BD9               	goto	u720
  3419     03D8                     u721:
  3420     03D8  2BF7               	goto	l1454
  3421     03D9                     u720:
  3422     03D9                     l1452:
  3423     03D9  0822               	movf	fputc@fp,w
  3424     03DA  3E09               	addlw	9
  3425     03DB  0086               	movwf	6
  3426     03DC  0187               	clrf	7
  3427     03DD  3F40               	moviw [0]fsr1
  3428     03DE  00A3               	movwf	??_fputc
  3429     03DF  3F41               	moviw [1]fsr1
  3430     03E0  00A4               	movwf	??_fputc+1
  3431     03E1  0822               	movf	fputc@fp,w
  3432     03E2  3E02               	addlw	2
  3433     03E3  0086               	movwf	6
  3434     03E4  0187               	clrf	7
  3435     03E5  3F40               	moviw [0]fsr1
  3436     03E6  00A5               	movwf	??_fputc+2
  3437     03E7  3F41               	moviw [1]fsr1
  3438     03E8  00A6               	movwf	??_fputc+3
  3439     03E9  0826               	movf	??_fputc+3,w
  3440     03EA  3A80               	xorlw	128
  3441     03EB  00A7               	movwf	??_fputc+4
  3442     03EC  0824               	movf	??_fputc+1,w
  3443     03ED  3A80               	xorlw	128
  3444     03EE  0227               	subwf	??_fputc+4,w
  3445     03EF  1D03               	skipz
  3446     03F0  2BF3               	goto	u735
  3447     03F1  0823               	movf	??_fputc,w
  3448     03F2  0225               	subwf	??_fputc+2,w
  3449     03F3                     u735:
  3450     03F3  1803               	skipnc
  3451     03F4  2BF6               	goto	u731
  3452     03F5  2BF7               	goto	u730
  3453     03F6                     u731:
  3454     03F6  2C10               	goto	l849
  3455     03F7                     u730:
  3456     03F7                     l1454:
  3457     03F7  0140               	movlb	0	; select bank0
  3458     03F8  0822               	movf	fputc@fp,w
  3459     03F9  0086               	movwf	6
  3460     03FA  0187               	clrf	7
  3461     03FB  0822               	movf	fputc@fp,w
  3462     03FC  3E02               	addlw	2
  3463     03FD  0084               	movwf	4
  3464     03FE  0185               	clrf	5
  3465     03FF  0800               	movf	0,w
  3466     0400  0701               	addwf	1,w
  3467     0401  00A3               	movwf	??_fputc
  3468     0402  0823               	movf	??_fputc,w
  3469     0403  0086               	movwf	6
  3470     0404  0187               	clrf	7
  3471     0405  0820               	movf	fputc@c,w
  3472     0406  0081               	movwf	1
  3473     0407                     l1456:
  3474     0407  0822               	movf	fputc@fp,w
  3475     0408  3E02               	addlw	2
  3476     0409  0086               	movwf	6
  3477     040A  0187               	clrf	7
  3478     040B  3001               	movlw	1
  3479     040C  0781               	addwf	1,f
  3480     040D  3141               	addfsr 1,1
  3481     040E  1803               	skipnc
  3482     040F  0A81               	incf	1,f
  3483     0410                     l849:
  3484     0410  0008               	return
  3485     0411                     __end_of_fputc:
  3486                           
  3487                           	psect	text9
  3488     0767                     __ptext9:	
  3489 ;; *************** function _putch *****************
  3490 ;; Defined at:
  3491 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  c               1    wreg     unsigned char 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  c               1    0[COMMON] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3509 ;;Total ram usage:        0 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 4
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_fputc
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519     0767                     _putch:	
  3520                           ;psect for function _putch
  3521                           
  3522     0767                     l860:	
  3523                           ;incstack = 0
  3524                           ; Regs used in _putch: [wreg]
  3525                           
  3526     0767  0008               	return
  3527     0768                     __end_of_putch:
  3528                           
  3529                           	psect	text10
  3530     04DD                     __ptext10:	
  3531 ;; *************** function ___lwmod *****************
  3532 ;; Defined at:
  3533 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  divisor         2    0[BANK0 ] unsigned int 
  3536 ;;  dividend        2    2[BANK0 ] unsigned int 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  counter         1    5[BANK0 ] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  2    0[BANK0 ] unsigned int 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3551 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3552 ;;Total ram usage:        6 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 4
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_utoa
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562     04DD                     ___lwmod:	
  3563                           ;psect for function ___lwmod
  3564                           
  3565     04DD                     l1508:	
  3566                           ;incstack = 0
  3567                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3568                           
  3569     04DD  0140               	movlb	0	; select bank0
  3570     04DE  0820               	movf	___lwmod@divisor,w
  3571     04DF  0421               	iorwf	___lwmod@divisor+1,w
  3572     04E0  1903               	btfsc	3,2
  3573     04E1  2CE3               	goto	u861
  3574     04E2  2CE4               	goto	u860
  3575     04E3                     u861:
  3576     04E3  2D0D               	goto	l1526
  3577     04E4                     u860:
  3578     04E4                     l1510:
  3579     04E4  01A5               	clrf	___lwmod@counter
  3580     04E5  0AA5               	incf	___lwmod@counter,f
  3581     04E6  2CF0               	goto	l1516
  3582     04E7                     l1512:
  3583     04E7  3001               	movlw	1
  3584     04E8                     u875:
  3585     04E8  35A0               	lslf	___lwmod@divisor,f
  3586     04E9  0DA1               	rlf	___lwmod@divisor+1,f
  3587     04EA  0B89               	decfsz	9,f
  3588     04EB  2CE8               	goto	u875
  3589     04EC                     l1514:
  3590     04EC  3001               	movlw	1
  3591     04ED  00A4               	movwf	??___lwmod
  3592     04EE  0824               	movf	??___lwmod,w
  3593     04EF  07A5               	addwf	___lwmod@counter,f
  3594     04F0                     l1516:
  3595     04F0  1FA1               	btfss	___lwmod@divisor+1,7
  3596     04F1  2CF3               	goto	u881
  3597     04F2  2CF4               	goto	u880
  3598     04F3                     u881:
  3599     04F3  2CE7               	goto	l1512
  3600     04F4                     u880:
  3601     04F4                     l1518:
  3602     04F4  0821               	movf	___lwmod@divisor+1,w
  3603     04F5  0223               	subwf	___lwmod@dividend+1,w
  3604     04F6  1D03               	skipz
  3605     04F7  2CFA               	goto	u895
  3606     04F8  0820               	movf	___lwmod@divisor,w
  3607     04F9  0222               	subwf	___lwmod@dividend,w
  3608     04FA                     u895:
  3609     04FA  1C03               	skipc
  3610     04FB  2CFD               	goto	u891
  3611     04FC  2CFE               	goto	u890
  3612     04FD                     u891:
  3613     04FD  2D02               	goto	l1522
  3614     04FE                     u890:
  3615     04FE                     l1520:
  3616     04FE  0820               	movf	___lwmod@divisor,w
  3617     04FF  02A2               	subwf	___lwmod@dividend,f
  3618     0500  0821               	movf	___lwmod@divisor+1,w
  3619     0501  3BA3               	subwfb	___lwmod@dividend+1,f
  3620     0502                     l1522:
  3621     0502  3001               	movlw	1
  3622     0503                     u905:
  3623     0503  36A1               	lsrf	___lwmod@divisor+1,f
  3624     0504  0CA0               	rrf	___lwmod@divisor,f
  3625     0505  0B89               	decfsz	9,f
  3626     0506  2D03               	goto	u905
  3627     0507                     l1524:
  3628     0507  3001               	movlw	1
  3629     0508  02A5               	subwf	___lwmod@counter,f
  3630     0509  1D03               	btfss	3,2
  3631     050A  2D0C               	goto	u911
  3632     050B  2D0D               	goto	u910
  3633     050C                     u911:
  3634     050C  2CF4               	goto	l1518
  3635     050D                     u910:
  3636     050D                     l1526:
  3637     050D  0823               	movf	___lwmod@dividend+1,w
  3638     050E  00A1               	movwf	?___lwmod+1
  3639     050F  0822               	movf	___lwmod@dividend,w
  3640     0510  00A0               	movwf	?___lwmod
  3641     0511                     l600:
  3642     0511  0008               	return
  3643     0512                     __end_of___lwmod:
  3644                           
  3645                           	psect	text11
  3646     04A0                     __ptext11:	
  3647 ;; *************** function ___lwdiv *****************
  3648 ;; Defined at:
  3649 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  divisor         2    6[BANK0 ] unsigned int 
  3652 ;;  dividend        2    8[BANK0 ] unsigned int 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  quotient        2   11[BANK0 ] unsigned int 
  3655 ;;  counter         1   13[BANK0 ] unsigned char 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  2    6[BANK0 ] unsigned int 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3665 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3666 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3668 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3669 ;;Total ram usage:        8 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 4
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;;		_utoa
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680     04A0                     ___lwdiv:	
  3681                           ;psect for function ___lwdiv
  3682                           
  3683     04A0                     l1482:	
  3684                           ;incstack = 0
  3685                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3686                           
  3687     04A0  0140               	movlb	0	; select bank0
  3688     04A1  01AB               	clrf	___lwdiv@quotient
  3689     04A2  01AC               	clrf	___lwdiv@quotient+1
  3690     04A3                     l1484:
  3691     04A3  0826               	movf	___lwdiv@divisor,w
  3692     04A4  0427               	iorwf	___lwdiv@divisor+1,w
  3693     04A5  1903               	btfsc	3,2
  3694     04A6  2CA8               	goto	u791
  3695     04A7  2CA9               	goto	u790
  3696     04A8                     u791:
  3697     04A8  2CD8               	goto	l1504
  3698     04A9                     u790:
  3699     04A9                     l1486:
  3700     04A9  01AD               	clrf	___lwdiv@counter
  3701     04AA  0AAD               	incf	___lwdiv@counter,f
  3702     04AB  2CB5               	goto	l1492
  3703     04AC                     l1488:
  3704     04AC  3001               	movlw	1
  3705     04AD                     u805:
  3706     04AD  35A6               	lslf	___lwdiv@divisor,f
  3707     04AE  0DA7               	rlf	___lwdiv@divisor+1,f
  3708     04AF  0B89               	decfsz	9,f
  3709     04B0  2CAD               	goto	u805
  3710     04B1                     l1490:
  3711     04B1  3001               	movlw	1
  3712     04B2  00AA               	movwf	??___lwdiv
  3713     04B3  082A               	movf	??___lwdiv,w
  3714     04B4  07AD               	addwf	___lwdiv@counter,f
  3715     04B5                     l1492:
  3716     04B5  1FA7               	btfss	___lwdiv@divisor+1,7
  3717     04B6  2CB8               	goto	u811
  3718     04B7  2CB9               	goto	u810
  3719     04B8                     u811:
  3720     04B8  2CAC               	goto	l1488
  3721     04B9                     u810:
  3722     04B9                     l1494:
  3723     04B9  3001               	movlw	1
  3724     04BA                     u825:
  3725     04BA  35AB               	lslf	___lwdiv@quotient,f
  3726     04BB  0DAC               	rlf	___lwdiv@quotient+1,f
  3727     04BC  0B89               	decfsz	9,f
  3728     04BD  2CBA               	goto	u825
  3729     04BE  0827               	movf	___lwdiv@divisor+1,w
  3730     04BF  0229               	subwf	___lwdiv@dividend+1,w
  3731     04C0  1D03               	skipz
  3732     04C1  2CC4               	goto	u835
  3733     04C2  0826               	movf	___lwdiv@divisor,w
  3734     04C3  0228               	subwf	___lwdiv@dividend,w
  3735     04C4                     u835:
  3736     04C4  1C03               	skipc
  3737     04C5  2CC7               	goto	u831
  3738     04C6  2CC8               	goto	u830
  3739     04C7                     u831:
  3740     04C7  2CCD               	goto	l1500
  3741     04C8                     u830:
  3742     04C8                     l1496:
  3743     04C8  0826               	movf	___lwdiv@divisor,w
  3744     04C9  02A8               	subwf	___lwdiv@dividend,f
  3745     04CA  0827               	movf	___lwdiv@divisor+1,w
  3746     04CB  3BA9               	subwfb	___lwdiv@dividend+1,f
  3747     04CC                     l1498:
  3748     04CC  142B               	bsf	___lwdiv@quotient,0
  3749     04CD                     l1500:
  3750     04CD  3001               	movlw	1
  3751     04CE                     u845:
  3752     04CE  36A7               	lsrf	___lwdiv@divisor+1,f
  3753     04CF  0CA6               	rrf	___lwdiv@divisor,f
  3754     04D0  0B89               	decfsz	9,f
  3755     04D1  2CCE               	goto	u845
  3756     04D2                     l1502:
  3757     04D2  3001               	movlw	1
  3758     04D3  02AD               	subwf	___lwdiv@counter,f
  3759     04D4  1D03               	btfss	3,2
  3760     04D5  2CD7               	goto	u851
  3761     04D6  2CD8               	goto	u850
  3762     04D7                     u851:
  3763     04D7  2CB9               	goto	l1494
  3764     04D8                     u850:
  3765     04D8                     l1504:
  3766     04D8  082C               	movf	___lwdiv@quotient+1,w
  3767     04D9  00A7               	movwf	?___lwdiv+1
  3768     04DA  082B               	movf	___lwdiv@quotient,w
  3769     04DB  00A6               	movwf	?___lwdiv
  3770     04DC                     l590:
  3771     04DC  0008               	return
  3772     04DD                     __end_of___lwdiv:
  3773                           
  3774                           	psect	text12
  3775     02AB                     __ptext12:	
  3776 ;; *************** function _read_prec_or_width *****************
  3777 ;; Defined at:
  3778 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  fmt             1    wreg     PTR PTR const unsigned c
  3781 ;;		 -> vfprintf@cfmt(2), 
  3782 ;;  ap              1    6[BANK0 ] PTR PTR void [1]
  3783 ;;		 -> sprintf@ap(1), 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  fmt             1   14[BANK0 ] PTR PTR const unsigned c
  3786 ;;		 -> vfprintf@cfmt(2), 
  3787 ;;  c               1   11[BANK0 ] unsigned char 
  3788 ;;  n               2   12[BANK0 ] int 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  2    6[BANK0 ] int 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3799 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3800 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3801 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3802 ;;Total ram usage:        9 bytes
  3803 ;; Hardware stack levels used: 1
  3804 ;; Hardware stack levels required when called: 5
  3805 ;; This function calls:
  3806 ;;		___wmul
  3807 ;; This function is called by:
  3808 ;;		_vfpfcnvrt
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812     02AB                     _read_prec_or_width:	
  3813                           ;psect for function _read_prec_or_width
  3814                           
  3815                           
  3816                           ;incstack = 0
  3817                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3818                           ;read_prec_or_width@fmt stored from wreg
  3819     02AB  0140               	movlb	0	; select bank0
  3820     02AC  00AE               	movwf	read_prec_or_width@fmt
  3821     02AD                     l1576:
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  3824     02AD  01AC               	clrf	read_prec_or_width@n
  3825     02AE  01AD               	clrf	read_prec_or_width@n+1
  3826     02AF                     l1578:
  3827                           
  3828                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  3829     02AF  082E               	movf	read_prec_or_width@fmt,w
  3830     02B0  0086               	movwf	6
  3831     02B1  0187               	clrf	7
  3832     02B2  3F40               	moviw [0]fsr1
  3833     02B3  00A8               	movwf	??_read_prec_or_width
  3834     02B4  3F41               	moviw [1]fsr1
  3835     02B5  00A9               	movwf	??_read_prec_or_width+1
  3836     02B6  0828               	movf	??_read_prec_or_width,w
  3837     02B7  0084               	movwf	4
  3838     02B8  0829               	movf	??_read_prec_or_width+1,w
  3839     02B9  0085               	movwf	5
  3840     02BA  0012               	moviw fsr0++
  3841     02BB  3A2A               	xorlw	42
  3842     02BC  1D03               	btfss	3,2
  3843     02BD  2ABF               	goto	u1001
  3844     02BE  2AC0               	goto	u1000
  3845     02BF                     u1001:
  3846     02BF  2AF2               	goto	l1588
  3847     02C0                     u1000:
  3848     02C0                     l1580:
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  3851     02C0  082E               	movf	read_prec_or_width@fmt,w
  3852     02C1  0086               	movwf	6
  3853     02C2  0187               	clrf	7
  3854     02C3  3001               	movlw	1
  3855     02C4  0781               	addwf	1,f
  3856     02C5  3141               	addfsr 1,1
  3857     02C6  1803               	skipnc
  3858     02C7  0A81               	incf	1,f
  3859     02C8                     l1582:
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3862     02C8  0826               	movf	read_prec_or_width@ap,w
  3863     02C9  0086               	movwf	6
  3864     02CA  0187               	clrf	7
  3865     02CB  0801               	movf	1,w
  3866     02CC  0084               	movwf	4
  3867     02CD  0185               	clrf	5
  3868     02CE  3002               	movlw	2
  3869     02CF  0781               	addwf	1,f
  3870     02D0  3F00               	moviw [0]fsr0
  3871     02D1  00AC               	movwf	read_prec_or_width@n
  3872     02D2  3F01               	moviw [1]fsr0
  3873     02D3  00AD               	movwf	read_prec_or_width@n+1
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  3876     02D4  2B06               	goto	l1590
  3877     02D5                     l1584:
  3878                           
  3879                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  3880     02D5  082B               	movf	read_prec_or_width@c,w
  3881     02D6  00A8               	movwf	??_read_prec_or_width
  3882     02D7  01A9               	clrf	??_read_prec_or_width+1
  3883     02D8  082D               	movf	read_prec_or_width@n+1,w
  3884     02D9  00A1               	movwf	___wmul@multiplier+1
  3885     02DA  082C               	movf	read_prec_or_width@n,w
  3886     02DB  00A0               	movwf	___wmul@multiplier
  3887     02DC  300A               	movlw	10
  3888     02DD  00A2               	movwf	___wmul@multiplicand
  3889     02DE  3000               	movlw	0
  3890     02DF  00A3               	movwf	___wmul@multiplicand+1
  3891     02E0  3185  2597  3182   	fcall	___wmul
  3892     02E3  0140               	movlb	0	; select bank0
  3893     02E4  0828               	movf	??_read_prec_or_width,w
  3894     02E5  0720               	addwf	?___wmul,w
  3895     02E6  00AC               	movwf	read_prec_or_width@n
  3896     02E7  0829               	movf	??_read_prec_or_width+1,w
  3897     02E8  3D21               	addwfc	?___wmul+1,w
  3898     02E9  00AD               	movwf	read_prec_or_width@n+1
  3899     02EA                     l1586:
  3900                           
  3901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  3902     02EA  082E               	movf	read_prec_or_width@fmt,w
  3903     02EB  0086               	movwf	6
  3904     02EC  0187               	clrf	7
  3905     02ED  3001               	movlw	1
  3906     02EE  0781               	addwf	1,f
  3907     02EF  3141               	addfsr 1,1
  3908     02F0  1803               	skipnc
  3909     02F1  0A81               	incf	1,f
  3910     02F2                     l1588:
  3911                           
  3912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3913     02F2  082E               	movf	read_prec_or_width@fmt,w
  3914     02F3  0086               	movwf	6
  3915     02F4  0187               	clrf	7
  3916     02F5  3F40               	moviw [0]fsr1
  3917     02F6  00A8               	movwf	??_read_prec_or_width
  3918     02F7  3F41               	moviw [1]fsr1
  3919     02F8  00A9               	movwf	??_read_prec_or_width+1
  3920     02F9  0828               	movf	??_read_prec_or_width,w
  3921     02FA  0084               	movwf	4
  3922     02FB  0829               	movf	??_read_prec_or_width+1,w
  3923     02FC  0085               	movwf	5
  3924     02FD  0800               	movf	0,w	;code access
  3925     02FE  3ED0               	addlw	208
  3926     02FF  00AB               	movwf	read_prec_or_width@c
  3927     0300  300A               	movlw	10
  3928     0301  022B               	subwf	read_prec_or_width@c,w
  3929     0302  1C03               	skipc
  3930     0303  2B05               	goto	u1011
  3931     0304  2B06               	goto	u1010
  3932     0305                     u1011:
  3933     0305  2AD5               	goto	l1584
  3934     0306                     u1010:
  3935     0306                     l1590:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  3938     0306  082D               	movf	read_prec_or_width@n+1,w
  3939     0307  00A7               	movwf	?_read_prec_or_width+1
  3940     0308  082C               	movf	read_prec_or_width@n,w
  3941     0309  00A6               	movwf	?_read_prec_or_width
  3942     030A                     l819:
  3943     030A  0008               	return
  3944     030B                     __end_of_read_prec_or_width:
  3945                           
  3946                           	psect	text13
  3947     0597                     __ptext13:	
  3948 ;; *************** function ___wmul *****************
  3949 ;; Defined at:
  3950 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3953 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  product         2    4[BANK0 ] unsigned int 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  2    0[BANK0 ] unsigned int 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3968 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3969 ;;Total ram usage:        6 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 4
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_main
  3976 ;;		_read_prec_or_width
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980     0597                     ___wmul:	
  3981                           ;psect for function ___wmul
  3982                           
  3983     0597                     l1468:	
  3984                           ;incstack = 0
  3985                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3986                           
  3987     0597  0140               	movlb	0	; select bank0
  3988     0598  01A4               	clrf	___wmul@product
  3989     0599  01A5               	clrf	___wmul@product+1
  3990     059A                     l1470:
  3991     059A  1C20               	btfss	___wmul@multiplier,0
  3992     059B  2D9D               	goto	u751
  3993     059C  2D9E               	goto	u750
  3994     059D                     u751:
  3995     059D  2DA2               	goto	l310
  3996     059E                     u750:
  3997     059E                     l1472:
  3998     059E  0822               	movf	___wmul@multiplicand,w
  3999     059F  07A4               	addwf	___wmul@product,f
  4000     05A0  0823               	movf	___wmul@multiplicand+1,w
  4001     05A1  3DA5               	addwfc	___wmul@product+1,f
  4002     05A2                     l310:
  4003     05A2  3001               	movlw	1
  4004     05A3                     u765:
  4005     05A3  35A2               	lslf	___wmul@multiplicand,f
  4006     05A4  0DA3               	rlf	___wmul@multiplicand+1,f
  4007     05A5  0B89               	decfsz	9,f
  4008     05A6  2DA3               	goto	u765
  4009     05A7                     l1474:
  4010     05A7  3001               	movlw	1
  4011     05A8                     u775:
  4012     05A8  36A1               	lsrf	___wmul@multiplier+1,f
  4013     05A9  0CA0               	rrf	___wmul@multiplier,f
  4014     05AA  0B89               	decfsz	9,f
  4015     05AB  2DA8               	goto	u775
  4016     05AC                     l1476:
  4017     05AC  0820               	movf	___wmul@multiplier,w
  4018     05AD  0421               	iorwf	___wmul@multiplier+1,w
  4019     05AE  1D03               	btfss	3,2
  4020     05AF  2DB1               	goto	u781
  4021     05B0  2DB2               	goto	u780
  4022     05B1                     u781:
  4023     05B1  2D9A               	goto	l1470
  4024     05B2                     u780:
  4025     05B2                     l1478:
  4026     05B2  0825               	movf	___wmul@product+1,w
  4027     05B3  00A1               	movwf	?___wmul+1
  4028     05B4  0824               	movf	___wmul@product,w
  4029     05B5  00A0               	movwf	?___wmul
  4030     05B6                     l312:
  4031     05B6  0008               	return
  4032     05B7                     __end_of___wmul:
  4033                           
  4034                           	psect	text14
  4035     0411                     __ptext14:	
  4036 ;; *************** function _seven_seg_Show *****************
  4037 ;; Defined at:
  4038 ;;		line 277 in file "timer.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  i               2   16[BANK0 ] int 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  ones_digit      1   20[BANK0 ] unsigned char 
  4043 ;;  tens_digit      1   19[BANK0 ] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4053 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4056 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4057 ;;Total ram usage:        5 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; Hardware stack levels required when called: 5
  4060 ;; This function calls:
  4061 ;;		___awdiv
  4062 ;;		___awmod
  4063 ;; This function is called by:
  4064 ;;		_main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068     0411                     _seven_seg_Show:	
  4069                           ;psect for function _seven_seg_Show
  4070                           
  4071     0411                     l1854:	
  4072                           ;incstack = 0
  4073                           ; Regs used in _seven_seg_Show: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4074                           
  4075                           
  4076                           ;timer.c: 279:     unsigned char tens_digit = (i / 10) % 10;
  4077     0411  300A               	movlw	10
  4078     0412  0140               	movlb	0	; select bank0
  4079     0413  00A9               	movwf	___awmod@divisor
  4080     0414  3000               	movlw	0
  4081     0415  00AA               	movwf	___awmod@divisor+1
  4082     0416  300A               	movlw	10
  4083     0417  00A0               	movwf	___awdiv@divisor
  4084     0418  3000               	movlw	0
  4085     0419  00A1               	movwf	___awdiv@divisor+1
  4086     041A  0831               	movf	seven_seg_Show@i+1,w
  4087     041B  00A3               	movwf	___awdiv@dividend+1
  4088     041C  0830               	movf	seven_seg_Show@i,w
  4089     041D  00A2               	movwf	___awdiv@dividend
  4090     041E  3183  230B  3184   	fcall	___awdiv
  4091     0421  0140               	movlb	0	; select bank0
  4092     0422  0821               	movf	?___awdiv+1,w
  4093     0423  00AC               	movwf	___awmod@dividend+1
  4094     0424  0820               	movf	?___awdiv,w
  4095     0425  00AB               	movwf	___awmod@dividend
  4096     0426  3183  236B  3184   	fcall	___awmod
  4097     0429  0140               	movlb	0	; select bank0
  4098     042A  0829               	movf	?___awmod,w
  4099     042B  00B3               	movwf	seven_seg_Show@tens_digit
  4100                           
  4101                           ;timer.c: 280:     unsigned char ones_digit = i % 10;
  4102     042C  300A               	movlw	10
  4103     042D  00A9               	movwf	___awmod@divisor
  4104     042E  3000               	movlw	0
  4105     042F  00AA               	movwf	___awmod@divisor+1
  4106     0430  0831               	movf	seven_seg_Show@i+1,w
  4107     0431  00AC               	movwf	___awmod@dividend+1
  4108     0432  0830               	movf	seven_seg_Show@i,w
  4109     0433  00AB               	movwf	___awmod@dividend
  4110     0434  3183  236B  3184   	fcall	___awmod
  4111     0437  0140               	movlb	0	; select bank0
  4112     0438  0829               	movf	?___awmod,w
  4113     0439  00B4               	movwf	seven_seg_Show@ones_digit
  4114     043A                     l1856:
  4115                           
  4116                           ;timer.c: 283:     PORTEbits.RE0 = 0;
  4117     043A  1010               	bcf	16,0	;volatile
  4118     043B                     l1858:
  4119                           
  4120                           ;timer.c: 284:     PORTD = hexvalue[tens_digit];
  4121     043B  0833               	movf	seven_seg_Show@tens_digit,w
  4122     043C  3ED6               	addlw	(low (_hexvalue| 0))& (0+255)
  4123     043D  0086               	movwf	6
  4124     043E  0187               	clrf	7
  4125     043F  0801               	movf	1,w
  4126     0440  008F               	movwf	15	;volatile
  4127     0441                     l1860:
  4128                           
  4129                           ;timer.c: 285:     PORTEbits.RE2 = 1;
  4130     0441  1510               	bsf	16,2	;volatile
  4131     0442                     l1862:
  4132                           
  4133                           ;timer.c: 286:     _delay((unsigned long)((30)*(4000000/4000.0)));
  4134     0442  3027               	movlw	39
  4135     0443  0140               	movlb	0	; select bank0
  4136     0444  00B2               	movwf	??_seven_seg_Show
  4137     0445  30F5               	movlw	245
  4138     0446                     u1427:
  4139     0446  0B89               	decfsz	9,f
  4140     0447  2C46               	goto	u1427
  4141     0448  0BB2               	decfsz	??_seven_seg_Show,f
  4142     0449  2C46               	goto	u1427
  4143     044A                     l1864:
  4144                           
  4145                           ;timer.c: 289:     PORTEbits.RE2 = 0;
  4146     044A  0140               	movlb	0	; select bank0
  4147     044B  1110               	bcf	16,2	;volatile
  4148     044C                     l1866:
  4149                           
  4150                           ;timer.c: 290:     PORTD = hexvalue[ones_digit];
  4151     044C  0834               	movf	seven_seg_Show@ones_digit,w
  4152     044D  3ED6               	addlw	(low (_hexvalue| 0))& (0+255)
  4153     044E  0086               	movwf	6
  4154     044F  0187               	clrf	7
  4155     0450  0801               	movf	1,w
  4156     0451  008F               	movwf	15	;volatile
  4157     0452                     l1868:
  4158                           
  4159                           ;timer.c: 291:     PORTEbits.RE0 = 1;
  4160     0452  1410               	bsf	16,0	;volatile
  4161     0453                     l1870:
  4162                           
  4163                           ;timer.c: 292:     _delay((unsigned long)((30)*(4000000/4000.0)));
  4164     0453  3027               	movlw	39
  4165     0454  0140               	movlb	0	; select bank0
  4166     0455  00B2               	movwf	??_seven_seg_Show
  4167     0456  30F5               	movlw	245
  4168     0457                     u1437:
  4169     0457  0B89               	decfsz	9,f
  4170     0458  2C57               	goto	u1437
  4171     0459  0BB2               	decfsz	??_seven_seg_Show,f
  4172     045A  2C57               	goto	u1437
  4173     045B                     l155:
  4174     045B  0008               	return
  4175     045C                     __end_of_seven_seg_Show:
  4176                           
  4177                           	psect	text15
  4178     036B                     __ptext15:	
  4179 ;; *************** function ___awmod *****************
  4180 ;; Defined at:
  4181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  divisor         2    9[BANK0 ] int 
  4184 ;;  dividend        2   11[BANK0 ] int 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  sign            1   15[BANK0 ] unsigned char 
  4187 ;;  counter         1   14[BANK0 ] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  2    9[BANK0 ] int 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4197 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4198 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4199 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4200 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4201 ;;Total ram usage:        7 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; Hardware stack levels required when called: 4
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_seven_seg_Show
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211     036B                     ___awmod:	
  4212                           ;psect for function ___awmod
  4213                           
  4214     036B                     l1740:	
  4215                           ;incstack = 0
  4216                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4217                           
  4218     036B  0140               	movlb	0	; select bank0
  4219     036C  01AF               	clrf	___awmod@sign
  4220     036D                     l1742:
  4221     036D  1FAC               	btfss	___awmod@dividend+1,7
  4222     036E  2B70               	goto	u1181
  4223     036F  2B71               	goto	u1180
  4224     0370                     u1181:
  4225     0370  2B78               	goto	l1748
  4226     0371                     u1180:
  4227     0371                     l1744:
  4228     0371  09AB               	comf	___awmod@dividend,f
  4229     0372  09AC               	comf	___awmod@dividend+1,f
  4230     0373  0AAB               	incf	___awmod@dividend,f
  4231     0374  1903               	skipnz
  4232     0375  0AAC               	incf	___awmod@dividend+1,f
  4233     0376                     l1746:
  4234     0376  01AF               	clrf	___awmod@sign
  4235     0377  0AAF               	incf	___awmod@sign,f
  4236     0378                     l1748:
  4237     0378  1FAA               	btfss	___awmod@divisor+1,7
  4238     0379  2B7B               	goto	u1191
  4239     037A  2B7C               	goto	u1190
  4240     037B                     u1191:
  4241     037B  2B81               	goto	l1752
  4242     037C                     u1190:
  4243     037C                     l1750:
  4244     037C  09A9               	comf	___awmod@divisor,f
  4245     037D  09AA               	comf	___awmod@divisor+1,f
  4246     037E  0AA9               	incf	___awmod@divisor,f
  4247     037F  1903               	skipnz
  4248     0380  0AAA               	incf	___awmod@divisor+1,f
  4249     0381                     l1752:
  4250     0381  0829               	movf	___awmod@divisor,w
  4251     0382  042A               	iorwf	___awmod@divisor+1,w
  4252     0383  1903               	btfsc	3,2
  4253     0384  2B86               	goto	u1201
  4254     0385  2B87               	goto	u1200
  4255     0386                     u1201:
  4256     0386  2BB0               	goto	l1770
  4257     0387                     u1200:
  4258     0387                     l1754:
  4259     0387  01AE               	clrf	___awmod@counter
  4260     0388  0AAE               	incf	___awmod@counter,f
  4261     0389  2B93               	goto	l1760
  4262     038A                     l1756:
  4263     038A  3001               	movlw	1
  4264     038B                     u1215:
  4265     038B  35A9               	lslf	___awmod@divisor,f
  4266     038C  0DAA               	rlf	___awmod@divisor+1,f
  4267     038D  0B89               	decfsz	9,f
  4268     038E  2B8B               	goto	u1215
  4269     038F                     l1758:
  4270     038F  3001               	movlw	1
  4271     0390  00AD               	movwf	??___awmod
  4272     0391  082D               	movf	??___awmod,w
  4273     0392  07AE               	addwf	___awmod@counter,f
  4274     0393                     l1760:
  4275     0393  1FAA               	btfss	___awmod@divisor+1,7
  4276     0394  2B96               	goto	u1221
  4277     0395  2B97               	goto	u1220
  4278     0396                     u1221:
  4279     0396  2B8A               	goto	l1756
  4280     0397                     u1220:
  4281     0397                     l1762:
  4282     0397  082A               	movf	___awmod@divisor+1,w
  4283     0398  022C               	subwf	___awmod@dividend+1,w
  4284     0399  1D03               	skipz
  4285     039A  2B9D               	goto	u1235
  4286     039B  0829               	movf	___awmod@divisor,w
  4287     039C  022B               	subwf	___awmod@dividend,w
  4288     039D                     u1235:
  4289     039D  1C03               	skipc
  4290     039E  2BA0               	goto	u1231
  4291     039F  2BA1               	goto	u1230
  4292     03A0                     u1231:
  4293     03A0  2BA5               	goto	l1766
  4294     03A1                     u1230:
  4295     03A1                     l1764:
  4296     03A1  0829               	movf	___awmod@divisor,w
  4297     03A2  02AB               	subwf	___awmod@dividend,f
  4298     03A3  082A               	movf	___awmod@divisor+1,w
  4299     03A4  3BAC               	subwfb	___awmod@dividend+1,f
  4300     03A5                     l1766:
  4301     03A5  3001               	movlw	1
  4302     03A6                     u1245:
  4303     03A6  36AA               	lsrf	___awmod@divisor+1,f
  4304     03A7  0CA9               	rrf	___awmod@divisor,f
  4305     03A8  0B89               	decfsz	9,f
  4306     03A9  2BA6               	goto	u1245
  4307     03AA                     l1768:
  4308     03AA  3001               	movlw	1
  4309     03AB  02AE               	subwf	___awmod@counter,f
  4310     03AC  1D03               	btfss	3,2
  4311     03AD  2BAF               	goto	u1251
  4312     03AE  2BB0               	goto	u1250
  4313     03AF                     u1251:
  4314     03AF  2B97               	goto	l1762
  4315     03B0                     u1250:
  4316     03B0                     l1770:
  4317     03B0  082F               	movf	___awmod@sign,w
  4318     03B1  1903               	btfsc	3,2
  4319     03B2  2BB4               	goto	u1261
  4320     03B3  2BB5               	goto	u1260
  4321     03B4                     u1261:
  4322     03B4  2BBA               	goto	l1774
  4323     03B5                     u1260:
  4324     03B5                     l1772:
  4325     03B5  09AB               	comf	___awmod@dividend,f
  4326     03B6  09AC               	comf	___awmod@dividend+1,f
  4327     03B7  0AAB               	incf	___awmod@dividend,f
  4328     03B8  1903               	skipnz
  4329     03B9  0AAC               	incf	___awmod@dividend+1,f
  4330     03BA                     l1774:
  4331     03BA  082C               	movf	___awmod@dividend+1,w
  4332     03BB  00AA               	movwf	?___awmod+1
  4333     03BC  082B               	movf	___awmod@dividend,w
  4334     03BD  00A9               	movwf	?___awmod
  4335     03BE                     l476:
  4336     03BE  0008               	return
  4337     03BF                     __end_of___awmod:
  4338                           
  4339                           	psect	text16
  4340     030B                     __ptext16:	
  4341 ;; *************** function ___awdiv *****************
  4342 ;; Defined at:
  4343 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  divisor         2    0[BANK0 ] int 
  4346 ;;  dividend        2    2[BANK0 ] int 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  quotient        2    7[BANK0 ] int 
  4349 ;;  sign            1    6[BANK0 ] unsigned char 
  4350 ;;  counter         1    5[BANK0 ] unsigned char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  2    0[BANK0 ] int 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4361 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4363 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4364 ;;Total ram usage:        9 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 4
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_seven_seg_Show
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374     030B                     ___awdiv:	
  4375                           ;psect for function ___awdiv
  4376                           
  4377     030B                     l1696:	
  4378                           ;incstack = 0
  4379                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4380                           
  4381     030B  0140               	movlb	0	; select bank0
  4382     030C  01A6               	clrf	___awdiv@sign
  4383     030D                     l1698:
  4384     030D  1FA1               	btfss	___awdiv@divisor+1,7
  4385     030E  2B10               	goto	u1081
  4386     030F  2B11               	goto	u1080
  4387     0310                     u1081:
  4388     0310  2B18               	goto	l1704
  4389     0311                     u1080:
  4390     0311                     l1700:
  4391     0311  09A0               	comf	___awdiv@divisor,f
  4392     0312  09A1               	comf	___awdiv@divisor+1,f
  4393     0313  0AA0               	incf	___awdiv@divisor,f
  4394     0314  1903               	skipnz
  4395     0315  0AA1               	incf	___awdiv@divisor+1,f
  4396     0316                     l1702:
  4397     0316  01A6               	clrf	___awdiv@sign
  4398     0317  0AA6               	incf	___awdiv@sign,f
  4399     0318                     l1704:
  4400     0318  1FA3               	btfss	___awdiv@dividend+1,7
  4401     0319  2B1B               	goto	u1091
  4402     031A  2B1C               	goto	u1090
  4403     031B                     u1091:
  4404     031B  2B25               	goto	l1710
  4405     031C                     u1090:
  4406     031C                     l1706:
  4407     031C  09A2               	comf	___awdiv@dividend,f
  4408     031D  09A3               	comf	___awdiv@dividend+1,f
  4409     031E  0AA2               	incf	___awdiv@dividend,f
  4410     031F  1903               	skipnz
  4411     0320  0AA3               	incf	___awdiv@dividend+1,f
  4412     0321                     l1708:
  4413     0321  3001               	movlw	1
  4414     0322  00A4               	movwf	??___awdiv
  4415     0323  0824               	movf	??___awdiv,w
  4416     0324  06A6               	xorwf	___awdiv@sign,f
  4417     0325                     l1710:
  4418     0325  01A7               	clrf	___awdiv@quotient
  4419     0326  01A8               	clrf	___awdiv@quotient+1
  4420     0327                     l1712:
  4421     0327  0820               	movf	___awdiv@divisor,w
  4422     0328  0421               	iorwf	___awdiv@divisor+1,w
  4423     0329  1903               	btfsc	3,2
  4424     032A  2B2C               	goto	u1101
  4425     032B  2B2D               	goto	u1100
  4426     032C                     u1101:
  4427     032C  2B5C               	goto	l1732
  4428     032D                     u1100:
  4429     032D                     l1714:
  4430     032D  01A5               	clrf	___awdiv@counter
  4431     032E  0AA5               	incf	___awdiv@counter,f
  4432     032F  2B39               	goto	l1720
  4433     0330                     l1716:
  4434     0330  3001               	movlw	1
  4435     0331                     u1115:
  4436     0331  35A0               	lslf	___awdiv@divisor,f
  4437     0332  0DA1               	rlf	___awdiv@divisor+1,f
  4438     0333  0B89               	decfsz	9,f
  4439     0334  2B31               	goto	u1115
  4440     0335                     l1718:
  4441     0335  3001               	movlw	1
  4442     0336  00A4               	movwf	??___awdiv
  4443     0337  0824               	movf	??___awdiv,w
  4444     0338  07A5               	addwf	___awdiv@counter,f
  4445     0339                     l1720:
  4446     0339  1FA1               	btfss	___awdiv@divisor+1,7
  4447     033A  2B3C               	goto	u1121
  4448     033B  2B3D               	goto	u1120
  4449     033C                     u1121:
  4450     033C  2B30               	goto	l1716
  4451     033D                     u1120:
  4452     033D                     l1722:
  4453     033D  3001               	movlw	1
  4454     033E                     u1135:
  4455     033E  35A7               	lslf	___awdiv@quotient,f
  4456     033F  0DA8               	rlf	___awdiv@quotient+1,f
  4457     0340  0B89               	decfsz	9,f
  4458     0341  2B3E               	goto	u1135
  4459     0342  0821               	movf	___awdiv@divisor+1,w
  4460     0343  0223               	subwf	___awdiv@dividend+1,w
  4461     0344  1D03               	skipz
  4462     0345  2B48               	goto	u1145
  4463     0346  0820               	movf	___awdiv@divisor,w
  4464     0347  0222               	subwf	___awdiv@dividend,w
  4465     0348                     u1145:
  4466     0348  1C03               	skipc
  4467     0349  2B4B               	goto	u1141
  4468     034A  2B4C               	goto	u1140
  4469     034B                     u1141:
  4470     034B  2B51               	goto	l1728
  4471     034C                     u1140:
  4472     034C                     l1724:
  4473     034C  0820               	movf	___awdiv@divisor,w
  4474     034D  02A2               	subwf	___awdiv@dividend,f
  4475     034E  0821               	movf	___awdiv@divisor+1,w
  4476     034F  3BA3               	subwfb	___awdiv@dividend+1,f
  4477     0350                     l1726:
  4478     0350  1427               	bsf	___awdiv@quotient,0
  4479     0351                     l1728:
  4480     0351  3001               	movlw	1
  4481     0352                     u1155:
  4482     0352  36A1               	lsrf	___awdiv@divisor+1,f
  4483     0353  0CA0               	rrf	___awdiv@divisor,f
  4484     0354  0B89               	decfsz	9,f
  4485     0355  2B52               	goto	u1155
  4486     0356                     l1730:
  4487     0356  3001               	movlw	1
  4488     0357  02A5               	subwf	___awdiv@counter,f
  4489     0358  1D03               	btfss	3,2
  4490     0359  2B5B               	goto	u1161
  4491     035A  2B5C               	goto	u1160
  4492     035B                     u1161:
  4493     035B  2B3D               	goto	l1722
  4494     035C                     u1160:
  4495     035C                     l1732:
  4496     035C  0826               	movf	___awdiv@sign,w
  4497     035D  1903               	btfsc	3,2
  4498     035E  2B60               	goto	u1171
  4499     035F  2B61               	goto	u1170
  4500     0360                     u1171:
  4501     0360  2B66               	goto	l1736
  4502     0361                     u1170:
  4503     0361                     l1734:
  4504     0361  09A7               	comf	___awdiv@quotient,f
  4505     0362  09A8               	comf	___awdiv@quotient+1,f
  4506     0363  0AA7               	incf	___awdiv@quotient,f
  4507     0364  1903               	skipnz
  4508     0365  0AA8               	incf	___awdiv@quotient+1,f
  4509     0366                     l1736:
  4510     0366  0828               	movf	___awdiv@quotient+1,w
  4511     0367  00A1               	movwf	?___awdiv+1
  4512     0368  0827               	movf	___awdiv@quotient,w
  4513     0369  00A0               	movwf	?___awdiv
  4514     036A                     l463:
  4515     036A  0008               	return
  4516     036B                     __end_of___awdiv:
  4517                           
  4518                           	psect	text17
  4519     062A                     __ptext17:	
  4520 ;; *************** function _lcd_set_cursor *****************
  4521 ;; Defined at:
  4522 ;;		line 257 in file "timer.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  col             1    wreg     unsigned char 
  4525 ;;  line            1    6[BANK0 ] unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  col             1    7[BANK0 ] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4537 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4540 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4541 ;;Total ram usage:        2 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 6
  4544 ;; This function calls:
  4545 ;;		_LCD_Cmd
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551     062A                     _lcd_set_cursor:	
  4552                           ;psect for function _lcd_set_cursor
  4553                           
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4557                           ;lcd_set_cursor@col stored from wreg
  4558     062A  0140               	movlb	0	; select bank0
  4559     062B  00A7               	movwf	lcd_set_cursor@col
  4560     062C                     l1872:
  4561                           
  4562                           ;timer.c: 257: void lcd_set_cursor(char col,char line);timer.c: 258: {;timer.c: 259:    
      +                           if(line==1){
  4563     062C  0326               	decf	lcd_set_cursor@line,w
  4564     062D  1D03               	btfss	3,2
  4565     062E  2E30               	goto	u1291
  4566     062F  2E31               	goto	u1290
  4567     0630                     u1291:
  4568     0630  2E37               	goto	l1876
  4569     0631                     u1290:
  4570     0631                     l1874:
  4571                           
  4572                           ;timer.c: 260:         LCD_Cmd(0b10000000 | col);
  4573     0631  0827               	movf	lcd_set_cursor@col,w
  4574     0632  3880               	iorlw	128
  4575     0633  3187  2727  3186   	fcall	_LCD_Cmd
  4576                           
  4577                           ;timer.c: 261:     }
  4578     0636  2E42               	goto	l149
  4579     0637                     l1876:
  4580     0637  3002               	movlw	2
  4581     0638  0626               	xorwf	lcd_set_cursor@line,w
  4582     0639  1D03               	btfss	3,2
  4583     063A  2E3C               	goto	u1301
  4584     063B  2E3D               	goto	u1300
  4585     063C                     u1301:
  4586     063C  2E42               	goto	l149
  4587     063D                     u1300:
  4588     063D                     l1878:
  4589                           
  4590                           ;timer.c: 263:         LCD_Cmd(0b11000000 | col);
  4591     063D  0827               	movf	lcd_set_cursor@col,w
  4592     063E  38C0               	iorlw	192
  4593     063F  3187  2727  3186   	fcall	_LCD_Cmd
  4594     0642                     l149:
  4595     0642  0008               	return
  4596     0643                     __end_of_lcd_set_cursor:
  4597                           
  4598                           	psect	text18
  4599     073D                     __ptext18:	
  4600 ;; *************** function _init7Segment *****************
  4601 ;; Defined at:
  4602 ;;		line 266 in file "timer.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4618 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4619 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4620 ;;Total ram usage:        1 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 4
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630     073D                     _init7Segment:	
  4631                           ;psect for function _init7Segment
  4632                           
  4633     073D                     l1804:	
  4634                           ;incstack = 0
  4635                           ; Regs used in _init7Segment: [wreg+status,2+status,0]
  4636                           
  4637                           
  4638                           ;timer.c: 268:     TRISE &= 0b11110010;
  4639     073D  30F2               	movlw	242
  4640     073E  0140               	movlb	0	; select bank0
  4641     073F  00A0               	movwf	??_init7Segment
  4642     0740  0820               	movf	??_init7Segment,w
  4643     0741  0595               	andwf	21,f	;volatile
  4644     0742                     l1806:
  4645                           
  4646                           ;timer.c: 269:     TRISD=0;
  4647     0742  0194               	clrf	20	;volatile
  4648     0743                     l1808:
  4649                           
  4650                           ;timer.c: 270:     PORTD =0;
  4651     0743  018F               	clrf	15	;volatile
  4652     0744                     l1810:
  4653                           
  4654                           ;timer.c: 271:     LATE0 = 0;
  4655     0744  101A               	bcf	26,0	;volatile
  4656     0745                     l1812:
  4657                           
  4658                           ;timer.c: 272:     LATE2 = 0;
  4659     0745  111A               	bcf	26,2	;volatile
  4660     0746                     l152:
  4661     0746  0008               	return
  4662     0747                     __end_of_init7Segment:
  4663                           
  4664                           	psect	text19
  4665     0747                     __ptext19:	
  4666 ;; *************** function _Timer0_Init *****************
  4667 ;; Defined at:
  4668 ;;		line 144 in file "timer.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 4
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696     0747                     _Timer0_Init:	
  4697                           ;psect for function _Timer0_Init
  4698                           
  4699     0747                     l1792:	
  4700                           ;incstack = 0
  4701                           ; Regs used in _Timer0_Init: [wreg]
  4702                           
  4703                           
  4704                           ;timer.c: 146:     T0CON0 = 0b10000000;
  4705     0747  3080               	movlw	128
  4706     0748  0140               	movlb	0	; select bank0
  4707     0749  009E               	movwf	30	;volatile
  4708                           
  4709                           ;timer.c: 148:     T0CON1 = 0b00000110;
  4710     074A  3006               	movlw	6
  4711     074B  009F               	movwf	31	;volatile
  4712                           
  4713                           ;timer.c: 150:     TMR0H = 0x85;
  4714     074C  3085               	movlw	133
  4715     074D  009D               	movwf	29	;volatile
  4716                           
  4717                           ;timer.c: 151:     TMR0L = 0xEE;
  4718     074E  30EE               	movlw	238
  4719     074F  009C               	movwf	28	;volatile
  4720     0750                     l104:
  4721     0750  0008               	return
  4722     0751                     __end_of_Timer0_Init:
  4723                           
  4724                           	psect	text20
  4725     0643                     __ptext20:	
  4726 ;; *************** function _LCD_String *****************
  4727 ;; Defined at:
  4728 ;;		line 246 in file "timer.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  text            2    6[BANK0 ] PTR const unsigned char 
  4731 ;;		 -> STR_4(16), STR_2(17), main@buffer(16), 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4746 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4747 ;;Total ram usage:        3 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 6
  4750 ;; This function calls:
  4751 ;;		_LCD_Char
  4752 ;; This function is called by:
  4753 ;;		_main
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757     0643                     _LCD_String:	
  4758                           ;psect for function _LCD_String
  4759                           
  4760     0643                     l1880:	
  4761                           ;incstack = 0
  4762                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4763                           
  4764                           
  4765                           ;timer.c: 247:     while (*text != '\0') {
  4766     0643  2E51               	goto	l1886
  4767     0644                     l1882:
  4768                           
  4769                           ;timer.c: 248:         LCD_Char(*text++);
  4770     0644  0826               	movf	LCD_String@text,w
  4771     0645  0084               	movwf	4
  4772     0646  0827               	movf	LCD_String@text+1,w
  4773     0647  0085               	movwf	5
  4774     0648  0800               	movf	0,w	;code access
  4775     0649  3187  270F  3186   	fcall	_LCD_Char
  4776     064C                     l1884:
  4777     064C  3001               	movlw	1
  4778     064D  0140               	movlb	0	; select bank0
  4779     064E  07A6               	addwf	LCD_String@text,f
  4780     064F  3000               	movlw	0
  4781     0650  3DA7               	addwfc	LCD_String@text+1,f
  4782     0651                     l1886:
  4783                           
  4784                           ;timer.c: 247:     while (*text != '\0') {
  4785     0651  0140               	movlb	0	; select bank0
  4786     0652  0826               	movf	LCD_String@text,w
  4787     0653  0084               	movwf	4
  4788     0654  0827               	movf	LCD_String@text+1,w
  4789     0655  0085               	movwf	5
  4790     0656  0012               	moviw fsr0++
  4791     0657  1D03               	btfss	3,2
  4792     0658  2E5A               	goto	u1311
  4793     0659  2E5B               	goto	u1310
  4794     065A                     u1311:
  4795     065A  2E44               	goto	l1882
  4796     065B                     u1310:
  4797     065B                     l140:
  4798     065B  0008               	return
  4799     065C                     __end_of_LCD_String:
  4800                           
  4801                           	psect	text21
  4802     070F                     __ptext21:	
  4803 ;; *************** function _LCD_Char *****************
  4804 ;; Defined at:
  4805 ;;		line 223 in file "timer.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  data            1    wreg     unsigned char 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  data            1    5[BANK0 ] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0, pclath, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4822 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4823 ;;Total ram usage:        1 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; Hardware stack levels required when called: 5
  4826 ;; This function calls:
  4827 ;;		_LCD_Send
  4828 ;; This function is called by:
  4829 ;;		_LCD_String
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833     070F                     _LCD_Char:	
  4834                           ;psect for function _LCD_Char
  4835                           
  4836                           
  4837                           ;incstack = 0
  4838                           ; Regs used in _LCD_Char: [wreg+status,2+status,0+pclath+cstack]
  4839                           ;LCD_Char@data stored from wreg
  4840     070F  0140               	movlb	0	; select bank0
  4841     0710  00A5               	movwf	LCD_Char@data
  4842     0711                     l1694:
  4843                           
  4844                           ;timer.c: 224:     LCD_Send(1,data);
  4845     0711  3001               	movlw	1
  4846     0712  00A0               	movwf	LCD_Send@RS
  4847     0713  3000               	movlw	0
  4848     0714  00A1               	movwf	LCD_Send@RS+1
  4849     0715  0825               	movf	LCD_Char@data,w
  4850     0716  00A2               	movwf	LCD_Send@data
  4851     0717  3185  2512  3187   	fcall	_LCD_Send
  4852     071A                     l131:
  4853     071A  0008               	return
  4854     071B                     __end_of_LCD_Char:
  4855                           
  4856                           	psect	text22
  4857     05B7                     __ptext22:	
  4858 ;; *************** function _LCD_Init *****************
  4859 ;; Defined at:
  4860 ;;		line 207 in file "timer.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4877 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4878 ;;Total ram usage:        1 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 6
  4881 ;; This function calls:
  4882 ;;		_LCD_Cmd
  4883 ;; This function is called by:
  4884 ;;		_main
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888     05B7                     _LCD_Init:	
  4889                           ;psect for function _LCD_Init
  4890                           
  4891     05B7                     l1814:	
  4892                           ;incstack = 0
  4893                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4894                           
  4895                           
  4896                           ;timer.c: 209:     TRISC = 0x00;
  4897     05B7  0140               	movlb	0	; select bank0
  4898     05B8  0193               	clrf	19	;volatile
  4899     05B9                     l1816:
  4900                           
  4901                           ;timer.c: 210:     _delay((unsigned long)((15)*(4000000/4000.0)));
  4902     05B9  3014               	movlw	20
  4903     05BA  0140               	movlb	0	; select bank0
  4904     05BB  00A6               	movwf	??_LCD_Init
  4905     05BC  3079               	movlw	121
  4906     05BD                     u1447:
  4907     05BD  0B89               	decfsz	9,f
  4908     05BE  2DBD               	goto	u1447
  4909     05BF  0BA6               	decfsz	??_LCD_Init,f
  4910     05C0  2DBD               	goto	u1447
  4911     05C1  3200               	nop2
  4912     05C2                     l1818:
  4913                           
  4914                           ;timer.c: 212:     LCD_Cmd(0x02);
  4915     05C2  3002               	movlw	2
  4916     05C3  3187  2727  3185   	fcall	_LCD_Cmd
  4917     05C6                     l1820:
  4918                           
  4919                           ;timer.c: 213:     LCD_Cmd(0x28);
  4920     05C6  3028               	movlw	40
  4921     05C7  3187  2727  3185   	fcall	_LCD_Cmd
  4922     05CA                     l1822:
  4923                           
  4924                           ;timer.c: 214:     LCD_Cmd(0x0C);
  4925     05CA  300C               	movlw	12
  4926     05CB  3187  2727  3185   	fcall	_LCD_Cmd
  4927     05CE                     l1824:
  4928                           
  4929                           ;timer.c: 215:     LCD_Cmd(0x06);
  4930     05CE  3006               	movlw	6
  4931     05CF  3187  2727  3185   	fcall	_LCD_Cmd
  4932     05D2                     l1826:
  4933                           
  4934                           ;timer.c: 216:     LCD_Cmd(0x80);
  4935     05D2  3080               	movlw	128
  4936     05D3  3187  2727  3185   	fcall	_LCD_Cmd
  4937     05D6                     l125:
  4938     05D6  0008               	return
  4939     05D7                     __end_of_LCD_Init:
  4940                           
  4941                           	psect	text23
  4942     06F4                     __ptext23:	
  4943 ;; *************** function _LCD_Clear *****************
  4944 ;; Defined at:
  4945 ;;		line 252 in file "timer.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0, pclath, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4963 ;;Total ram usage:        1 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; Hardware stack levels required when called: 6
  4966 ;; This function calls:
  4967 ;;		_LCD_Cmd
  4968 ;; This function is called by:
  4969 ;;		_main
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973     06F4                     _LCD_Clear:	
  4974                           ;psect for function _LCD_Clear
  4975                           
  4976     06F4                     l1828:	
  4977                           ;incstack = 0
  4978                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4979                           
  4980                           
  4981                           ;timer.c: 253:     LCD_Cmd(0x01);
  4982     06F4  3001               	movlw	1
  4983     06F5  3187  2727  3186   	fcall	_LCD_Cmd
  4984     06F8                     l1830:
  4985                           
  4986                           ;timer.c: 254:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4987     06F8  3003               	movlw	3
  4988     06F9  0140               	movlb	0	; select bank0
  4989     06FA  00A6               	movwf	??_LCD_Clear
  4990     06FB  3097               	movlw	151
  4991     06FC                     u1457:
  4992     06FC  0B89               	decfsz	9,f
  4993     06FD  2EFC               	goto	u1457
  4994     06FE  0BA6               	decfsz	??_LCD_Clear,f
  4995     06FF  2EFC               	goto	u1457
  4996     0700  3200               	nop2
  4997     0701                     l143:
  4998     0701  0008               	return
  4999     0702                     __end_of_LCD_Clear:
  5000                           
  5001                           	psect	text24
  5002     0727                     __ptext24:	
  5003 ;; *************** function _LCD_Cmd *****************
  5004 ;; Defined at:
  5005 ;;		line 219 in file "timer.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  command         1    wreg     unsigned char 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  command         1    5[BANK0 ] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      void 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0, pclath, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5022 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5023 ;;Total ram usage:        1 bytes
  5024 ;; Hardware stack levels used: 1
  5025 ;; Hardware stack levels required when called: 5
  5026 ;; This function calls:
  5027 ;;		_LCD_Send
  5028 ;; This function is called by:
  5029 ;;		_LCD_Init
  5030 ;;		_LCD_Clear
  5031 ;;		_lcd_set_cursor
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035     0727                     _LCD_Cmd:	
  5036                           ;psect for function _LCD_Cmd
  5037                           
  5038                           
  5039                           ;incstack = 0
  5040                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5041                           ;LCD_Cmd@command stored from wreg
  5042     0727  0140               	movlb	0	; select bank0
  5043     0728  00A5               	movwf	LCD_Cmd@command
  5044     0729                     l1692:
  5045                           
  5046                           ;timer.c: 220:     LCD_Send(0,command);
  5047     0729  3000               	movlw	0
  5048     072A  00A0               	movwf	LCD_Send@RS
  5049     072B  00A1               	movwf	LCD_Send@RS+1
  5050     072C  0825               	movf	LCD_Cmd@command,w
  5051     072D  00A2               	movwf	LCD_Send@data
  5052     072E  3185  2512  3187   	fcall	_LCD_Send
  5053     0731                     l128:
  5054     0731  0008               	return
  5055     0732                     __end_of_LCD_Cmd:
  5056                           
  5057                           	psect	text25
  5058     0512                     __ptext25:	
  5059 ;; *************** function _LCD_Send *****************
  5060 ;; Defined at:
  5061 ;;		line 227 in file "timer.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  RS              2    0[BANK0 ] int 
  5064 ;;  data            1    2[BANK0 ] unsigned char 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5076 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5078 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5079 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5080 ;;Total ram usage:        5 bytes
  5081 ;; Hardware stack levels used: 1
  5082 ;; Hardware stack levels required when called: 4
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_LCD_Cmd
  5087 ;;		_LCD_Char
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091     0512                     _LCD_Send:	
  5092                           ;psect for function _LCD_Send
  5093                           
  5094     0512                     l1594:	
  5095                           ;incstack = 0
  5096                           ; Regs used in _LCD_Send: [wreg+status,2+status,0]
  5097                           
  5098                           
  5099                           ;timer.c: 227: void LCD_Send(int RS,unsigned char data);timer.c: 228: {;timer.c: 230:   
      +                            PORTCbits.RC0 = RS;
  5100     0512  0140               	movlb	0	; select bank0
  5101     0513  0C20               	rrf	LCD_Send@RS,w
  5102     0514  1C03               	skipc
  5103     0515  100E               	bcf	14,0	;volatile
  5104     0516  1803               	skipnc
  5105     0517  140E               	bsf	14,0	;volatile
  5106     0518                     l1596:
  5107                           
  5108                           ;timer.c: 231:     PORTC = (PORTC & 0x0F) | (data & 0xF0);
  5109     0518  30F0               	movlw	240
  5110     0519  0522               	andwf	LCD_Send@data,w
  5111     051A  00A3               	movwf	??_LCD_Send
  5112     051B  080E               	movf	14,w	;volatile
  5113     051C  390F               	andlw	15
  5114     051D  0423               	iorwf	??_LCD_Send,w
  5115     051E  008E               	movwf	14	;volatile
  5116     051F                     l1598:
  5117                           
  5118                           ;timer.c: 233:     PORTCbits.RC3 = 1;
  5119     051F  158E               	bsf	14,3	;volatile
  5120     0520                     l1600:
  5121                           
  5122                           ;timer.c: 234:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  5123     0520  0000               	nop
  5124     0521                     l1602:
  5125                           
  5126                           ;timer.c: 235:     PORTCbits.RC3 = 0;
  5127     0521  0140               	movlb	0	; select bank0
  5128     0522  118E               	bcf	14,3	;volatile
  5129     0523                     l1604:
  5130                           
  5131                           ;timer.c: 236:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  5132     0523  3042               	movlw	66
  5133     0524                     u1467:
  5134     0524  0B89               	decfsz	9,f
  5135     0525  2D24               	goto	u1467
  5136     0526  3200               	nop2
  5137     0527                     l1606:
  5138                           
  5139                           ;timer.c: 237:     PORTC = (PORTC & 0x0F) | ((data << 4) & 0xF0);
  5140     0527  0140               	movlb	0	; select bank0
  5141     0528  0822               	movf	LCD_Send@data,w
  5142     0529  00A3               	movwf	??_LCD_Send
  5143     052A  3004               	movlw	4
  5144     052B                     u1025:
  5145     052B  35A3               	lslf	??_LCD_Send,f
  5146     052C  0B89               	decfsz	9,f
  5147     052D  2D2B               	goto	u1025
  5148     052E  30F0               	movlw	240
  5149     052F  0523               	andwf	??_LCD_Send,w
  5150     0530  00A4               	movwf	??_LCD_Send+1
  5151     0531  080E               	movf	14,w	;volatile
  5152     0532  390F               	andlw	15
  5153     0533  0424               	iorwf	??_LCD_Send+1,w
  5154     0534  008E               	movwf	14	;volatile
  5155     0535                     l1608:
  5156                           
  5157                           ;timer.c: 239:     PORTCbits.RC3 = 1;
  5158     0535  158E               	bsf	14,3	;volatile
  5159     0536                     l1610:
  5160                           
  5161                           ;timer.c: 240:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  5162     0536  0000               	nop
  5163     0537                     l1612:
  5164                           
  5165                           ;timer.c: 241:     PORTCbits.RC3 = 0;
  5166     0537  0140               	movlb	0	; select bank0
  5167     0538  118E               	bcf	14,3	;volatile
  5168     0539                     l1614:
  5169                           
  5170                           ;timer.c: 242:     _delay((unsigned long)((2)*(4000000/4000.0)));
  5171     0539  3003               	movlw	3
  5172     053A  0140               	movlb	0	; select bank0
  5173     053B  00A3               	movwf	??_LCD_Send
  5174     053C  3097               	movlw	151
  5175     053D                     u1477:
  5176     053D  0B89               	decfsz	9,f
  5177     053E  2D3D               	goto	u1477
  5178     053F  0BA3               	decfsz	??_LCD_Send,f
  5179     0540  2D3D               	goto	u1477
  5180     0541  3200               	nop2
  5181     0542                     l134:
  5182     0542  0008               	return
  5183     0543                     __end_of_LCD_Send:
  5184                           
  5185                           	psect	text26
  5186     065C                     __ptext26:	
  5187 ;; *************** function _ADC_Read *****************
  5188 ;; Defined at:
  5189 ;;		line 194 in file "timer.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  channel         1    wreg     unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  channel         1    4[BANK0 ] unsigned char 
  5194 ;;  result          2    2[BANK0 ] unsigned int 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  2    0[BANK0 ] unsigned int 
  5197 ;; Registers used:
  5198 ;;		wreg
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5205 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5207 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5208 ;;Total ram usage:        5 bytes
  5209 ;; Hardware stack levels used: 1
  5210 ;; Hardware stack levels required when called: 4
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_main
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218     065C                     _ADC_Read:	
  5219                           ;psect for function _ADC_Read
  5220                           
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _ADC_Read: [wreg]
  5224                           ;ADC_Read@channel stored from wreg
  5225     065C  0140               	movlb	0	; select bank0
  5226     065D  00A4               	movwf	ADC_Read@channel
  5227     065E                     l1832:
  5228                           
  5229                           ;timer.c: 195:     unsigned int result;;timer.c: 196:      ADPCH = channel;
  5230     065E  0824               	movf	ADC_Read@channel,w
  5231     065F  0141               	movlb	1	; select bank1
  5232     0660  009E               	movwf	30	;volatile
  5233     0661                     l1834:
  5234                           
  5235                           ;timer.c: 197:     _delay((unsigned long)((2)*(4000000/4000000.0)));
  5236     0661  3200               	nop2	;2 cycle nop
  5237     0662                     l1836:
  5238                           
  5239                           ;timer.c: 199:     ADCON0bits.GO = 1;
  5240     0662  0141               	movlb	1	; select bank1
  5241     0663  1413               	bsf	19,0	;volatile
  5242     0664                     l119:	
  5243                           ;timer.c: 201:     while (ADCON0bits.GO);
  5244                           
  5245     0664  1813               	btfsc	19,0	;volatile
  5246     0665  2E67               	goto	u1281
  5247     0666  2E68               	goto	u1280
  5248     0667                     u1281:
  5249     0667  2E64               	goto	l119
  5250     0668                     u1280:
  5251     0668                     l1838:
  5252                           
  5253                           ;timer.c: 202:     result = ((unsigned int)ADRESH << 8) | ADRESL;
  5254     0668  080D               	movf	13,w	;volatile
  5255     0669  0140               	movlb	0	; select bank0
  5256     066A  00A3               	movwf	ADC_Read@result+1
  5257     066B  0141               	movlb	1	; select bank1
  5258     066C  080C               	movf	12,w	;volatile
  5259     066D  0140               	movlb	0	; select bank0
  5260     066E  00A2               	movwf	ADC_Read@result
  5261                           
  5262                           ;timer.c: 204:     return(result);
  5263     066F  0823               	movf	ADC_Read@result+1,w
  5264     0670  00A1               	movwf	?_ADC_Read+1
  5265     0671  0822               	movf	ADC_Read@result,w
  5266     0672  00A0               	movwf	?_ADC_Read
  5267     0673                     l122:
  5268     0673  0008               	return
  5269     0674                     __end_of_ADC_Read:
  5270                           
  5271                           	psect	text27
  5272     06A3                     __ptext27:	
  5273 ;; *************** function _ADC_Init *****************
  5274 ;; Defined at:
  5275 ;;		line 182 in file "timer.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;		None
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;		None
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  1    wreg      void 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5293 ;;Total ram usage:        0 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 4
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_main
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303     06A3                     _ADC_Init:	
  5304                           ;psect for function _ADC_Init
  5305                           
  5306     06A3                     l1794:	
  5307                           ;incstack = 0
  5308                           ; Regs used in _ADC_Init: [wreg+status,2]
  5309                           
  5310                           
  5311                           ;timer.c: 185:     ANSELA = 0b00000011;
  5312     06A3  3003               	movlw	3
  5313     06A4  017E               	movlb	62	; select bank62
  5314     06A5  00B8               	movwf	56	;volatile
  5315                           
  5316                           ;timer.c: 186:     TRISA = 0b11111111;
  5317     06A6  30FF               	movlw	255
  5318     06A7  0140               	movlb	0	; select bank0
  5319     06A8  0091               	movwf	17	;volatile
  5320     06A9                     l1796:
  5321                           
  5322                           ;timer.c: 187:     ADREF = 0b00000000;
  5323     06A9  0141               	movlb	1	; select bank1
  5324     06AA  019A               	clrf	26	;volatile
  5325     06AB                     l1798:
  5326                           
  5327                           ;timer.c: 188:     ADCLK = 0b00000011;
  5328     06AB  3003               	movlw	3
  5329     06AC  0098               	movwf	24	;volatile
  5330                           
  5331                           ;timer.c: 189:     ADACQ = 0b00000000;
  5332     06AD  019D               	clrf	29	;volatile
  5333     06AE                     l1800:
  5334                           
  5335                           ;timer.c: 190:     ADCON0 = 0b10000100;
  5336     06AE  3084               	movlw	132
  5337     06AF  0093               	movwf	19	;volatile
  5338     06B0                     l1802:
  5339                           
  5340                           ;timer.c: 192:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  5341     06B0  3006               	movlw	6
  5342     06B1                     u1487:
  5343     06B1  0B89               	decfsz	9,f
  5344     06B2  2EB1               	goto	u1487
  5345     06B3  3200               	nop2
  5346     06B4                     l116:
  5347     06B4  0008               	return
  5348     06B5                     __end_of_ADC_Init:
  5349                           
  5350                           	psect	intentry
  5351     0004                     __pintentry:	
  5352 ;; *************** function _isr *****************
  5353 ;; Defined at:
  5354 ;;		line 153 in file "timer.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5370 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5372 ;;Total ram usage:        2 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 3
  5375 ;; This function calls:
  5376 ;;		i1_LCD_Clear
  5377 ;;		i1_LCD_String
  5378 ;;		i1_lcd_set_cursor
  5379 ;; This function is called by:
  5380 ;;		Interrupt level 1
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384     0004                     _isr:
  5385                           
  5386                           ;incstack = 0
  5387     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5388                           
  5389                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5390     0005  3180               	pagesel	$
  5391     0006                     i1l1990:
  5392                           
  5393                           ;timer.c: 155:     if(PIR0bits.TMR0IF==1)
  5394     0006  014E               	movlb	14	; select bank14
  5395     0007  1E8C               	btfss	12,5	;volatile
  5396     0008  280A               	goto	u138_21
  5397     0009  280B               	goto	u138_20
  5398     000A                     u138_21:
  5399     000A  282D               	goto	i1l110
  5400     000B                     u138_20:
  5401     000B                     i1l1992:
  5402                           
  5403                           ;timer.c: 156:     {;timer.c: 157:         PIR0bits.TMR0IF=0;
  5404     000B  128C               	bcf	12,5	;volatile
  5405                           
  5406                           ;timer.c: 158:         PORTBbits.RB0=0;
  5407     000C  0140               	movlb	0	; select bank0
  5408     000D  100D               	bcf	13,0	;volatile
  5409     000E                     i1l1994:
  5410                           
  5411                           ;timer.c: 159:         LCD_Clear();
  5412     000E  3187  271B  3180   	fcall	i1_LCD_Clear
  5413                           
  5414                           ;timer.c: 160:         lcd_set_cursor(1,1);
  5415     0011  01F6               	clrf	i1lcd_set_cursor@line
  5416     0012  0AF6               	incf	i1lcd_set_cursor@line,f
  5417     0013  3001               	movlw	1
  5418     0014  3186  2674  3180   	fcall	i1_lcd_set_cursor
  5419     0017                     i1l1996:
  5420                           
  5421                           ;timer.c: 161:         LCD_String("O2 is OK again!");
  5422     0017  30C6               	movlw	low (STR_4| (0+32768))
  5423     0018  00F6               	movwf	i1LCD_String@text
  5424     0019  3086               	movlw	high (STR_4| (0+32768))
  5425     001A  00F7               	movwf	i1LCD_String@text+1
  5426     001B  3186  268C  3180   	fcall	i1_LCD_String
  5427     001E                     i1l1998:
  5428                           
  5429                           ;timer.c: 162:         _delay((unsigned long)((300)*(4000000/4000.0)));
  5430     001E  3002               	movlw	2
  5431     001F  00FA               	movwf	??_isr+1
  5432     0020  3086               	movlw	134
  5433     0021  00F9               	movwf	??_isr
  5434     0022  3099               	movlw	153
  5435     0023                     u149_27:
  5436     0023  0B89               	decfsz	9,f
  5437     0024  2823               	goto	u149_27
  5438     0025  0BF9               	decfsz	??_isr,f
  5439     0026  2823               	goto	u149_27
  5440     0027  0BFA               	decfsz	??_isr+1,f
  5441     0028  2823               	goto	u149_27
  5442     0029  0000               	nop
  5443     002A                     i1l2000:
  5444                           
  5445                           ;timer.c: 163:          LCD_Clear();
  5446     002A  3187  271B  3180   	fcall	i1_LCD_Clear
  5447     002D                     i1l110:
  5448     002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5449     002E  0009               	retfie
  5450     002F                     __end_of_isr:
  5451                           
  5452                           	psect	text29
  5453     0674                     __ptext29:	
  5454 ;; *************** function i1_lcd_set_cursor *****************
  5455 ;; Defined at:
  5456 ;;		line 257 in file "timer.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  col             1    wreg     unsigned char 
  5459 ;;  line            1    6[COMMON] unsigned char 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  col             1    7[COMMON] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0, pclath, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5471 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5475 ;;Total ram usage:        2 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 2
  5478 ;; This function calls:
  5479 ;;		i1_LCD_Cmd
  5480 ;; This function is called by:
  5481 ;;		_isr
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485     0674                     i1_lcd_set_cursor:	
  5486                           ;psect for function i1_lcd_set_cursor
  5487                           
  5488                           
  5489                           ;incstack = 0
  5490                           ; Regs used in i1_lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5491                           ;i1lcd_set_cursor@col stored from wreg
  5492     0674  00F7               	movwf	i1lcd_set_cursor@col
  5493     0675                     i1l1910:
  5494                           
  5495                           ;timer.c: 257: void lcd_set_cursor(char col,char line);timer.c: 258: {;timer.c: 259:    
      +                           if(line==1){
  5496     0675  0376               	decf	i1lcd_set_cursor@line,w
  5497     0676  1D03               	btfss	3,2
  5498     0677  2E79               	goto	u133_21
  5499     0678  2E7A               	goto	u133_20
  5500     0679                     u133_21:
  5501     0679  2E80               	goto	i1l1914
  5502     067A                     u133_20:
  5503     067A                     i1l1912:
  5504                           
  5505                           ;timer.c: 260:         LCD_Cmd(0b10000000 | col);
  5506     067A  0877               	movf	i1lcd_set_cursor@col,w
  5507     067B  3880               	iorlw	128
  5508     067C  3187  2751  3186   	fcall	i1_LCD_Cmd
  5509                           
  5510                           ;timer.c: 261:     }
  5511     067F  2E8B               	goto	i1l149
  5512     0680                     i1l1914:
  5513     0680  3002               	movlw	2
  5514     0681  0676               	xorwf	i1lcd_set_cursor@line,w
  5515     0682  1D03               	btfss	3,2
  5516     0683  2E85               	goto	u134_21
  5517     0684  2E86               	goto	u134_20
  5518     0685                     u134_21:
  5519     0685  2E8B               	goto	i1l149
  5520     0686                     u134_20:
  5521     0686                     i1l1916:
  5522                           
  5523                           ;timer.c: 263:         LCD_Cmd(0b11000000 | col);
  5524     0686  0877               	movf	i1lcd_set_cursor@col,w
  5525     0687  38C0               	iorlw	192
  5526     0688  3187  2751  3186   	fcall	i1_LCD_Cmd
  5527     068B                     i1l149:
  5528     068B  0008               	return
  5529     068C                     __end_ofi1_lcd_set_cursor:
  5530                           
  5531                           	psect	text30
  5532     068C                     __ptext30:	
  5533 ;; *************** function i1_LCD_String *****************
  5534 ;; Defined at:
  5535 ;;		line 246 in file "timer.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  text            2    6[COMMON] PTR const unsigned char 
  5538 ;;		 -> STR_4(16), STR_2(17), main@buffer(16), 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5553 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5554 ;;Total ram usage:        3 bytes
  5555 ;; Hardware stack levels used: 1
  5556 ;; Hardware stack levels required when called: 2
  5557 ;; This function calls:
  5558 ;;		i1_LCD_Char
  5559 ;; This function is called by:
  5560 ;;		_isr
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564     068C                     i1_LCD_String:	
  5565                           ;psect for function i1_LCD_String
  5566                           
  5567     068C                     i1l1898:	
  5568                           ;incstack = 0
  5569                           ; Regs used in i1_LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5570                           
  5571                           
  5572                           ;timer.c: 247:     while (*text != '\0') {
  5573     068C  2E99               	goto	i1l1904
  5574     068D                     i1l1900:
  5575                           
  5576                           ;timer.c: 248:         LCD_Char(*text++);
  5577     068D  0876               	movf	i1LCD_String@text,w
  5578     068E  0084               	movwf	4
  5579     068F  0877               	movf	i1LCD_String@text+1,w
  5580     0690  0085               	movwf	5
  5581     0691  0800               	movf	0,w	;code access
  5582     0692  3187  2732  3186   	fcall	i1_LCD_Char
  5583     0695                     i1l1902:
  5584     0695  3001               	movlw	1
  5585     0696  07F6               	addwf	i1LCD_String@text,f
  5586     0697  3000               	movlw	0
  5587     0698  3DF7               	addwfc	i1LCD_String@text+1,f
  5588     0699                     i1l1904:
  5589                           
  5590                           ;timer.c: 247:     while (*text != '\0') {
  5591     0699  0876               	movf	i1LCD_String@text,w
  5592     069A  0084               	movwf	4
  5593     069B  0877               	movf	i1LCD_String@text+1,w
  5594     069C  0085               	movwf	5
  5595     069D  0012               	moviw fsr0++
  5596     069E  1D03               	btfss	3,2
  5597     069F  2EA1               	goto	u132_21
  5598     06A0  2EA2               	goto	u132_20
  5599     06A1                     u132_21:
  5600     06A1  2E8D               	goto	i1l1900
  5601     06A2                     u132_20:
  5602     06A2                     i1l140:
  5603     06A2  0008               	return
  5604     06A3                     __end_ofi1_LCD_String:
  5605                           
  5606                           	psect	text31
  5607     0732                     __ptext31:	
  5608 ;; *************** function i1_LCD_Char *****************
  5609 ;; Defined at:
  5610 ;;		line 223 in file "timer.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  data            1    wreg     unsigned char 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  data            1    5[COMMON] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0, pclath, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5628 ;;Total ram usage:        1 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; Hardware stack levels required when called: 1
  5631 ;; This function calls:
  5632 ;;		i1_LCD_Send
  5633 ;; This function is called by:
  5634 ;;		i1_LCD_String
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638     0732                     i1_LCD_Char:	
  5639                           ;psect for function i1_LCD_Char
  5640                           
  5641                           
  5642                           ;incstack = 0
  5643                           ; Regs used in i1_LCD_Char: [wreg+status,2+status,0+pclath+cstack]
  5644                           ;i1LCD_Char@data stored from wreg
  5645     0732  00F5               	movwf	i1LCD_Char@data
  5646     0733                     i1l1790:
  5647                           
  5648                           ;timer.c: 224:     LCD_Send(1,data);
  5649     0733  3001               	movlw	1
  5650     0734  00F0               	movwf	i1LCD_Send@RS
  5651     0735  3000               	movlw	0
  5652     0736  00F1               	movwf	i1LCD_Send@RS+1
  5653     0737  0875               	movf	i1LCD_Char@data,w
  5654     0738  00F2               	movwf	i1LCD_Send@data
  5655     0739  3185  2543  3187   	fcall	i1_LCD_Send
  5656     073C                     i1l131:
  5657     073C  0008               	return
  5658     073D                     __end_ofi1_LCD_Char:
  5659                           
  5660                           	psect	text32
  5661     071B                     __ptext32:	
  5662 ;; *************** function i1_LCD_Clear *****************
  5663 ;; Defined at:
  5664 ;;		line 252 in file "timer.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0, pclath, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5682 ;;Total ram usage:        1 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 2
  5685 ;; This function calls:
  5686 ;;		i1_LCD_Cmd
  5687 ;; This function is called by:
  5688 ;;		_isr
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692     071B                     i1_LCD_Clear:	
  5693                           ;psect for function i1_LCD_Clear
  5694                           
  5695     071B                     i1l1906:	
  5696                           ;incstack = 0
  5697                           ; Regs used in i1_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  5698                           
  5699                           
  5700                           ;timer.c: 253:     LCD_Cmd(0x01);
  5701     071B  3001               	movlw	1
  5702     071C  3187  2751  3187   	fcall	i1_LCD_Cmd
  5703     071F                     i1l1908:
  5704                           
  5705                           ;timer.c: 254:     _delay((unsigned long)((2)*(4000000/4000.0)));
  5706     071F  3003               	movlw	3
  5707     0720  00F6               	movwf	??i1_LCD_Clear
  5708     0721  3098               	movlw	152
  5709     0722                     u150_27:
  5710     0722  0B89               	decfsz	9,f
  5711     0723  2F22               	goto	u150_27
  5712     0724  0BF6               	decfsz	??i1_LCD_Clear,f
  5713     0725  2F22               	goto	u150_27
  5714     0726                     i1l143:
  5715     0726  0008               	return
  5716     0727                     __end_ofi1_LCD_Clear:
  5717                           
  5718                           	psect	text33
  5719     0751                     __ptext33:	
  5720 ;; *************** function i1_LCD_Cmd *****************
  5721 ;; Defined at:
  5722 ;;		line 219 in file "timer.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  command         1    wreg     unsigned char 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  command         1    5[COMMON] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0, pclath, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5740 ;;Total ram usage:        1 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 1
  5743 ;; This function calls:
  5744 ;;		i1_LCD_Send
  5745 ;; This function is called by:
  5746 ;;		i1_LCD_Clear
  5747 ;;		i1_lcd_set_cursor
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751     0751                     i1_LCD_Cmd:	
  5752                           ;psect for function i1_LCD_Cmd
  5753                           
  5754                           
  5755                           ;incstack = 0
  5756                           ; Regs used in i1_LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5757                           ;i1LCD_Cmd@command stored from wreg
  5758     0751  00F5               	movwf	i1LCD_Cmd@command
  5759     0752                     i1l1788:
  5760                           
  5761                           ;timer.c: 220:     LCD_Send(0,command);
  5762     0752  3000               	movlw	0
  5763     0753  00F0               	movwf	i1LCD_Send@RS
  5764     0754  00F1               	movwf	i1LCD_Send@RS+1
  5765     0755  0875               	movf	i1LCD_Cmd@command,w
  5766     0756  00F2               	movwf	i1LCD_Send@data
  5767     0757  3185  2543  3187   	fcall	i1_LCD_Send
  5768     075A                     i1l128:
  5769     075A  0008               	return
  5770     075B                     __end_ofi1_LCD_Cmd:
  5771                           
  5772                           	psect	text34
  5773     0543                     __ptext34:	
  5774 ;; *************** function i1_LCD_Send *****************
  5775 ;; Defined at:
  5776 ;;		line 227 in file "timer.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  RS              2    0[COMMON] int 
  5779 ;;  data            1    2[COMMON] unsigned char 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5791 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5794 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5795 ;;Total ram usage:        5 bytes
  5796 ;; Hardware stack levels used: 1
  5797 ;; This function calls:
  5798 ;;		Nothing
  5799 ;; This function is called by:
  5800 ;;		i1_LCD_Cmd
  5801 ;;		i1_LCD_Char
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805     0543                     i1_LCD_Send:	
  5806                           ;psect for function i1_LCD_Send
  5807                           
  5808     0543                     i1l1670:	
  5809                           ;incstack = 0
  5810                           ; Regs used in i1_LCD_Send: [wreg+status,2+status,0]
  5811                           
  5812                           
  5813                           ;timer.c: 227: void LCD_Send(int RS,unsigned char data);timer.c: 228: {;timer.c: 230:   
      +                            PORTCbits.RC0 = RS;
  5814     0543  0C70               	rrf	i1LCD_Send@RS,w
  5815     0544  0140               	movlb	0	; select bank0
  5816     0545  1C03               	skipc
  5817     0546  100E               	bcf	14,0	;volatile
  5818     0547  1803               	skipnc
  5819     0548  140E               	bsf	14,0	;volatile
  5820     0549                     i1l1672:
  5821                           
  5822                           ;timer.c: 231:     PORTC = (PORTC & 0x0F) | (data & 0xF0);
  5823     0549  30F0               	movlw	240
  5824     054A  0572               	andwf	i1LCD_Send@data,w
  5825     054B  00F3               	movwf	??i1_LCD_Send
  5826     054C  080E               	movf	14,w	;volatile
  5827     054D  390F               	andlw	15
  5828     054E  0473               	iorwf	??i1_LCD_Send,w
  5829     054F  008E               	movwf	14	;volatile
  5830     0550                     i1l1674:
  5831                           
  5832                           ;timer.c: 233:     PORTCbits.RC3 = 1;
  5833     0550  158E               	bsf	14,3	;volatile
  5834     0551                     i1l1676:
  5835                           
  5836                           ;timer.c: 234:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  5837     0551  0000               	nop
  5838     0552                     i1l1678:
  5839                           
  5840                           ;timer.c: 235:     PORTCbits.RC3 = 0;
  5841     0552  0140               	movlb	0	; select bank0
  5842     0553  118E               	bcf	14,3	;volatile
  5843     0554                     i1l1680:
  5844                           
  5845                           ;timer.c: 236:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  5846     0554  3042               	movlw	66
  5847     0555                     u151_27:
  5848     0555  0B89               	decfsz	9,f
  5849     0556  2D55               	goto	u151_27
  5850     0557  3200               	nop2
  5851     0558                     i1l1682:
  5852                           
  5853                           ;timer.c: 237:     PORTC = (PORTC & 0x0F) | ((data << 4) & 0xF0);
  5854     0558  0872               	movf	i1LCD_Send@data,w
  5855     0559  00F3               	movwf	??i1_LCD_Send
  5856     055A  3004               	movlw	4
  5857     055B                     u107_25:
  5858     055B  35F3               	lslf	??i1_LCD_Send,f
  5859     055C  0B89               	decfsz	9,f
  5860     055D  2D5B               	goto	u107_25
  5861     055E  30F0               	movlw	240
  5862     055F  0573               	andwf	??i1_LCD_Send,w
  5863     0560  00F4               	movwf	??i1_LCD_Send+1
  5864     0561  0140               	movlb	0	; select bank0
  5865     0562  080E               	movf	14,w	;volatile
  5866     0563  390F               	andlw	15
  5867     0564  0474               	iorwf	??i1_LCD_Send+1,w
  5868     0565  008E               	movwf	14	;volatile
  5869     0566                     i1l1684:
  5870                           
  5871                           ;timer.c: 239:     PORTCbits.RC3 = 1;
  5872     0566  158E               	bsf	14,3	;volatile
  5873     0567                     i1l1686:
  5874                           
  5875                           ;timer.c: 240:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  5876     0567  0000               	nop
  5877     0568                     i1l1688:
  5878                           
  5879                           ;timer.c: 241:     PORTCbits.RC3 = 0;
  5880     0568  0140               	movlb	0	; select bank0
  5881     0569  118E               	bcf	14,3	;volatile
  5882     056A                     i1l1690:
  5883                           
  5884                           ;timer.c: 242:     _delay((unsigned long)((2)*(4000000/4000.0)));
  5885     056A  3003               	movlw	3
  5886     056B  00F3               	movwf	??i1_LCD_Send
  5887     056C  3098               	movlw	152
  5888     056D                     u152_27:
  5889     056D  0B89               	decfsz	9,f
  5890     056E  2D6D               	goto	u152_27
  5891     056F  0BF3               	decfsz	??i1_LCD_Send,f
  5892     0570  2D6D               	goto	u152_27
  5893     0571                     i1l134:
  5894     0571  0008               	return
  5895     0572                     __end_ofi1_LCD_Send:
  5896     007E                     btemp	set	126	;btemp
  5897     007E                     int$flags	set	126
  5898     007E                     wtemp0	set	126
  5899                           
  5900                           	psect	config
  5901                           
  5902                           ;Config register CONFIG1 @ 0x8007
  5903                           ;	External Oscillator mode selection bits
  5904                           ;	FEXTOSC = OFF, Oscillator not enabled
  5905                           ;	Power-up default value for COSC bits
  5906                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  5907                           ;	Clock Out Enable bit
  5908                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  5909                           ;	Clock Switch Enable bit
  5910                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5911                           ;	Fail-Safe Clock Monitor Enable bit
  5912                           ;	FCMEN = ON, FSCM timer enabled
  5913     8007                     	org	32775
  5914     8007  3FEC               	dw	16364
  5915                           
  5916                           ;Config register CONFIG2 @ 0x8008
  5917                           ;	Master Clear Enable bit
  5918                           ;	MCLRE = ON, MCLR pin is Master Clear function
  5919                           ;	Power-up Timer Enable bit
  5920                           ;	PWRTE = OFF, PWRT disabled
  5921                           ;	Low-Power BOR enable bit
  5922                           ;	LPBOREN = OFF, ULPBOR disabled
  5923                           ;	Brown-out reset enable bits
  5924                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5925                           ;	Brown-out Reset Voltage Selection
  5926                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  5927                           ;	Zero-cross detect disable
  5928                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  5929                           ;	Peripheral Pin Select one-way control
  5930                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  5931                           ;	Stack Overflow/Underflow Reset Enable bit
  5932                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5933                           ;	Background Debugger
  5934                           ;	DEBUG = 0x1, unprogrammed default
  5935     8008                     	org	32776
  5936     8008  3FFF               	dw	16383
  5937                           
  5938                           ;Config register CONFIG3 @ 0x8009
  5939                           ;	WDT Period Select bits
  5940                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5941                           ;	WDT operating mode
  5942                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  5943                           ;	WDT Window Select bits
  5944                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5945                           ;	WDT input clock selector
  5946                           ;	WDTCCS = SC, Software Control
  5947     8009                     	org	32777
  5948     8009  3F9F               	dw	16287
  5949                           
  5950                           ;Config register CONFIG4 @ 0x800A
  5951                           ;	UserNVM self-write protection bits
  5952                           ;	WRT = OFF, Write protection off
  5953                           ;	Scanner Enable bit
  5954                           ;	SCANE = available, Scanner module is available for use
  5955                           ;	Low Voltage Programming Enable bit
  5956                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  5957     800A                     	org	32778
  5958     800A  3FFF               	dw	16383
  5959                           
  5960                           ;Config register CONFIG5 @ 0x800B
  5961                           ;	UserNVM Program memory code protection bit
  5962                           ;	CP = OFF, Program Memory code protection disabled
  5963                           ;	DataNVM code protection bit
  5964                           ;	CPD = OFF, Data EEPROM code protection disabled
  5965     800B                     	org	32779
  5966     800B  3FFF               	dw	16383

Data Sizes:
    Strings     63
    Constant    0
    Data        26
    BSS         37
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     74      79
    BANK1            80     38      64
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S857$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S803$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S803$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_String@text	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[16]), STR_2(CODE[17]), main@buffer(BANK1[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_LCD_String
    i1_lcd_set_cursor->i1_LCD_Cmd
    i1_LCD_String->i1_LCD_Char
    i1_LCD_Char->i1_LCD_Send
    i1_LCD_Clear->i1_LCD_Cmd
    i1_LCD_Cmd->i1_LCD_Send

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___lwdiv->___wmul
    _read_prec_or_width->___wmul
    _seven_seg_Show->___awmod
    ___awmod->___awdiv
    _lcd_set_cursor->_LCD_Cmd
    _LCD_String->_LCD_Char
    _LCD_Char->_LCD_Send
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _LCD_Cmd->_LCD_Send

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _isr in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _isr in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _isr in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _isr in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _isr in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _isr in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _isr in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _isr in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _isr in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _isr in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _isr in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _isr in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _isr in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _isr in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _isr in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _isr in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _isr in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _isr in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _isr in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _isr in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _isr in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _isr in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _isr in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _isr in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _isr in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                44    44      0   11615
                                             72 BANK0      2     2      0
                                              0 BANK1     38    38      0
                           _ADC_Init
                           _ADC_Read
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                        _Timer0_Init
                            ___lwdiv
                             ___wmul
                       _init7Segment
                     _lcd_set_cursor
                     _seven_seg_Show
                            _sprintf
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    16      4    6647
                                             54 BANK0     18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    6228
                                             47 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    16      2    5912
                                             34 BANK0     13    11      2
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                10     8      2    3636
                                             24 BANK0     10     8      2
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2370
                                             15 BANK0      9     6      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1    1149
                                              8 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     618
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     837
                                              6 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _seven_seg_Show                                       5     3      2    1218
                                             16 BANK0      5     3      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       2     1      1     758
                                              6 BANK0      2     1      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _init7Segment                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           3     1      2     715
                                              6 BANK0      3     1      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             1     1      0     392
                                              5 BANK0      1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     392
                                              6 BANK0      1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     392
                                              6 BANK0      1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              1     1      0     392
                                              5 BANK0      1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             5     2      3     370
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      45
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  2     2      0     761
                                              9 COMMON     2     2      0
                        i1_LCD_Clear
                       i1_LCD_String
                   i1_lcd_set_cursor
 ---------------------------------------------------------------------------------
 (10) i1_lcd_set_cursor                                    2     1      1     306
                                              6 COMMON     2     1      1
                          i1_LCD_Cmd
 ---------------------------------------------------------------------------------
 (10) i1_LCD_String                                        3     1      2     263
                                              6 COMMON     3     1      2
                         i1_LCD_Char
 ---------------------------------------------------------------------------------
 (11) i1_LCD_Char                                          1     1      0     192
                                              5 COMMON     1     1      0
                         i1_LCD_Send
 ---------------------------------------------------------------------------------
 (10) i1_LCD_Clear                                         1     1      0     192
                                              6 COMMON     1     1      0
                          i1_LCD_Cmd
 ---------------------------------------------------------------------------------
 (11) i1_LCD_Cmd                                           1     1      0     192
                                              5 COMMON     1     1      0
                         i1_LCD_Send
 ---------------------------------------------------------------------------------
 (12) i1_LCD_Send                                          5     2      3     170
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Clear
     _LCD_Cmd
       _LCD_Send
   _LCD_Init
     _LCD_Cmd
   _LCD_String
     _LCD_Char
       _LCD_Send
   _Timer0_Init
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _init7Segment
   _lcd_set_cursor
     _LCD_Cmd
   _seven_seg_Show
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad
             _fputc
             _fputs
               _fputc
   _timer

 _isr (ROOT)
   i1_LCD_Clear
     i1_LCD_Cmd
       i1_LCD_Send
   i1_LCD_String
     i1_LCD_Char
       i1_LCD_Send
   i1_lcd_set_cursor
     i1_LCD_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     26      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      BA      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      BA      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 10 10:41:31 2023

              ___awdiv@sign 0026            ??_seven_seg_Show 0032         ___wmul@multiplicand 0022  
               ?_LCD_String 0026                         l104 0750                         l113 070E  
                       l122 0673                         l131 071A                         l116 06B4  
                       l140 065B                         l125 05D6                         l134 0542  
                       l310 05A2                         l119 0664                         l143 0701  
                       l128 0731                         l152 0746                         l312 05B6  
                       l155 045B                         l149 0642                         l600 0511  
                       l463 036A                         l811 02AA                         l476 03BE  
                       l805 0248                         l590 04DC                         l819 030A  
                       l860 0767                         l829 0238                         l837 060F  
                       l773 05F3                         l849 0410                         l857 0596  
                       l794 0474                         l797 0494                         l799 049F  
                       u700 03C5                         u701 03C4                         u710 03CA  
                       u711 03C9                         u720 03D9                         u721 03D8  
                       u810 04B9                         u730 03F7                         u811 04B8  
                       u731 03F6                         u740 0596                         u805 04AD  
                       u741 0595                         u750 059E                         u830 04C8  
                       u910 050D                         u751 059D                         u831 04C7  
                       u911 050C                         u735 03F3                         u920 0462  
                       u825 04BA                         u905 0503                         u921 0461  
                       u850 04D8                         u930 046D                         u851 04D7  
                       u835 04C4                         u931 046C                         u780 05B2  
                       u860 04E4                         u940 0494                         u781 05B1  
                       u765 05A3                         u845 04CE                         u861 04E3  
                       u941 0493                         u790 04A9                         u950 0499  
                       u775 05A8                         u791 04A8                         u951 0498  
                       u880 04F4                         u960 023F                         u881 04F3  
                       u945 0490                         u961 023E                         u890 04FE  
                       u970 028B                         u891 04FD                         u875 04E8  
                       u971 028A                         u980 0291                         u981 0290  
                       u990 029E                         u895 04FA                         u991 029D  
                       u995 029A                         _pad 045C                         _isr 0004  
              ___awmod@sign 002F                         wreg 0009             ?_lcd_set_cursor 0026  
           __end_of_LCD_Cmd 0732                 ?i1_LCD_Char 0070                        l2022 01EE  
                      l1500 04CD                        l1502 04D2                        l1510 04E4  
                      l1600 0520                        l1504 04D8                        l1520 04FE  
                      l1512 04E7                        l1610 0536                        l1602 0521  
                      l1522 0502                        l1514 04EC                        l1450 03CF  
                      l1530 045E                        l1612 0537                        l1604 0523  
                      l1700 0311                        l1524 0507                        l1516 04F0  
                      l1508 04DD                        l1452 03D9                        l1444 03BF  
                      l1460 0574                        l1540 0477                        l1532 0462  
                      l1620 018E                        l1614 0539                        l1606 0527  
                      l1710 0325                        l1702 0316                        l1470 059A  
                      l1518 04F4                        l1526 050D                        l1454 03F7  
                      l1446 03C5                        l1462 0577                        l1542 0481  
                      l1534 0468                        l1550 023F                        l1630 01A9  
                      l1622 0195                        l1800 06AE                        l1608 0535  
                      l1720 0339                        l1712 0327                        l1704 0318  
                      l1472 059E                        l1456 0407                        l1448 03CA  
                      l1464 0583                        l1544 0486                        l1536 046D  
                      l1560 026C                        l1552 0244                        l1640 01D9  
                      l1632 01AE                        l1624 0199                        l1616 0175  
                      l1802 06B0                        l1810 0744                        l1730 0356  
                      l1722 033D                        l1714 032D                        l1706 031C  
                      l1474 05A7                        l1490 04B1                        l1482 04A0  
                      l1466 0588                        l1546 0499                        l1538 0472  
                      l1570 0291                        l1562 0270                        l1554 0250  
                      l1650 0204                        l1634 01B5                        l1626 01A4  
                      l1618 0186                        l1820 05C6                        l1812 0745  
                      l1804 073D                        l1724 034C                        l1716 0330  
                      l1732 035C                        l1708 0321                        l1740 036B  
                      l1476 05AC                        l1468 0597                        l1580 02C0  
                      l1492 04B5                        l1484 04A3                        l1572 029E  
                      l1564 0274                        l1556 0253                        l1548 023B  
                      l1652 020C                        l1636 01BF                        l1628 01A8  
                      l1660 0220                        l1830 06F8                        l1822 05CA  
                      l1814 05B7                        l1806 0742                        l1734 0361  
                      l1726 0350                        l1718 0335                        l1750 037C  
                      l1742 036D                        l1478 05B2                        l1590 0306  
                      l1582 02C8                        l1494 04B9                        l1486 04A9  
                      l1558 0258                        l1566 0284                        l1646 01E2  
                      l1638 01CB                        l1832 065E                        l1824 05CE  
                      l1816 05B9                        l1808 0743                        l1736 0366  
                      l1728 0351                        l1760 0393                        l1752 0381  
                      l1744 0371                        l1584 02D5                        l1576 02AD  
                      l1496 04C8                        l1488 04AC                        l1568 028B  
                      l1656 0216                        l1648 01F3                        l1920 0050  
                      l1834 0661                        l1594 0512                        l1826 05D2  
                      l1818 05C2                        l1762 0397                        l1754 0387  
                      l1770 03B0                        l1746 0376                        l1586 02EA  
                      l1578 02AF                        l1498 04CC                        l1850 05EB  
                      l1842 05D9                        l1930 0067                        l1922 005E  
                      l1836 0662                        l1596 0518                        l1692 0729  
                      l1828 06F4                        l1772 03B5                        l1764 03A1  
                      l1756 038A                        l1748 0378                        l1860 0441  
                      l1588 02F2                        l1780 05FB                        l1844 05DD  
                      l1940 0085                        l1932 006A                        l1924 005E  
                      l1838 0668                        l1598 051F                        l1694 0711  
                      l1774 03BA                        l1766 03A5                        l1758 038F  
                      l1870 0453                        l1862 0442                        l1854 0411  
                      l1782 0603                        l1846 05DF                        l1950 00BD  
                      l1942 00A9                        l1934 006D                        l1926 0061  
                      l1918 004E                        l1880 0643                        l1792 0747  
                      l1872 062C                        l1696 030B                        l1768 03AA  
                      l1864 044A                        l1856 043A                        l1784 060D  
                      l1848 05E1                        l1960 00E6                        l1952 00C8  
                      l1944 00BA                        l1936 006D                        l1928 0064  
                      l1794 06A3                        l1882 0644                        l1874 0631  
                      l1698 030D                        l1866 044C                        l1858 043B  
                      l1778 05F6                        l1890 0703                        l1970 00FD  
                      l1962 00E8                        l1954 00CD                        l1938 0079  
                      l1796 06A9                        l1884 064C                        l1876 0637  
                      l1868 0452                        l1892 070A                        l1980 0123  
                      l1964 00EB                        l1972 0105                        l1956 00DC  
                      l1798 06AB                        l1886 0651                        l1878 063D  
                      l1894 070C                        l1982 0147                        l1974 0108  
                      l1966 00F2                        l1958 00E6                        ?_pad 002F  
                      l1896 070D                        l1888 0702                        l1984 0158  
                      l1976 010F                        l1968 00FA                        l1986 015F  
                      l1978 0117                        l1988 0167                        ?_isr 0070  
                      STR_1 06D6                        STR_2 06B5                        STR_3 06E5  
                      STR_4 06C6                 ?i1_LCD_Send 0070                        u1000 02C0  
                      u1001 02BF                        u1010 0306                        u1011 0305  
                      u1100 032D                        u1101 032C                        u1030 0186  
                      u1031 0185                        u1120 033D                        u1200 0387  
                      u1040 01A8                        u1025 052B                        u1121 033C  
                      u1201 0386                        u1041 01A7                        u1050 01BF  
                      u1115 0331                        u1051 01BE                        u1300 063D  
                      u1140 034C                        u1220 0397                        u1060 0204  
                      u1301 063C                        u1141 034B                        u1221 0396  
                      u1061 0203                        u1310 065B                        u1230 03A1  
                      u1311 065A                        u1135 033E                        u1231 03A0  
                      u1215 038B                        u1160 035C                        u1080 0311  
                      u1161 035B                        u1145 0348                        u1081 0310  
                      u1170 0361                        u1090 031C                        u1250 03B0  
                      u1171 0360                        u1155 0352                        u1091 031B  
                      u1251 03AF                        u1235 039D                        u1260 03B5  
                      u1180 0371                        u1261 03B4                        u1245 03A6  
                      u1181 0370                        u1190 037C                        u1270 060D  
                      u1350 005A                        u1191 037B                        u1271 060C  
                      u1407 0101                        u1280 0668                        u1360 00DC  
                      u1281 0667                        u1417 016B                        u1361 00DB  
                      u1290 0631                        u1370 00E6                        u1291 0630  
                      u1427 0446                        u1371 00E5                        u1437 0457  
                      u1365 00D8                        u1447 05BD                        u1457 06FC  
                      u1467 0524                        u1477 053D                        u1397 0073  
                      u1487 06B1                        _dbuf 0120                        _main 004E  
                      _prec 006C                        pad@i 0033                        pad@p 0030  
                      fsr0h 0005                        fsr1h 0007                        indf0 0000  
                      fsr0l 0004                        indf1 0001                        fsr1l 0006  
                      pad@w 0035                        btemp 007E                        _utoa 0239  
          __end_of_ADC_Init 06B5            __end_of_ADC_Read 0674                        start 002F  
             ?_init7Segment 0070                       ??_pad 0032                       ??_isr 0079  
          __end_of_LCD_Char 071B            __end_of_LCD_Init 05D7                LCD_Char@data 0025  
          __end_of_LCD_Send 0543            i1LCD_String@text 0076                ?i1_LCD_Clear 0070  
                     _ADACQ 009D                       ?_main 0070                       _ADCLK 0098  
                     _ADPCH 009E                       _ADREF 009A             __end_of___awdiv 036B  
           __end_of___awmod 03BF                       ?_utoa 0038             ___awdiv@divisor 0020  
                     _LATE0 00D0                       _LATE2 00D2             __end_of___lwdiv 04DD  
                     i1l110 002D                       i1l131 073C                       i1l140 06A2  
                     i1l134 0571                       i1l143 0726                       i1l128 075A  
                     i1l149 068B             __end_of___lwmod 0512             ___awdiv@counter 0025  
              vfpfcnvrt@fmt 0042                       _TMR0H 001D                       _TMR0L 001C  
                     _PORTC 000E                       _PORTD 000F                       _TRISA 0011  
                     _TRISB 0012                       _TRISC 0013                       _TRISD 0014  
                     _TRISE 0015                       _flags 006E         read_prec_or_width@c 002B  
       read_prec_or_width@n 002C                       _fputc 03BF                       _fputs 0572  
                     _timer 0702                       pad@fp 0037                       _width 006A  
                     _putch 0767                       main@j 00C0                       utoa@d 0038  
                     utoa@i 0040                       utoa@p 003E                       utoa@w 003B  
                     status 0003                       wtemp0 007E             __end_of_sprintf 05F4  
           __initialization 0031              ??_init7Segment 0020                __end_of_main 0173  
              __end_of_utoa 02AB                LCD_Send@data 0022                      ??_main 0068  
            i1LCD_Char@data 0075                      ??_utoa 003A           __end_of_LCD_Clear 0702  
                 ??_LCD_Cmd 0025  __end_of_read_prec_or_width 030B                      _ADCON0 0093  
                    ?_fputc 0020                      ?_fputs 0028                      _ADRESH 008D  
                    _ADRESL 008C            ___awdiv@dividend 0022           __end_ofi1_LCD_Cmd 075B  
                    ?_timer 0070                      _ANSELA 1F38                      ?_putch 0070  
                    _T0CON0 001E                      _T0CON1 001F                      i1l2000 002A  
                    i1l1900 068D                      i1l1670 0543                      i1l1902 0695  
                    i1l1910 0675                      i1l1680 0554                      i1l1672 0549  
                    i1l1904 0699                      i1l1912 067A                      i1l1690 056A  
                    i1l1682 0558                      i1l1674 0550                      i1l1906 071B  
                    i1l1914 0680                      i1l1684 0566                      i1l1676 0551  
                    i1l1908 071F                      i1l1916 0686                      i1l1686 0567  
                    i1l1678 0552                      i1l1790 0733                      i1l1688 0568  
                    i1l1788 0752                      u107_25 055B                      i1l1990 0006  
                    u132_20 06A2                      i1l1992 000B                      u132_21 06A1  
                    i1l1898 068C                      i1l1994 000E                      i1l1996 0017  
                    i1l1998 001E                      u133_20 067A                      u133_21 0679  
                    u134_20 0686                      u134_21 0685                      u150_27 0722  
                    u151_27 0555                      u152_27 056D                      u138_20 000B  
                    u138_21 000A                      u149_27 0023               ?i1_LCD_String 0076  
             ??_Timer0_Init 0020                vfprintf@cfmt 0054                      ___wmul 0597  
                 ??___awdiv 0024                   ??___awmod 002D            i1_lcd_set_cursor 0674  
                 ??___lwdiv 002A                   ??___lwmod 0024             ADC_Read@channel 0024  
      read_prec_or_width@ap 0026            ___awdiv@quotient 0027             ___awmod@divisor 0029  
           ___awmod@counter 002E                      pad@buf 002F              i1LCD_Send@data 0072  
                    fputc@c 0020                      fputs@c 002B                      fputs@i 002C  
                    fputs@s 002E                   ?_ADC_Init 0070                   ?_ADC_Read 0020  
                    putch@c 0070            __end_of_vfprintf 0610                      utoa@fp 003D  
                 ??_sprintf 005A              ??i1_LCD_String 0078                   ?_LCD_Char 0070  
   __end_of__initialization 004A                   ?_LCD_Init 0070                   ?_LCD_Send 0020  
            __pcstackCOMMON 0070                __pidataBANK1 0610               __end_of_fputc 0411  
             __end_of_fputs 0597         i1lcd_set_cursor@col 0077               __end_of_timer 070F  
       __end_of_Timer0_Init 0751               __end_of_putch 0768                ??_LCD_String 0028  
          ??_lcd_set_cursor 0027                  ??_ADC_Init 0020                  ??_ADC_Read 0022  
              i1LCD_Send@RS 0070        __end_of_init7Segment 0747                     ??_fputc 0023  
                   ??_fputs 0029                ??i1_LCD_Char 0075                     ??_timer 0020  
                   ??_putch 0020                ??i1_LCD_Send 0073                  __pbssBANK0 006A  
                __pbssBANK2 0120              LCD_Cmd@command 0025                  ??_LCD_Char 0025  
                ??_LCD_Init 0026                  ??_LCD_Send 0023          __end_of_LCD_String 065C  
                __pmaintext 004E                     ?___wmul 0020                  __pintentry 0004  
        __end_ofi1_LCD_Char 073D          __end_ofi1_LCD_Send 0572                     _LCD_Cmd 0727  
  seven_seg_Show@ones_digit 0034    seven_seg_Show@tens_digit 0033                 _Timer0_Init 0747  
                   ___awdiv 030B                     ___awmod 036B                     ___lwdiv 04A0  
                   ___lwmod 04DD                   ?_vfprintf 004F        __end_ofi1_LCD_String 06A3  
                   __ptext1 0702                     __ptext2 05D7                     __ptext3 05F4  
                   __ptext4 0173                     __ptext5 0239                     __ptext6 045C  
                   __ptext7 0572                     __ptext8 03BF                     __ptext9 0767  
     read_prec_or_width@fmt 002E            ___awmod@dividend 002B                   _LCD_Clear 06F4  
                   _sprintf 05D7                     clrloop0 0762    __end_ofi1_lcd_set_cursor 068C  
      end_of_initialization 004A                     fputc@fp 0022                     init_ram 075B  
                   fputs@fp 0028                     initloop 075C                   i1_LCD_Cmd 0751  
        _read_prec_or_width 02AB           __end_of_vfpfcnvrt 0239         ?_read_prec_or_width 0026  
          vfpfcnvrt@convarg 0048                  main@F12497 00C6                  ??_vfprintf 0052  
                 _PORTBbits 000D                   _PORTCbits 000E                   _PORTEbits 0010  
                ?_LCD_Clear 0070        ??_read_prec_or_width 0028                  main@buffer 00B0  
                ?i1_LCD_Cmd 0070                  LCD_Send@RS 0020                _init7Segment 073D  
               vfpfcnvrt@ap 0043                 vfpfcnvrt@cp 004C                 vfpfcnvrt@fp 004E  
            __end_of___wmul 05B7        i1lcd_set_cursor@line 0076         start_initialization 0031  
               __end_of_pad 04A0                 __end_of_isr 002F                 vfprintf@fmt 004F  
                  ??___wmul 0024            i1LCD_Cmd@command 0075                 __pdataBANK1 00C6  
            ADC_Read@result 0022               ??i1_LCD_Clear 0076             seven_seg_Show@i 0030  
                  ?_LCD_Cmd 0070                   ___latbits 0004               __pcstackBANK0 0020  
             __pcstackBANK1 00A0                 ??_LCD_Clear 0026              _seven_seg_Show 0411  
              i1_LCD_String 068C                 ??i1_LCD_Cmd 0075                ?_Timer0_Init 0070  
          ___lwdiv@dividend 0028                    ?___awdiv 0020                    ?___awmod 0029  
                  ?___lwdiv 0026                    ?___lwmod 0020      __end_of_seven_seg_Show 045C  
                  _ADC_Init 06A3                    _ADC_Read 065C         __end_ofi1_LCD_Clear 0727  
          ___lwdiv@quotient 002B                    ?_sprintf 0056           ?i1_lcd_set_cursor 0076  
                  _LCD_Char 070F                    _LCD_Init 05B7                    _LCD_Send 0512  
            ___wmul@product 0024          ??i1_lcd_set_cursor 0077                    _LATBbits 0017  
                 clear_ram0 0761                    _PIE0bits 0716                    _PIR0bits 070C  
                 _vfpfcnvrt 0173                  _ADCON0bits 0093           ___wmul@multiplier 0020  
           ?_seven_seg_Show 0030              LCD_String@text 0026                  vfprintf@ap 0051  
                vfprintf@fp 0053                  ?_vfpfcnvrt 0042                 i1_LCD_Clear 071B  
        lcd_set_cursor@line 0026                  sprintf@fmt 0056             ___lwdiv@divisor 0026  
           ___lwdiv@counter 002D                    __ptext10 04DD                    __ptext11 04A0  
                  __ptext20 0643                    __ptext12 02AB                    __ptext21 070F  
                  __ptext13 0597                    __ptext30 068C                    __ptext22 05B7  
                  __ptext14 0411                    __ptext31 0732                    __ptext23 06F4  
                  __ptext15 036B                    __ptext32 071B                    __ptext24 0727  
                  __ptext16 030B                    __ptext33 0751                    __ptext25 0512  
                  __ptext17 062A                    __ptext34 0543                    __ptext26 065C  
                  __ptext18 073D                    __ptext27 06A3                    __ptext19 0747  
                  __ptext29 0674                    _hexvalue 00D6                    int$flags 007E  
                  _vfprintf 05F4                    main@name 00A0                  _LCD_String 0643  
                _INTCONbits 000B                  i1_LCD_Char 0732                  i1_LCD_Send 0543  
                  intlevel1 0000              _lcd_set_cursor 062A           lcd_set_cursor@col 0027  
                 sprintf@ap 005B            ___lwmod@dividend 0022                 ??_vfpfcnvrt 0044  
             __pstringtext1 06B5               __pstringtext2 06C6               __pstringtext3 06D6  
             __pstringtext4 06E5               __pstringtext5 0000                    sprintf@f 005D  
                  sprintf@s 005C             ___lwmod@divisor 0020             ___lwmod@counter 0025  
              main@O2_level 00C4      __end_of_lcd_set_cursor 0643                main@PH_level 00C2  
