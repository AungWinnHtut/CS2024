

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 09 14:18:47 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F18877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Generated 09/02/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F18877 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0017                     	;# 
   100     0018                     	;# 
   101     0019                     	;# 
   102     001A                     	;# 
   103     001C                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     008C                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008E                     	;# 
   114     008F                     	;# 
   115     0090                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0110                     	;# 
   136     0110                     	;# 
   137     0111                     	;# 
   138     0112                     	;# 
   139     0112                     	;# 
   140     0113                     	;# 
   141     0114                     	;# 
   142     0114                     	;# 
   143     0115                     	;# 
   144     0116                     	;# 
   145     0116                     	;# 
   146     0117                     	;# 
   147     0119                     	;# 
   148     0119                     	;# 
   149     0119                     	;# 
   150     011A                     	;# 
   151     011A                     	;# 
   152     011A                     	;# 
   153     011B                     	;# 
   154     011B                     	;# 
   155     011B                     	;# 
   156     011B                     	;# 
   157     011B                     	;# 
   158     011C                     	;# 
   159     011C                     	;# 
   160     011C                     	;# 
   161     011D                     	;# 
   162     011D                     	;# 
   163     011D                     	;# 
   164     011E                     	;# 
   165     011E                     	;# 
   166     011E                     	;# 
   167     011F                     	;# 
   168     011F                     	;# 
   169     011F                     	;# 
   170     011F                     	;# 
   171     011F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     018E                     	;# 
   175     018F                     	;# 
   176     0190                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0196                     	;# 
   180     0197                     	;# 
   181     0198                     	;# 
   182     0199                     	;# 
   183     019A                     	;# 
   184     019B                     	;# 
   185     019C                     	;# 
   186     020C                     	;# 
   187     020C                     	;# 
   188     020D                     	;# 
   189     020E                     	;# 
   190     020F                     	;# 
   191     020F                     	;# 
   192     0210                     	;# 
   193     0210                     	;# 
   194     0211                     	;# 
   195     0211                     	;# 
   196     0212                     	;# 
   197     0212                     	;# 
   198     0213                     	;# 
   199     0214                     	;# 
   200     0215                     	;# 
   201     0215                     	;# 
   202     0216                     	;# 
   203     0216                     	;# 
   204     0217                     	;# 
   205     0217                     	;# 
   206     0218                     	;# 
   207     0218                     	;# 
   208     0219                     	;# 
   209     021A                     	;# 
   210     021B                     	;# 
   211     021B                     	;# 
   212     021C                     	;# 
   213     021C                     	;# 
   214     021D                     	;# 
   215     021D                     	;# 
   216     021E                     	;# 
   217     021F                     	;# 
   218     028C                     	;# 
   219     028C                     	;# 
   220     028D                     	;# 
   221     028D                     	;# 
   222     028E                     	;# 
   223     028F                     	;# 
   224     0290                     	;# 
   225     0290                     	;# 
   226     0291                     	;# 
   227     0292                     	;# 
   228     0292                     	;# 
   229     0293                     	;# 
   230     0293                     	;# 
   231     0294                     	;# 
   232     0295                     	;# 
   233     0296                     	;# 
   234     0296                     	;# 
   235     0297                     	;# 
   236     0298                     	;# 
   237     0298                     	;# 
   238     0299                     	;# 
   239     0299                     	;# 
   240     029A                     	;# 
   241     029B                     	;# 
   242     029C                     	;# 
   243     029C                     	;# 
   244     029D                     	;# 
   245     030C                     	;# 
   246     030C                     	;# 
   247     030D                     	;# 
   248     030E                     	;# 
   249     030F                     	;# 
   250     0310                     	;# 
   251     0310                     	;# 
   252     0311                     	;# 
   253     0312                     	;# 
   254     0313                     	;# 
   255     0314                     	;# 
   256     0314                     	;# 
   257     0315                     	;# 
   258     0316                     	;# 
   259     0317                     	;# 
   260     0318                     	;# 
   261     0318                     	;# 
   262     0319                     	;# 
   263     031A                     	;# 
   264     031B                     	;# 
   265     031C                     	;# 
   266     031C                     	;# 
   267     031D                     	;# 
   268     031E                     	;# 
   269     031F                     	;# 
   270     038C                     	;# 
   271     038C                     	;# 
   272     038D                     	;# 
   273     038E                     	;# 
   274     0390                     	;# 
   275     0390                     	;# 
   276     0391                     	;# 
   277     0392                     	;# 
   278     040C                     	;# 
   279     040D                     	;# 
   280     040E                     	;# 
   281     040F                     	;# 
   282     0410                     	;# 
   283     0411                     	;# 
   284     0416                     	;# 
   285     0416                     	;# 
   286     0417                     	;# 
   287     0418                     	;# 
   288     0418                     	;# 
   289     0419                     	;# 
   290     041A                     	;# 
   291     041A                     	;# 
   292     041B                     	;# 
   293     041C                     	;# 
   294     041C                     	;# 
   295     041D                     	;# 
   296     041E                     	;# 
   297     041F                     	;# 
   298     048C                     	;# 
   299     048C                     	;# 
   300     048D                     	;# 
   301     048E                     	;# 
   302     048F                     	;# 
   303     048F                     	;# 
   304     0490                     	;# 
   305     0491                     	;# 
   306     0492                     	;# 
   307     0492                     	;# 
   308     0493                     	;# 
   309     0494                     	;# 
   310     0495                     	;# 
   311     0495                     	;# 
   312     0496                     	;# 
   313     0497                     	;# 
   314     0498                     	;# 
   315     0499                     	;# 
   316     049A                     	;# 
   317     049B                     	;# 
   318     049C                     	;# 
   319     049D                     	;# 
   320     050C                     	;# 
   321     050C                     	;# 
   322     050D                     	;# 
   323     050E                     	;# 
   324     050F                     	;# 
   325     050F                     	;# 
   326     0510                     	;# 
   327     0511                     	;# 
   328     0512                     	;# 
   329     0512                     	;# 
   330     0513                     	;# 
   331     0514                     	;# 
   332     0515                     	;# 
   333     0515                     	;# 
   334     0516                     	;# 
   335     0517                     	;# 
   336     0518                     	;# 
   337     0519                     	;# 
   338     051A                     	;# 
   339     051B                     	;# 
   340     051C                     	;# 
   341     051D                     	;# 
   342     058C                     	;# 
   343     058C                     	;# 
   344     058D                     	;# 
   345     058E                     	;# 
   346     058F                     	;# 
   347     058F                     	;# 
   348     0590                     	;# 
   349     0591                     	;# 
   350     0592                     	;# 
   351     0593                     	;# 
   352     060C                     	;# 
   353     060D                     	;# 
   354     060E                     	;# 
   355     060F                     	;# 
   356     0610                     	;# 
   357     0611                     	;# 
   358     0612                     	;# 
   359     0613                     	;# 
   360     0614                     	;# 
   361     0616                     	;# 
   362     0617                     	;# 
   363     0618                     	;# 
   364     0619                     	;# 
   365     061A                     	;# 
   366     061B                     	;# 
   367     061C                     	;# 
   368     061D                     	;# 
   369     061E                     	;# 
   370     068C                     	;# 
   371     068D                     	;# 
   372     068E                     	;# 
   373     068F                     	;# 
   374     0690                     	;# 
   375     0691                     	;# 
   376     0692                     	;# 
   377     0693                     	;# 
   378     0694                     	;# 
   379     070C                     	;# 
   380     070D                     	;# 
   381     070E                     	;# 
   382     070F                     	;# 
   383     0710                     	;# 
   384     0711                     	;# 
   385     0712                     	;# 
   386     0713                     	;# 
   387     0714                     	;# 
   388     0716                     	;# 
   389     0717                     	;# 
   390     0718                     	;# 
   391     0719                     	;# 
   392     071A                     	;# 
   393     071B                     	;# 
   394     071C                     	;# 
   395     071D                     	;# 
   396     071E                     	;# 
   397     0796                     	;# 
   398     0797                     	;# 
   399     0798                     	;# 
   400     0799                     	;# 
   401     079A                     	;# 
   402     079B                     	;# 
   403     080C                     	;# 
   404     080D                     	;# 
   405     080E                     	;# 
   406     080F                     	;# 
   407     0810                     	;# 
   408     0811                     	;# 
   409     0812                     	;# 
   410     0813                     	;# 
   411     0814                     	;# 
   412     081A                     	;# 
   413     081B                     	;# 
   414     081C                     	;# 
   415     081D                     	;# 
   416     081E                     	;# 
   417     081F                     	;# 
   418     088C                     	;# 
   419     088D                     	;# 
   420     088E                     	;# 
   421     088F                     	;# 
   422     0890                     	;# 
   423     0891                     	;# 
   424     0892                     	;# 
   425     0893                     	;# 
   426     0895                     	;# 
   427     0896                     	;# 
   428     0897                     	;# 
   429     0898                     	;# 
   430     0899                     	;# 
   431     089A                     	;# 
   432     089B                     	;# 
   433     090C                     	;# 
   434     090E                     	;# 
   435     090F                     	;# 
   436     091F                     	;# 
   437     098F                     	;# 
   438     098F                     	;# 
   439     0990                     	;# 
   440     0991                     	;# 
   441     0992                     	;# 
   442     0993                     	;# 
   443     0994                     	;# 
   444     0995                     	;# 
   445     0996                     	;# 
   446     0997                     	;# 
   447     1E0F                     	;# 
   448     1E10                     	;# 
   449     1E11                     	;# 
   450     1E12                     	;# 
   451     1E13                     	;# 
   452     1E14                     	;# 
   453     1E15                     	;# 
   454     1E16                     	;# 
   455     1E17                     	;# 
   456     1E18                     	;# 
   457     1E19                     	;# 
   458     1E1A                     	;# 
   459     1E1B                     	;# 
   460     1E1C                     	;# 
   461     1E1D                     	;# 
   462     1E1E                     	;# 
   463     1E1F                     	;# 
   464     1E20                     	;# 
   465     1E21                     	;# 
   466     1E22                     	;# 
   467     1E23                     	;# 
   468     1E24                     	;# 
   469     1E25                     	;# 
   470     1E26                     	;# 
   471     1E27                     	;# 
   472     1E28                     	;# 
   473     1E29                     	;# 
   474     1E2A                     	;# 
   475     1E2B                     	;# 
   476     1E2C                     	;# 
   477     1E2D                     	;# 
   478     1E2E                     	;# 
   479     1E2F                     	;# 
   480     1E30                     	;# 
   481     1E31                     	;# 
   482     1E32                     	;# 
   483     1E33                     	;# 
   484     1E34                     	;# 
   485     1E35                     	;# 
   486     1E36                     	;# 
   487     1E37                     	;# 
   488     1E8F                     	;# 
   489     1E90                     	;# 
   490     1E91                     	;# 
   491     1E92                     	;# 
   492     1E93                     	;# 
   493     1E94                     	;# 
   494     1E95                     	;# 
   495     1E96                     	;# 
   496     1E97                     	;# 
   497     1E9C                     	;# 
   498     1E9D                     	;# 
   499     1E9E                     	;# 
   500     1EA1                     	;# 
   501     1EA2                     	;# 
   502     1EA3                     	;# 
   503     1EA4                     	;# 
   504     1EA5                     	;# 
   505     1EA9                     	;# 
   506     1EAA                     	;# 
   507     1EAB                     	;# 
   508     1EAC                     	;# 
   509     1EB1                     	;# 
   510     1EB2                     	;# 
   511     1EB3                     	;# 
   512     1EB8                     	;# 
   513     1EB9                     	;# 
   514     1EBA                     	;# 
   515     1EBB                     	;# 
   516     1EBC                     	;# 
   517     1EBD                     	;# 
   518     1EBE                     	;# 
   519     1EC3                     	;# 
   520     1EC5                     	;# 
   521     1EC6                     	;# 
   522     1EC7                     	;# 
   523     1EC8                     	;# 
   524     1EC9                     	;# 
   525     1ECA                     	;# 
   526     1ECB                     	;# 
   527     1ECC                     	;# 
   528     1F10                     	;# 
   529     1F11                     	;# 
   530     1F12                     	;# 
   531     1F13                     	;# 
   532     1F14                     	;# 
   533     1F15                     	;# 
   534     1F16                     	;# 
   535     1F17                     	;# 
   536     1F18                     	;# 
   537     1F19                     	;# 
   538     1F1A                     	;# 
   539     1F1B                     	;# 
   540     1F1C                     	;# 
   541     1F1D                     	;# 
   542     1F1E                     	;# 
   543     1F1F                     	;# 
   544     1F20                     	;# 
   545     1F21                     	;# 
   546     1F22                     	;# 
   547     1F23                     	;# 
   548     1F24                     	;# 
   549     1F25                     	;# 
   550     1F26                     	;# 
   551     1F27                     	;# 
   552     1F28                     	;# 
   553     1F29                     	;# 
   554     1F2A                     	;# 
   555     1F2B                     	;# 
   556     1F2C                     	;# 
   557     1F2D                     	;# 
   558     1F2E                     	;# 
   559     1F2F                     	;# 
   560     1F30                     	;# 
   561     1F31                     	;# 
   562     1F32                     	;# 
   563     1F38                     	;# 
   564     1F39                     	;# 
   565     1F3A                     	;# 
   566     1F3B                     	;# 
   567     1F3C                     	;# 
   568     1F3D                     	;# 
   569     1F3E                     	;# 
   570     1F3F                     	;# 
   571     1F40                     	;# 
   572     1F41                     	;# 
   573     1F43                     	;# 
   574     1F44                     	;# 
   575     1F45                     	;# 
   576     1F46                     	;# 
   577     1F47                     	;# 
   578     1F48                     	;# 
   579     1F49                     	;# 
   580     1F4A                     	;# 
   581     1F4B                     	;# 
   582     1F4C                     	;# 
   583     1F4E                     	;# 
   584     1F4F                     	;# 
   585     1F50                     	;# 
   586     1F51                     	;# 
   587     1F52                     	;# 
   588     1F53                     	;# 
   589     1F54                     	;# 
   590     1F55                     	;# 
   591     1F56                     	;# 
   592     1F57                     	;# 
   593     1F59                     	;# 
   594     1F5A                     	;# 
   595     1F5B                     	;# 
   596     1F5C                     	;# 
   597     1F5D                     	;# 
   598     1F61                     	;# 
   599     1F62                     	;# 
   600     1F64                     	;# 
   601     1F65                     	;# 
   602     1F66                     	;# 
   603     1F67                     	;# 
   604     1F68                     	;# 
   605     1F69                     	;# 
   606     1F6A                     	;# 
   607     1F6B                     	;# 
   608     1F6C                     	;# 
   609     1F6D                     	;# 
   610     1FE4                     	;# 
   611     1FE5                     	;# 
   612     1FE6                     	;# 
   613     1FE7                     	;# 
   614     1FE8                     	;# 
   615     1FE9                     	;# 
   616     1FEA                     	;# 
   617     1FEB                     	;# 
   618     1FED                     	;# 
   619     1FEE                     	;# 
   620     1FEF                     	;# 
   621     0000                     	;# 
   622     0001                     	;# 
   623     0002                     	;# 
   624     0003                     	;# 
   625     0004                     	;# 
   626     0005                     	;# 
   627     0006                     	;# 
   628     0007                     	;# 
   629     0008                     	;# 
   630     0009                     	;# 
   631     000A                     	;# 
   632     000B                     	;# 
   633     000C                     	;# 
   634     000D                     	;# 
   635     000E                     	;# 
   636     000F                     	;# 
   637     0010                     	;# 
   638     0011                     	;# 
   639     0012                     	;# 
   640     0013                     	;# 
   641     0014                     	;# 
   642     0015                     	;# 
   643     0016                     	;# 
   644     0017                     	;# 
   645     0018                     	;# 
   646     0019                     	;# 
   647     001A                     	;# 
   648     001C                     	;# 
   649     001C                     	;# 
   650     001D                     	;# 
   651     001D                     	;# 
   652     001E                     	;# 
   653     001F                     	;# 
   654     008C                     	;# 
   655     008C                     	;# 
   656     008D                     	;# 
   657     008E                     	;# 
   658     008E                     	;# 
   659     008F                     	;# 
   660     0090                     	;# 
   661     0090                     	;# 
   662     0091                     	;# 
   663     0093                     	;# 
   664     0094                     	;# 
   665     0095                     	;# 
   666     0096                     	;# 
   667     0097                     	;# 
   668     0098                     	;# 
   669     0099                     	;# 
   670     009A                     	;# 
   671     009B                     	;# 
   672     009C                     	;# 
   673     009D                     	;# 
   674     009E                     	;# 
   675     010C                     	;# 
   676     010D                     	;# 
   677     010E                     	;# 
   678     010E                     	;# 
   679     010F                     	;# 
   680     0110                     	;# 
   681     0110                     	;# 
   682     0111                     	;# 
   683     0112                     	;# 
   684     0112                     	;# 
   685     0113                     	;# 
   686     0114                     	;# 
   687     0114                     	;# 
   688     0115                     	;# 
   689     0116                     	;# 
   690     0116                     	;# 
   691     0117                     	;# 
   692     0119                     	;# 
   693     0119                     	;# 
   694     0119                     	;# 
   695     011A                     	;# 
   696     011A                     	;# 
   697     011A                     	;# 
   698     011B                     	;# 
   699     011B                     	;# 
   700     011B                     	;# 
   701     011B                     	;# 
   702     011B                     	;# 
   703     011C                     	;# 
   704     011C                     	;# 
   705     011C                     	;# 
   706     011D                     	;# 
   707     011D                     	;# 
   708     011D                     	;# 
   709     011E                     	;# 
   710     011E                     	;# 
   711     011E                     	;# 
   712     011F                     	;# 
   713     011F                     	;# 
   714     011F                     	;# 
   715     011F                     	;# 
   716     011F                     	;# 
   717     018C                     	;# 
   718     018D                     	;# 
   719     018E                     	;# 
   720     018F                     	;# 
   721     0190                     	;# 
   722     0191                     	;# 
   723     0192                     	;# 
   724     0196                     	;# 
   725     0197                     	;# 
   726     0198                     	;# 
   727     0199                     	;# 
   728     019A                     	;# 
   729     019B                     	;# 
   730     019C                     	;# 
   731     020C                     	;# 
   732     020C                     	;# 
   733     020D                     	;# 
   734     020E                     	;# 
   735     020F                     	;# 
   736     020F                     	;# 
   737     0210                     	;# 
   738     0210                     	;# 
   739     0211                     	;# 
   740     0211                     	;# 
   741     0212                     	;# 
   742     0212                     	;# 
   743     0213                     	;# 
   744     0214                     	;# 
   745     0215                     	;# 
   746     0215                     	;# 
   747     0216                     	;# 
   748     0216                     	;# 
   749     0217                     	;# 
   750     0217                     	;# 
   751     0218                     	;# 
   752     0218                     	;# 
   753     0219                     	;# 
   754     021A                     	;# 
   755     021B                     	;# 
   756     021B                     	;# 
   757     021C                     	;# 
   758     021C                     	;# 
   759     021D                     	;# 
   760     021D                     	;# 
   761     021E                     	;# 
   762     021F                     	;# 
   763     028C                     	;# 
   764     028C                     	;# 
   765     028D                     	;# 
   766     028D                     	;# 
   767     028E                     	;# 
   768     028F                     	;# 
   769     0290                     	;# 
   770     0290                     	;# 
   771     0291                     	;# 
   772     0292                     	;# 
   773     0292                     	;# 
   774     0293                     	;# 
   775     0293                     	;# 
   776     0294                     	;# 
   777     0295                     	;# 
   778     0296                     	;# 
   779     0296                     	;# 
   780     0297                     	;# 
   781     0298                     	;# 
   782     0298                     	;# 
   783     0299                     	;# 
   784     0299                     	;# 
   785     029A                     	;# 
   786     029B                     	;# 
   787     029C                     	;# 
   788     029C                     	;# 
   789     029D                     	;# 
   790     030C                     	;# 
   791     030C                     	;# 
   792     030D                     	;# 
   793     030E                     	;# 
   794     030F                     	;# 
   795     0310                     	;# 
   796     0310                     	;# 
   797     0311                     	;# 
   798     0312                     	;# 
   799     0313                     	;# 
   800     0314                     	;# 
   801     0314                     	;# 
   802     0315                     	;# 
   803     0316                     	;# 
   804     0317                     	;# 
   805     0318                     	;# 
   806     0318                     	;# 
   807     0319                     	;# 
   808     031A                     	;# 
   809     031B                     	;# 
   810     031C                     	;# 
   811     031C                     	;# 
   812     031D                     	;# 
   813     031E                     	;# 
   814     031F                     	;# 
   815     038C                     	;# 
   816     038C                     	;# 
   817     038D                     	;# 
   818     038E                     	;# 
   819     0390                     	;# 
   820     0390                     	;# 
   821     0391                     	;# 
   822     0392                     	;# 
   823     040C                     	;# 
   824     040D                     	;# 
   825     040E                     	;# 
   826     040F                     	;# 
   827     0410                     	;# 
   828     0411                     	;# 
   829     0416                     	;# 
   830     0416                     	;# 
   831     0417                     	;# 
   832     0418                     	;# 
   833     0418                     	;# 
   834     0419                     	;# 
   835     041A                     	;# 
   836     041A                     	;# 
   837     041B                     	;# 
   838     041C                     	;# 
   839     041C                     	;# 
   840     041D                     	;# 
   841     041E                     	;# 
   842     041F                     	;# 
   843     048C                     	;# 
   844     048C                     	;# 
   845     048D                     	;# 
   846     048E                     	;# 
   847     048F                     	;# 
   848     048F                     	;# 
   849     0490                     	;# 
   850     0491                     	;# 
   851     0492                     	;# 
   852     0492                     	;# 
   853     0493                     	;# 
   854     0494                     	;# 
   855     0495                     	;# 
   856     0495                     	;# 
   857     0496                     	;# 
   858     0497                     	;# 
   859     0498                     	;# 
   860     0499                     	;# 
   861     049A                     	;# 
   862     049B                     	;# 
   863     049C                     	;# 
   864     049D                     	;# 
   865     050C                     	;# 
   866     050C                     	;# 
   867     050D                     	;# 
   868     050E                     	;# 
   869     050F                     	;# 
   870     050F                     	;# 
   871     0510                     	;# 
   872     0511                     	;# 
   873     0512                     	;# 
   874     0512                     	;# 
   875     0513                     	;# 
   876     0514                     	;# 
   877     0515                     	;# 
   878     0515                     	;# 
   879     0516                     	;# 
   880     0517                     	;# 
   881     0518                     	;# 
   882     0519                     	;# 
   883     051A                     	;# 
   884     051B                     	;# 
   885     051C                     	;# 
   886     051D                     	;# 
   887     058C                     	;# 
   888     058C                     	;# 
   889     058D                     	;# 
   890     058E                     	;# 
   891     058F                     	;# 
   892     058F                     	;# 
   893     0590                     	;# 
   894     0591                     	;# 
   895     0592                     	;# 
   896     0593                     	;# 
   897     060C                     	;# 
   898     060D                     	;# 
   899     060E                     	;# 
   900     060F                     	;# 
   901     0610                     	;# 
   902     0611                     	;# 
   903     0612                     	;# 
   904     0613                     	;# 
   905     0614                     	;# 
   906     0616                     	;# 
   907     0617                     	;# 
   908     0618                     	;# 
   909     0619                     	;# 
   910     061A                     	;# 
   911     061B                     	;# 
   912     061C                     	;# 
   913     061D                     	;# 
   914     061E                     	;# 
   915     068C                     	;# 
   916     068D                     	;# 
   917     068E                     	;# 
   918     068F                     	;# 
   919     0690                     	;# 
   920     0691                     	;# 
   921     0692                     	;# 
   922     0693                     	;# 
   923     0694                     	;# 
   924     070C                     	;# 
   925     070D                     	;# 
   926     070E                     	;# 
   927     070F                     	;# 
   928     0710                     	;# 
   929     0711                     	;# 
   930     0712                     	;# 
   931     0713                     	;# 
   932     0714                     	;# 
   933     0716                     	;# 
   934     0717                     	;# 
   935     0718                     	;# 
   936     0719                     	;# 
   937     071A                     	;# 
   938     071B                     	;# 
   939     071C                     	;# 
   940     071D                     	;# 
   941     071E                     	;# 
   942     0796                     	;# 
   943     0797                     	;# 
   944     0798                     	;# 
   945     0799                     	;# 
   946     079A                     	;# 
   947     079B                     	;# 
   948     080C                     	;# 
   949     080D                     	;# 
   950     080E                     	;# 
   951     080F                     	;# 
   952     0810                     	;# 
   953     0811                     	;# 
   954     0812                     	;# 
   955     0813                     	;# 
   956     0814                     	;# 
   957     081A                     	;# 
   958     081B                     	;# 
   959     081C                     	;# 
   960     081D                     	;# 
   961     081E                     	;# 
   962     081F                     	;# 
   963     088C                     	;# 
   964     088D                     	;# 
   965     088E                     	;# 
   966     088F                     	;# 
   967     0890                     	;# 
   968     0891                     	;# 
   969     0892                     	;# 
   970     0893                     	;# 
   971     0895                     	;# 
   972     0896                     	;# 
   973     0897                     	;# 
   974     0898                     	;# 
   975     0899                     	;# 
   976     089A                     	;# 
   977     089B                     	;# 
   978     090C                     	;# 
   979     090E                     	;# 
   980     090F                     	;# 
   981     091F                     	;# 
   982     098F                     	;# 
   983     098F                     	;# 
   984     0990                     	;# 
   985     0991                     	;# 
   986     0992                     	;# 
   987     0993                     	;# 
   988     0994                     	;# 
   989     0995                     	;# 
   990     0996                     	;# 
   991     0997                     	;# 
   992     1E0F                     	;# 
   993     1E10                     	;# 
   994     1E11                     	;# 
   995     1E12                     	;# 
   996     1E13                     	;# 
   997     1E14                     	;# 
   998     1E15                     	;# 
   999     1E16                     	;# 
  1000     1E17                     	;# 
  1001     1E18                     	;# 
  1002     1E19                     	;# 
  1003     1E1A                     	;# 
  1004     1E1B                     	;# 
  1005     1E1C                     	;# 
  1006     1E1D                     	;# 
  1007     1E1E                     	;# 
  1008     1E1F                     	;# 
  1009     1E20                     	;# 
  1010     1E21                     	;# 
  1011     1E22                     	;# 
  1012     1E23                     	;# 
  1013     1E24                     	;# 
  1014     1E25                     	;# 
  1015     1E26                     	;# 
  1016     1E27                     	;# 
  1017     1E28                     	;# 
  1018     1E29                     	;# 
  1019     1E2A                     	;# 
  1020     1E2B                     	;# 
  1021     1E2C                     	;# 
  1022     1E2D                     	;# 
  1023     1E2E                     	;# 
  1024     1E2F                     	;# 
  1025     1E30                     	;# 
  1026     1E31                     	;# 
  1027     1E32                     	;# 
  1028     1E33                     	;# 
  1029     1E34                     	;# 
  1030     1E35                     	;# 
  1031     1E36                     	;# 
  1032     1E37                     	;# 
  1033     1E8F                     	;# 
  1034     1E90                     	;# 
  1035     1E91                     	;# 
  1036     1E92                     	;# 
  1037     1E93                     	;# 
  1038     1E94                     	;# 
  1039     1E95                     	;# 
  1040     1E96                     	;# 
  1041     1E97                     	;# 
  1042     1E9C                     	;# 
  1043     1E9D                     	;# 
  1044     1E9E                     	;# 
  1045     1EA1                     	;# 
  1046     1EA2                     	;# 
  1047     1EA3                     	;# 
  1048     1EA4                     	;# 
  1049     1EA5                     	;# 
  1050     1EA9                     	;# 
  1051     1EAA                     	;# 
  1052     1EAB                     	;# 
  1053     1EAC                     	;# 
  1054     1EB1                     	;# 
  1055     1EB2                     	;# 
  1056     1EB3                     	;# 
  1057     1EB8                     	;# 
  1058     1EB9                     	;# 
  1059     1EBA                     	;# 
  1060     1EBB                     	;# 
  1061     1EBC                     	;# 
  1062     1EBD                     	;# 
  1063     1EBE                     	;# 
  1064     1EC3                     	;# 
  1065     1EC5                     	;# 
  1066     1EC6                     	;# 
  1067     1EC7                     	;# 
  1068     1EC8                     	;# 
  1069     1EC9                     	;# 
  1070     1ECA                     	;# 
  1071     1ECB                     	;# 
  1072     1ECC                     	;# 
  1073     1F10                     	;# 
  1074     1F11                     	;# 
  1075     1F12                     	;# 
  1076     1F13                     	;# 
  1077     1F14                     	;# 
  1078     1F15                     	;# 
  1079     1F16                     	;# 
  1080     1F17                     	;# 
  1081     1F18                     	;# 
  1082     1F19                     	;# 
  1083     1F1A                     	;# 
  1084     1F1B                     	;# 
  1085     1F1C                     	;# 
  1086     1F1D                     	;# 
  1087     1F1E                     	;# 
  1088     1F1F                     	;# 
  1089     1F20                     	;# 
  1090     1F21                     	;# 
  1091     1F22                     	;# 
  1092     1F23                     	;# 
  1093     1F24                     	;# 
  1094     1F25                     	;# 
  1095     1F26                     	;# 
  1096     1F27                     	;# 
  1097     1F28                     	;# 
  1098     1F29                     	;# 
  1099     1F2A                     	;# 
  1100     1F2B                     	;# 
  1101     1F2C                     	;# 
  1102     1F2D                     	;# 
  1103     1F2E                     	;# 
  1104     1F2F                     	;# 
  1105     1F30                     	;# 
  1106     1F31                     	;# 
  1107     1F32                     	;# 
  1108     1F38                     	;# 
  1109     1F39                     	;# 
  1110     1F3A                     	;# 
  1111     1F3B                     	;# 
  1112     1F3C                     	;# 
  1113     1F3D                     	;# 
  1114     1F3E                     	;# 
  1115     1F3F                     	;# 
  1116     1F40                     	;# 
  1117     1F41                     	;# 
  1118     1F43                     	;# 
  1119     1F44                     	;# 
  1120     1F45                     	;# 
  1121     1F46                     	;# 
  1122     1F47                     	;# 
  1123     1F48                     	;# 
  1124     1F49                     	;# 
  1125     1F4A                     	;# 
  1126     1F4B                     	;# 
  1127     1F4C                     	;# 
  1128     1F4E                     	;# 
  1129     1F4F                     	;# 
  1130     1F50                     	;# 
  1131     1F51                     	;# 
  1132     1F52                     	;# 
  1133     1F53                     	;# 
  1134     1F54                     	;# 
  1135     1F55                     	;# 
  1136     1F56                     	;# 
  1137     1F57                     	;# 
  1138     1F59                     	;# 
  1139     1F5A                     	;# 
  1140     1F5B                     	;# 
  1141     1F5C                     	;# 
  1142     1F5D                     	;# 
  1143     1F61                     	;# 
  1144     1F62                     	;# 
  1145     1F64                     	;# 
  1146     1F65                     	;# 
  1147     1F66                     	;# 
  1148     1F67                     	;# 
  1149     1F68                     	;# 
  1150     1F69                     	;# 
  1151     1F6A                     	;# 
  1152     1F6B                     	;# 
  1153     1F6C                     	;# 
  1154     1F6D                     	;# 
  1155     1FE4                     	;# 
  1156     1FE5                     	;# 
  1157     1FE6                     	;# 
  1158     1FE7                     	;# 
  1159     1FE8                     	;# 
  1160     1FE9                     	;# 
  1161     1FEA                     	;# 
  1162     1FEB                     	;# 
  1163     1FED                     	;# 
  1164     1FEE                     	;# 
  1165     1FEF                     	;# 
  1166                           
  1167                           	psect	idataBANK1
  1168     037E                     __pidataBANK1:
  1169                           
  1170                           ;initializer for main@F12491
  1171     037E  3441               	retlw	65
  1172     037F  3475               	retlw	117
  1173     0380  346E               	retlw	110
  1174     0381  3467               	retlw	103
  1175     0382  3420               	retlw	32
  1176     0383  3457               	retlw	87
  1177     0384  3469               	retlw	105
  1178     0385  346E               	retlw	110
  1179     0386  3420               	retlw	32
  1180     0387  3448               	retlw	72
  1181     0388  3474               	retlw	116
  1182     0389  3475               	retlw	117
  1183     038A  3474               	retlw	116
  1184     038B  3400               	retlw	0
  1185     038C  3400               	retlw	0
  1186     038D  3400               	retlw	0
  1187     000E                     _PORTC	set	14
  1188     000E                     _PORTCbits	set	14
  1189     0013                     _TRISC	set	19
  1190     0011                     _TRISA	set	17
  1191     008C                     _ADRESL	set	140
  1192     008D                     _ADRESH	set	141
  1193     0093                     _ADCON0bits	set	147
  1194     009E                     _ADPCH	set	158
  1195     0093                     _ADCON0	set	147
  1196     009D                     _ADACQ	set	157
  1197     0098                     _ADCLK	set	152
  1198     009A                     _ADREF	set	154
  1199     1F38                     _ANSELA	set	7992
  1200                           
  1201                           	psect	stringtext1
  1202     0800                     __pstringtext1:
  1203     0800                     STR_1:
  1204     0800  344F               	retlw	79	;'O'
  1205     0801  3478               	retlw	120	;'x'
  1206     0802  3479               	retlw	121	;'y'
  1207     0803  3467               	retlw	103	;'g'
  1208     0804  3465               	retlw	101	;'e'
  1209     0805  346E               	retlw	110	;'n'
  1210     0806  3420               	retlw	32	;' '
  1211     0807  346C               	retlw	108	;'l'
  1212     0808  3476               	retlw	118	;'v'
  1213     0809  346C               	retlw	108	;'l'
  1214     080A  3420               	retlw	32	;' '
  1215     080B  343D               	retlw	61	;'='
  1216     080C  3420               	retlw	32	;' '
  1217     080D  3425               	retlw	37	;'%'
  1218     080E  3433               	retlw	51	;'3'
  1219     080F  3475               	retlw	117	;'u'
  1220     0810  3425               	retlw	37	;'%'
  1221     0811  3425               	retlw	37	;'%'
  1222     0812  3400               	retlw	0
  1223                           
  1224                           	psect	stringtext2
  1225     0813                     __pstringtext2:
  1226     0813                     STR_2:
  1227     0813  3450               	retlw	80	;'P'
  1228     0814  3448               	retlw	72	;'H'
  1229     0815  3420               	retlw	32	;' '
  1230     0816  346C               	retlw	108	;'l'
  1231     0817  3476               	retlw	118	;'v'
  1232     0818  346C               	retlw	108	;'l'
  1233     0819  3420               	retlw	32	;' '
  1234     081A  343D               	retlw	61	;'='
  1235     081B  3420               	retlw	32	;' '
  1236     081C  3425               	retlw	37	;'%'
  1237     081D  3433               	retlw	51	;'3'
  1238     081E  3475               	retlw	117	;'u'
  1239     081F  3425               	retlw	37	;'%'
  1240     0820  3425               	retlw	37	;'%'
  1241     0821  3400               	retlw	0
  1242                           
  1243                           	psect	stringtext3
  1244     0000                     __pstringtext3:
  1245                           
  1246                           	psect	cinit
  1247     07E4                     start_initialization:	
  1248                           ; #config settings
  1249                           
  1250     07E4                     __initialization:
  1251                           
  1252                           ; Initialize objects allocated to BANK1
  1253     07E4  307E               	movlw	low __pidataBANK1
  1254     07E5  0084               	movwf	4
  1255     07E6  3083               	movlw	(high __pidataBANK1)| (0+128)
  1256     07E7  0085               	movwf	5
  1257     07E8  30C4               	movlw	low __pdataBANK1
  1258     07E9  0086               	movwf	6
  1259     07EA  3000               	movlw	high __pdataBANK1
  1260     07EB  0087               	movwf	7
  1261     07EC  3010               	movlw	16
  1262     07ED  3183  2357  3187   	fcall	init_ram
  1263                           
  1264                           ; Clear objects allocated to BANK0
  1265     07F0  01DC               	clrf	__pbssBANK0& (0+127)
  1266     07F1  01DD               	clrf	(__pbssBANK0+1)& (0+127)
  1267     07F2  01DE               	clrf	(__pbssBANK0+2)& (0+127)
  1268     07F3  01DF               	clrf	(__pbssBANK0+3)& (0+127)
  1269     07F4  01E0               	clrf	(__pbssBANK0+4)& (0+127)
  1270                           
  1271                           ; Clear objects allocated to BANK2
  1272     07F5  3020               	movlw	low __pbssBANK2
  1273     07F6  0084               	movwf	4
  1274     07F7  3001               	movlw	high __pbssBANK2
  1275     07F8  0085               	movwf	5
  1276     07F9  3020               	movlw	32
  1277     07FA  3183  2351  3187   	fcall	clear_ram0
  1278     07FD                     end_of_initialization:	
  1279                           ;End of C runtime variable initialization code
  1280                           
  1281     07FD                     __end_of__initialization:
  1282     07FD  0140               	movlb	0
  1283     07FE  3186  2E83         	ljmp	_main	;jump to C main() function
  1284                           
  1285                           	psect	bssBANK0
  1286     005C                     __pbssBANK0:
  1287     005C                     _width:
  1288     005C                     	ds	2
  1289     005E                     _prec:
  1290     005E                     	ds	2
  1291     0060                     _flags:
  1292     0060                     	ds	1
  1293                           
  1294                           	psect	dataBANK1
  1295     00C4                     __pdataBANK1:
  1296     00C4                     main@F12491:
  1297     00C4                     	ds	16
  1298                           
  1299                           	psect	bssBANK2
  1300     0120                     __pbssBANK2:
  1301     0120                     _dbuf:
  1302     0120                     	ds	32
  1303                           
  1304                           	psect	inittext
  1305     0357                     init_ram:
  1306     0357  00FE               	movwf	btemp
  1307     0358                     initloop:
  1308     0358  0012               	moviw fsr0++
  1309     0359  001E               	movwi fsr1++
  1310     035A  0BFE               	decfsz	btemp,f
  1311     035B  2B58               	goto	initloop
  1312     035C  3400               	retlw	0
  1313                           
  1314                           	psect	clrtext
  1315     0351                     clear_ram0:	
  1316                           ;	Called with FSR0 containing the base address, and
  1317                           ;	WREG with the size to clear
  1318                           
  1319     0351  0064               	clrwdt	;clear the watchdog before getting into this loop
  1320     0352                     clrloop0:
  1321     0352  0180               	clrf	0	;clear RAM location pointed to by FSR
  1322     0353  3101               	addfsr 0,1
  1323     0354  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1324     0355  2B52               	goto	clrloop0	;have we reached the end yet?
  1325     0356  3400               	retlw	0	;all done for this memory range, return
  1326                           
  1327                           	psect	cstackBANK1
  1328     00A0                     __pcstackBANK1:
  1329     00A0                     main@name:
  1330                           
  1331                           ; 16 bytes @ 0x0
  1332     00A0                     	ds	16
  1333     00B0                     main@buffer:
  1334                           
  1335                           ; 16 bytes @ 0x10
  1336     00B0                     	ds	16
  1337     00C0                     main@O2_level:
  1338                           
  1339                           ; 2 bytes @ 0x20
  1340     00C0                     	ds	2
  1341     00C2                     main@PH_level:
  1342                           
  1343                           ; 2 bytes @ 0x22
  1344     00C2                     	ds	2
  1345                           
  1346                           	psect	cstackCOMMON
  1347     0070                     __pcstackCOMMON:
  1348     0070                     ?_ADC_Init:
  1349     0070                     ??_ADC_Init:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352     0070                     ?_LCD_Init:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355     0070                     ?_LCD_Clear:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358     0070                     ?_LCD_String:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361     0070                     ?_LCD_Cmd:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364     0070                     ?_LCD_Send:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367     0070                     ?_putch:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370     0070                     ??_putch:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373     0070                     ?_main:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376     0070                     ?_LCD_Char:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379     0070                     ?_ADC_Read:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382     0070                     ?_fputc:	
  1383                           ; 2 bytes @ 0x0
  1384                           
  1385     0070                     ?___wmul:	
  1386                           ; 2 bytes @ 0x0
  1387                           
  1388     0070                     ?___lwmod:	
  1389                           ; 2 bytes @ 0x0
  1390                           
  1391     0070                     putch@c:	
  1392                           ; 2 bytes @ 0x0
  1393                           
  1394     0070                     LCD_Send@RS:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397     0070                     ___wmul@multiplier:	
  1398                           ; 2 bytes @ 0x0
  1399                           
  1400     0070                     ___lwmod@divisor:	
  1401                           ; 2 bytes @ 0x0
  1402                           
  1403     0070                     fputc@c:	
  1404                           ; 2 bytes @ 0x0
  1405                           
  1406                           
  1407                           ; 2 bytes @ 0x0
  1408     0070                     	ds	2
  1409     0072                     ??_ADC_Read:
  1410     0072                     LCD_Send@data:	
  1411                           ; 1 bytes @ 0x2
  1412                           
  1413     0072                     fputc@fp:	
  1414                           ; 1 bytes @ 0x2
  1415                           
  1416     0072                     ADC_Read@result:	
  1417                           ; 1 bytes @ 0x2
  1418                           
  1419     0072                     ___wmul@multiplicand:	
  1420                           ; 2 bytes @ 0x2
  1421                           
  1422     0072                     ___lwmod@dividend:	
  1423                           ; 2 bytes @ 0x2
  1424                           
  1425                           
  1426                           ; 2 bytes @ 0x2
  1427     0072                     	ds	1
  1428     0073                     ??_LCD_Send:
  1429     0073                     ??_fputc:	
  1430                           ; 1 bytes @ 0x3
  1431                           
  1432                           
  1433                           ; 1 bytes @ 0x3
  1434     0073                     	ds	1
  1435     0074                     ??___wmul:
  1436     0074                     ??___lwmod:	
  1437                           ; 1 bytes @ 0x4
  1438                           
  1439     0074                     ADC_Read@channel:	
  1440                           ; 1 bytes @ 0x4
  1441                           
  1442     0074                     ___wmul@product:	
  1443                           ; 1 bytes @ 0x4
  1444                           
  1445                           
  1446                           ; 2 bytes @ 0x4
  1447     0074                     	ds	1
  1448     0075                     ??_LCD_Cmd:
  1449     0075                     ??_LCD_Char:	
  1450                           ; 1 bytes @ 0x5
  1451                           
  1452     0075                     LCD_Cmd@command:	
  1453                           ; 1 bytes @ 0x5
  1454                           
  1455     0075                     LCD_Char@data:	
  1456                           ; 1 bytes @ 0x5
  1457                           
  1458     0075                     ___lwmod@counter:	
  1459                           ; 1 bytes @ 0x5
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0x5
  1463     0075                     	ds	1
  1464     0076                     ??_LCD_Init:
  1465     0076                     ??_LCD_Clear:	
  1466                           ; 1 bytes @ 0x6
  1467                           
  1468     0076                     ?_lcd_set_cursor:	
  1469                           ; 1 bytes @ 0x6
  1470                           
  1471     0076                     ??_LCD_String:	
  1472                           ; 1 bytes @ 0x6
  1473                           
  1474     0076                     ?___lwdiv:	
  1475                           ; 1 bytes @ 0x6
  1476                           
  1477     0076                     ?_read_prec_or_width:	
  1478                           ; 2 bytes @ 0x6
  1479                           
  1480     0076                     lcd_set_cursor@line:	
  1481                           ; 2 bytes @ 0x6
  1482                           
  1483     0076                     read_prec_or_width@ap:	
  1484                           ; 1 bytes @ 0x6
  1485                           
  1486     0076                     ___lwdiv@divisor:	
  1487                           ; 1 bytes @ 0x6
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0x6
  1491     0076                     	ds	1
  1492     0077                     ??_lcd_set_cursor:
  1493     0077                     LCD_String@text:	
  1494                           ; 1 bytes @ 0x7
  1495                           
  1496     0077                     lcd_set_cursor@col:	
  1497                           ; 1 bytes @ 0x7
  1498                           
  1499                           
  1500                           ; 1 bytes @ 0x7
  1501     0077                     	ds	1
  1502     0078                     ??_read_prec_or_width:
  1503     0078                     ?_fputs:	
  1504                           ; 1 bytes @ 0x8
  1505                           
  1506     0078                     fputs@fp:	
  1507                           ; 2 bytes @ 0x8
  1508                           
  1509     0078                     ___lwdiv@dividend:	
  1510                           ; 1 bytes @ 0x8
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0x8
  1514     0078                     	ds	1
  1515     0079                     ??_fputs:
  1516                           
  1517                           ; 1 bytes @ 0x9
  1518     0079                     	ds	1
  1519     007A                     ??___lwdiv:
  1520                           
  1521                           ; 1 bytes @ 0xA
  1522     007A                     	ds	1
  1523     007B                     ?_pad:
  1524     007B                     pad@buf:	
  1525                           ; 1 bytes @ 0xB
  1526                           
  1527     007B                     ___lwdiv@quotient:	
  1528                           ; 1 bytes @ 0xB
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0xB
  1532     007B                     	ds	1
  1533     007C                     pad@p:
  1534                           
  1535                           ; 2 bytes @ 0xC
  1536     007C                     	ds	1
  1537     007D                     ___lwdiv@counter:
  1538                           
  1539                           ; 1 bytes @ 0xD
  1540     007D                     	ds	1
  1541                           
  1542                           	psect	cstackBANK0
  1543     0020                     __pcstackBANK0:
  1544     0020                     read_prec_or_width@c:
  1545     0020                     fputs@c:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548                           
  1549                           ; 1 bytes @ 0x0
  1550     0020                     	ds	1
  1551     0021                     read_prec_or_width@n:
  1552     0021                     fputs@i:	
  1553                           ; 2 bytes @ 0x1
  1554                           
  1555                           
  1556                           ; 2 bytes @ 0x1
  1557     0021                     	ds	2
  1558     0023                     read_prec_or_width@fmt:
  1559     0023                     fputs@s:	
  1560                           ; 1 bytes @ 0x3
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0x3
  1564     0023                     	ds	1
  1565     0024                     ??_pad:
  1566                           
  1567                           ; 1 bytes @ 0x4
  1568     0024                     	ds	1
  1569     0025                     pad@i:
  1570                           
  1571                           ; 2 bytes @ 0x5
  1572     0025                     	ds	2
  1573     0027                     pad@w:
  1574                           
  1575                           ; 2 bytes @ 0x7
  1576     0027                     	ds	2
  1577     0029                     pad@fp:
  1578                           
  1579                           ; 1 bytes @ 0x9
  1580     0029                     	ds	1
  1581     002A                     ?_utoa:
  1582     002A                     utoa@d:	
  1583                           ; 1 bytes @ 0xA
  1584                           
  1585                           
  1586                           ; 2 bytes @ 0xA
  1587     002A                     	ds	2
  1588     002C                     ??_utoa:
  1589                           
  1590                           ; 1 bytes @ 0xC
  1591     002C                     	ds	1
  1592     002D                     utoa@w:
  1593                           
  1594                           ; 2 bytes @ 0xD
  1595     002D                     	ds	2
  1596     002F                     utoa@fp:
  1597                           
  1598                           ; 1 bytes @ 0xF
  1599     002F                     	ds	1
  1600     0030                     utoa@p:
  1601                           
  1602                           ; 2 bytes @ 0x10
  1603     0030                     	ds	2
  1604     0032                     utoa@i:
  1605                           
  1606                           ; 2 bytes @ 0x12
  1607     0032                     	ds	2
  1608     0034                     ?_vfpfcnvrt:
  1609     0034                     vfpfcnvrt@fmt:	
  1610                           ; 1 bytes @ 0x14
  1611                           
  1612                           
  1613                           ; 1 bytes @ 0x14
  1614     0034                     	ds	1
  1615     0035                     vfpfcnvrt@ap:
  1616                           
  1617                           ; 1 bytes @ 0x15
  1618     0035                     	ds	1
  1619     0036                     ??_vfpfcnvrt:
  1620                           
  1621                           ; 1 bytes @ 0x16
  1622     0036                     	ds	4
  1623     003A                     vfpfcnvrt@convarg:
  1624                           
  1625                           ; 4 bytes @ 0x1A
  1626     003A                     	ds	4
  1627     003E                     vfpfcnvrt@cp:
  1628                           
  1629                           ; 2 bytes @ 0x1E
  1630     003E                     	ds	2
  1631     0040                     vfpfcnvrt@fp:
  1632                           
  1633                           ; 1 bytes @ 0x20
  1634     0040                     	ds	1
  1635     0041                     ?_vfprintf:
  1636     0041                     vfprintf@fmt:	
  1637                           ; 2 bytes @ 0x21
  1638                           
  1639                           
  1640                           ; 2 bytes @ 0x21
  1641     0041                     	ds	2
  1642     0043                     vfprintf@ap:
  1643                           
  1644                           ; 1 bytes @ 0x23
  1645     0043                     	ds	1
  1646     0044                     ??_vfprintf:
  1647                           
  1648                           ; 1 bytes @ 0x24
  1649     0044                     	ds	1
  1650     0045                     vfprintf@fp:
  1651                           
  1652                           ; 1 bytes @ 0x25
  1653     0045                     	ds	1
  1654     0046                     vfprintf@cfmt:
  1655                           
  1656                           ; 2 bytes @ 0x26
  1657     0046                     	ds	2
  1658     0048                     ?_sprintf:
  1659     0048                     sprintf@fmt:	
  1660                           ; 2 bytes @ 0x28
  1661                           
  1662                           
  1663                           ; 2 bytes @ 0x28
  1664     0048                     	ds	4
  1665     004C                     ??_sprintf:
  1666                           
  1667                           ; 1 bytes @ 0x2C
  1668     004C                     	ds	1
  1669     004D                     sprintf@ap:
  1670                           
  1671                           ; 1 bytes @ 0x2D
  1672     004D                     	ds	1
  1673     004E                     sprintf@s:
  1674                           
  1675                           ; 1 bytes @ 0x2E
  1676     004E                     	ds	1
  1677     004F                     sprintf@f:
  1678                           
  1679                           ; 11 bytes @ 0x2F
  1680     004F                     	ds	11
  1681     005A                     ??_main:
  1682                           
  1683                           ; 1 bytes @ 0x3A
  1684     005A                     	ds	2
  1685                           
  1686                           	psect	maintext
  1687     0683                     __pmaintext:	
  1688 ;;
  1689 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1690 ;;
  1691 ;; *************** function _main *****************
  1692 ;; Defined at:
  1693 ;;		line 70 in file "lcdmain.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  PH_level        2   34[BANK1 ] unsigned int 
  1698 ;;  O2_level        2   32[BANK1 ] unsigned int 
  1699 ;;  buffer         16   16[BANK1 ] unsigned char [16]
  1700 ;;  name           16    0[BANK1 ] unsigned char [16]
  1701 ;;  i               2    0        int 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : B3F/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1712 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1713 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1714 ;;      Totals:         0       2      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1715 ;;Total ram usage:       38 bytes
  1716 ;; Hardware stack levels required when called: 8
  1717 ;; This function calls:
  1718 ;;		_ADC_Init
  1719 ;;		_ADC_Read
  1720 ;;		_LCD_Clear
  1721 ;;		_LCD_Init
  1722 ;;		_LCD_String
  1723 ;;		___lwdiv
  1724 ;;		___wmul
  1725 ;;		_lcd_set_cursor
  1726 ;;		_sprintf
  1727 ;; This function is called by:
  1728 ;;		Startup code after reset
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732     0683                     _main:	
  1733                           ;psect for function _main
  1734                           
  1735     0683                     l1458:	
  1736                           ;incstack = 0
  1737                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1738                           
  1739                           
  1740                           ;lcdmain.c: 71:     char name[16] = "Aung Win Htut";
  1741     0683  30C4               	movlw	low main@F12491
  1742     0684  0086               	movwf	6
  1743     0685  3000               	movlw	high main@F12491
  1744     0686  0087               	movwf	7
  1745     0687  30A0               	movlw	low main@name
  1746     0688  0084               	movwf	4
  1747     0689  3000               	movlw	high main@name
  1748     068A  0085               	movwf	5
  1749     068B  3010               	movlw	16
  1750     068C  0140               	movlb	0	; select bank0
  1751     068D  00DA               	movwf	??_main
  1752     068E                     u860:
  1753     068E  0016               	moviw fsr1++
  1754     068F  001A               	movwi fsr0++
  1755     0690  0BDA               	decfsz	??_main,f
  1756     0691  2E8E               	goto	u860
  1757     0692                     l1460:
  1758     0692                     l1462:
  1759                           
  1760                           ;lcdmain.c: 74:     ADC_Init();
  1761     0692  3183  238E  3186   	fcall	_ADC_Init
  1762     0695                     l1464:
  1763                           
  1764                           ;lcdmain.c: 75:     LCD_Init();
  1765     0695  3184  241B  3186   	fcall	_LCD_Init
  1766     0698                     l1466:
  1767                           
  1768                           ;lcdmain.c: 76:     LCD_Clear();
  1769     0698  3183  2372  3186   	fcall	_LCD_Clear
  1770     069B                     l1468:
  1771                           
  1772                           ;lcdmain.c: 78:         unsigned int O2_level = ADC_Read(0);
  1773     069B  3000               	movlw	0
  1774     069C  3183  23A0  3186   	fcall	_ADC_Read
  1775     069F  0871               	movf	?_ADC_Read+1,w
  1776     06A0  0141               	movlb	1	; select bank1
  1777     06A1  00C1               	movwf	(main@O2_level+1)^(0+128)
  1778     06A2  0870               	movf	?_ADC_Read,w
  1779     06A3  00C0               	movwf	main@O2_level^(0+128)
  1780     06A4                     l1470:
  1781                           
  1782                           ;lcdmain.c: 79:         sprintf(buffer, "Oxygen lvl = %3u%%", O2_level);
  1783     06A4  3000               	movlw	low (STR_1| (0+32768))
  1784     06A5  0140               	movlb	0	; select bank0
  1785     06A6  00C8               	movwf	sprintf@fmt
  1786     06A7  3088               	movlw	high (STR_1| (0+32768))
  1787     06A8  00C9               	movwf	sprintf@fmt+1
  1788     06A9  0141               	movlb	1	; select bank1
  1789     06AA  0841               	movf	(main@O2_level+1)^(0+128),w
  1790     06AB  0140               	movlb	0	; select bank0
  1791     06AC  00CB               	movwf	?_sprintf+3
  1792     06AD  0141               	movlb	1	; select bank1
  1793     06AE  0840               	movf	main@O2_level^(0+128),w
  1794     06AF  0140               	movlb	0	; select bank0
  1795     06B0  00CA               	movwf	?_sprintf+2
  1796     06B1  30B0               	movlw	(low (main@buffer| 0))& (0+255)
  1797     06B2  3183  23FE  3186   	fcall	_sprintf
  1798                           
  1799                           ;lcdmain.c: 80:         LCD_Clear();
  1800     06B5  3183  2372  3186   	fcall	_LCD_Clear
  1801                           
  1802                           ;lcdmain.c: 82:         lcd_set_cursor(1,1);
  1803     06B8  01F6               	clrf	lcd_set_cursor@line
  1804     06B9  0AF6               	incf	lcd_set_cursor@line,f
  1805     06BA  3001               	movlw	1
  1806     06BB  3183  23CA  3186   	fcall	_lcd_set_cursor
  1807     06BE                     l1472:
  1808                           
  1809                           ;lcdmain.c: 83:         LCD_String(buffer);
  1810     06BE  30B0               	movlw	(low (main@buffer| 0))& (0+255)
  1811     06BF  3183  23B4  3186   	fcall	_LCD_String
  1812     06C2                     l1474:
  1813                           
  1814                           ;lcdmain.c: 84:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1815     06C2  3006               	movlw	6
  1816     06C3  0140               	movlb	0	; select bank0
  1817     06C4  00DB               	movwf	??_main+1
  1818     06C5  3013               	movlw	19
  1819     06C6  00DA               	movwf	??_main
  1820     06C7  30AD               	movlw	173
  1821     06C8                     u877:
  1822     06C8  0B89               	decfsz	9,f
  1823     06C9  2EC8               	goto	u877
  1824     06CA  0BDA               	decfsz	??_main,f
  1825     06CB  2EC8               	goto	u877
  1826     06CC  0BDB               	decfsz	??_main+1,f
  1827     06CD  2EC8               	goto	u877
  1828     06CE  3200               	nop2
  1829     06CF                     l1476:
  1830                           
  1831                           ;lcdmain.c: 86:         unsigned int PH_level = ADC_Read(1);
  1832     06CF  3001               	movlw	1
  1833     06D0  3183  23A0  3186   	fcall	_ADC_Read
  1834     06D3  0871               	movf	?_ADC_Read+1,w
  1835     06D4  0141               	movlb	1	; select bank1
  1836     06D5  00C3               	movwf	(main@PH_level+1)^(0+128)
  1837     06D6  0870               	movf	?_ADC_Read,w
  1838     06D7  00C2               	movwf	main@PH_level^(0+128)
  1839     06D8                     l1478:
  1840                           
  1841                           ;lcdmain.c: 87:         PH_level = PH_level * 14 / 1023;
  1842     06D8  30FF               	movlw	255
  1843     06D9  00F6               	movwf	___lwdiv@divisor
  1844     06DA  3003               	movlw	3
  1845     06DB  00F7               	movwf	___lwdiv@divisor+1
  1846     06DC  0843               	movf	(main@PH_level+1)^(0+128),w
  1847     06DD  00F1               	movwf	___wmul@multiplier+1
  1848     06DE  0842               	movf	main@PH_level^(0+128),w
  1849     06DF  00F0               	movwf	___wmul@multiplier
  1850     06E0  300E               	movlw	14
  1851     06E1  00F2               	movwf	___wmul@multiplicand
  1852     06E2  3000               	movlw	0
  1853     06E3  00F3               	movwf	___wmul@multiplicand+1
  1854     06E4  3184  2439  3186   	fcall	___wmul
  1855     06E7  0871               	movf	?___wmul+1,w
  1856     06E8  00F9               	movwf	___lwdiv@dividend+1
  1857     06E9  0870               	movf	?___wmul,w
  1858     06EA  00F8               	movwf	___lwdiv@dividend
  1859     06EB  3184  24E0  3186   	fcall	___lwdiv
  1860     06EE  0877               	movf	?___lwdiv+1,w
  1861     06EF  0141               	movlb	1	; select bank1
  1862     06F0  00C3               	movwf	(main@PH_level+1)^(0+128)
  1863     06F1  0876               	movf	?___lwdiv,w
  1864     06F2  00C2               	movwf	main@PH_level^(0+128)
  1865     06F3                     l1480:
  1866                           
  1867                           ;lcdmain.c: 88:         sprintf(buffer, "PH lvl = %3u%%", PH_level);
  1868     06F3  3013               	movlw	low (STR_2| (0+32768))
  1869     06F4  0140               	movlb	0	; select bank0
  1870     06F5  00C8               	movwf	sprintf@fmt
  1871     06F6  3088               	movlw	high (STR_2| (0+32768))
  1872     06F7  00C9               	movwf	sprintf@fmt+1
  1873     06F8  0141               	movlb	1	; select bank1
  1874     06F9  0843               	movf	(main@PH_level+1)^(0+128),w
  1875     06FA  0140               	movlb	0	; select bank0
  1876     06FB  00CB               	movwf	?_sprintf+3
  1877     06FC  0141               	movlb	1	; select bank1
  1878     06FD  0842               	movf	main@PH_level^(0+128),w
  1879     06FE  0140               	movlb	0	; select bank0
  1880     06FF  00CA               	movwf	?_sprintf+2
  1881     0700  30B0               	movlw	(low (main@buffer| 0))& (0+255)
  1882     0701  3183  23FE  3186   	fcall	_sprintf
  1883     0704                     l1482:
  1884                           
  1885                           ;lcdmain.c: 89:         lcd_set_cursor(1,2);
  1886     0704  3002               	movlw	2
  1887     0705  00F6               	movwf	lcd_set_cursor@line
  1888     0706  3001               	movlw	1
  1889     0707  3183  23CA  3186   	fcall	_lcd_set_cursor
  1890     070A                     l1484:
  1891                           
  1892                           ;lcdmain.c: 90:         LCD_String(buffer);
  1893     070A  30B0               	movlw	(low (main@buffer| 0))& (0+255)
  1894     070B  3183  23B4  3186   	fcall	_LCD_String
  1895     070E                     l1486:
  1896                           
  1897                           ;lcdmain.c: 91:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1898     070E  3006               	movlw	6
  1899     070F  0140               	movlb	0	; select bank0
  1900     0710  00DB               	movwf	??_main+1
  1901     0711  3013               	movlw	19
  1902     0712  00DA               	movwf	??_main
  1903     0713  30AD               	movlw	173
  1904     0714                     u887:
  1905     0714  0B89               	decfsz	9,f
  1906     0715  2F14               	goto	u887
  1907     0716  0BDA               	decfsz	??_main,f
  1908     0717  2F14               	goto	u887
  1909     0718  0BDB               	decfsz	??_main+1,f
  1910     0719  2F14               	goto	u887
  1911     071A  3200               	nop2
  1912     071B  2E9B               	goto	l1468
  1913     071C  3180  2802         	ljmp	start
  1914     071E                     __end_of_main:
  1915                           
  1916                           	psect	text1
  1917     03FE                     __ptext1:	
  1918 ;; *************** function _sprintf *****************
  1919 ;; Defined at:
  1920 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  s               1    wreg     PTR unsigned char 
  1923 ;;		 -> main@buffer(16), 
  1924 ;;  fmt             2   40[BANK0 ] PTR const unsigned char 
  1925 ;;		 -> STR_2(15), STR_1(19), 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  s               1   46[BANK0 ] PTR unsigned char 
  1928 ;;		 -> main@buffer(16), 
  1929 ;;  f              11   47[BANK0 ] struct _IO_FILE
  1930 ;;  ret             2    0        int 
  1931 ;;  ap              1   45[BANK0 ] PTR void [1]
  1932 ;;		 -> ?_sprintf(2), 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  2   40[BANK0 ] int 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  1942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1943 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1945 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  1946 ;;Total ram usage:       18 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 7
  1949 ;; This function calls:
  1950 ;;		_vfprintf
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956     03FE                     _sprintf:	
  1957                           ;psect for function _sprintf
  1958                           
  1959                           
  1960                           ;incstack = 0
  1961                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1962                           ;sprintf@s stored from wreg
  1963     03FE  0140               	movlb	0	; select bank0
  1964     03FF  00CE               	movwf	sprintf@s
  1965     0400                     l1430:
  1966     0400  304A               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1967     0401  00CD               	movwf	sprintf@ap
  1968     0402  084E               	movf	sprintf@s,w
  1969     0403  00CF               	movwf	sprintf@f
  1970     0404                     l1432:
  1971     0404  01D1               	clrf	sprintf@f+2
  1972     0405  01D2               	clrf	sprintf@f+3
  1973     0406                     l1434:
  1974     0406  01D8               	clrf	sprintf@f+9
  1975     0407  01D9               	clrf	sprintf@f+10
  1976     0408                     l1436:
  1977     0408  0849               	movf	sprintf@fmt+1,w
  1978     0409  00C2               	movwf	vfprintf@fmt+1
  1979     040A  0848               	movf	sprintf@fmt,w
  1980     040B  00C1               	movwf	vfprintf@fmt
  1981     040C  304D               	movlw	(low (sprintf@ap| 0))& (0+255)
  1982     040D  00C3               	movwf	vfprintf@ap
  1983     040E  304F               	movlw	(low (sprintf@f| 0))& (0+255)
  1984     040F  3183  23E2  3183   	fcall	_vfprintf
  1985     0412                     l1438:
  1986     0412  0140               	movlb	0	; select bank0
  1987     0413  0851               	movf	sprintf@f+2,w
  1988     0414  074E               	addwf	sprintf@s,w
  1989     0415  00CC               	movwf	??_sprintf
  1990     0416  084C               	movf	??_sprintf,w
  1991     0417  0086               	movwf	6
  1992     0418  0187               	clrf	7
  1993     0419  0181               	clrf	1
  1994     041A                     l707:
  1995     041A  0008               	return
  1996     041B                     __end_of_sprintf:
  1997                           
  1998                           	psect	text2
  1999     03E2                     __ptext2:	
  2000 ;; *************** function _vfprintf *****************
  2001 ;; Defined at:
  2002 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  fp              1    wreg     PTR struct _IO_FILE
  2005 ;;		 -> sprintf@f(11), 
  2006 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  2007 ;;		 -> STR_2(15), STR_1(19), 
  2008 ;;  ap              1   35[BANK0 ] PTR PTR void 
  2009 ;;		 -> sprintf@ap(1), 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  2012 ;;		 -> sprintf@f(11), 
  2013 ;;  cfmt            2   38[BANK0 ] PTR unsigned char 
  2014 ;;		 -> STR_2(15), STR_1(19), 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  2   33[BANK0 ] int 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2024 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2025 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2027 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2028 ;;Total ram usage:        7 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 6
  2031 ;; This function calls:
  2032 ;;		_vfpfcnvrt
  2033 ;; This function is called by:
  2034 ;;		_sprintf
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038     03E2                     _vfprintf:	
  2039                           ;psect for function _vfprintf
  2040                           
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2044                           ;vfprintf@fp stored from wreg
  2045     03E2  0140               	movlb	0	; select bank0
  2046     03E3  00C5               	movwf	vfprintf@fp
  2047     03E4                     l1382:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2050     03E4  0842               	movf	vfprintf@fmt+1,w
  2051     03E5  00C7               	movwf	vfprintf@cfmt+1
  2052     03E6  0841               	movf	vfprintf@fmt,w
  2053     03E7  00C6               	movwf	vfprintf@cfmt
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2056     03E8  2BF1               	goto	l1386
  2057     03E9                     l1384:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2060     03E9  3046               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2061     03EA  00B4               	movwf	vfpfcnvrt@fmt
  2062     03EB  0843               	movf	vfprintf@ap,w
  2063     03EC  00B5               	movwf	vfpfcnvrt@ap
  2064     03ED  0845               	movf	vfprintf@fp,w
  2065     03EE  3187  271E  3183   	fcall	_vfpfcnvrt
  2066     03F1                     l1386:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2069     03F1  0140               	movlb	0	; select bank0
  2070     03F2  0846               	movf	vfprintf@cfmt,w
  2071     03F3  0084               	movwf	4
  2072     03F4  0847               	movf	vfprintf@cfmt+1,w
  2073     03F5  0085               	movwf	5
  2074     03F6  0012               	moviw fsr0++
  2075     03F7  1D03               	btfss	3,2
  2076     03F8  2BFA               	goto	u811
  2077     03F9  2BFB               	goto	u810
  2078     03FA                     u811:
  2079     03FA  2BE9               	goto	l1384
  2080     03FB                     u810:
  2081     03FB                     l1388:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2084     03FB  01C1               	clrf	?_vfprintf
  2085     03FC  01C2               	clrf	?_vfprintf+1
  2086     03FD                     l771:
  2087     03FD  0008               	return
  2088     03FE                     __end_of_vfprintf:
  2089                           
  2090                           	psect	text3
  2091     071E                     __ptext3:	
  2092 ;; *************** function _vfpfcnvrt *****************
  2093 ;; Defined at:
  2094 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  fp              1    wreg     PTR struct _IO_FILE
  2097 ;;		 -> sprintf@f(11), 
  2098 ;;  fmt             1   20[BANK0 ] PTR PTR unsigned char 
  2099 ;;		 -> vfprintf@cfmt(2), 
  2100 ;;  ap              1   21[BANK0 ] PTR PTR void 
  2101 ;;		 -> sprintf@ap(1), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  fp              1   32[BANK0 ] PTR struct _IO_FILE
  2104 ;;		 -> sprintf@f(11), 
  2105 ;;  convarg         4   26[BANK0 ] struct .
  2106 ;;  cp              2   30[BANK0 ] PTR unsigned char 
  2107 ;;		 -> STR_2(15), STR_1(19), 
  2108 ;;  i               2    0        int 
  2109 ;;  done            2    0        int 
  2110 ;;  c               1    0        unsigned char 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2121 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2122 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2123 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2124 ;;Total ram usage:       13 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 5
  2127 ;; This function calls:
  2128 ;;		_fputc
  2129 ;;		_read_prec_or_width
  2130 ;;		_utoa
  2131 ;; This function is called by:
  2132 ;;		_vfprintf
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136     071E                     _vfpfcnvrt:	
  2137                           ;psect for function _vfpfcnvrt
  2138                           
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2142                           ;vfpfcnvrt@fp stored from wreg
  2143     071E  0140               	movlb	0	; select bank0
  2144     071F  00C0               	movwf	vfpfcnvrt@fp
  2145     0720                     l1324:
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2148     0720  0834               	movf	vfpfcnvrt@fmt,w
  2149     0721  0086               	movwf	6
  2150     0722  0187               	clrf	7
  2151     0723  3F40               	moviw [0]fsr1
  2152     0724  00B6               	movwf	??_vfpfcnvrt
  2153     0725  3F41               	moviw [1]fsr1
  2154     0726  00B7               	movwf	??_vfpfcnvrt+1
  2155     0727  0836               	movf	??_vfpfcnvrt,w
  2156     0728  0084               	movwf	4
  2157     0729  0837               	movf	??_vfpfcnvrt+1,w
  2158     072A  0085               	movwf	5
  2159     072B  0012               	moviw fsr0++
  2160     072C  3A25               	xorlw	37
  2161     072D  1D03               	btfss	3,2
  2162     072E  2F30               	goto	u771
  2163     072F  2F31               	goto	u770
  2164     0730                     u771:
  2165     0730  2FCB               	goto	l1368
  2166     0731                     u770:
  2167     0731                     l1326:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2170     0731  0834               	movf	vfpfcnvrt@fmt,w
  2171     0732  0086               	movwf	6
  2172     0733  0187               	clrf	7
  2173     0734  3001               	movlw	1
  2174     0735  0781               	addwf	1,f
  2175     0736  3141               	addfsr 1,1
  2176     0737  1803               	skipnc
  2177     0738  0A81               	incf	1,f
  2178     0739                     l1328:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2181     0739  01DC               	clrf	_width
  2182     073A  01DD               	clrf	_width+1
  2183     073B  1003               	clrc
  2184     073C  3000               	movlw	0
  2185     073D  1803               	btfsc	3,0
  2186     073E  3001               	movlw	1
  2187     073F  00E0               	movwf	_flags
  2188     0740                     l1330:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2191     0740  30FF               	movlw	255
  2192     0741  00DE               	movwf	_prec
  2193     0742  30FF               	movlw	255
  2194     0743  00DF               	movwf	_prec+1
  2195     0744                     l1332:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2198     0744  0835               	movf	vfpfcnvrt@ap,w
  2199     0745  00F6               	movwf	read_prec_or_width@ap
  2200     0746  0834               	movf	vfpfcnvrt@fmt,w
  2201     0747  3185  25B1  3187   	fcall	_read_prec_or_width
  2202     074A  0877               	movf	?_read_prec_or_width+1,w
  2203     074B  0140               	movlb	0	; select bank0
  2204     074C  00DD               	movwf	_width+1
  2205     074D  0876               	movf	?_read_prec_or_width,w
  2206     074E  00DC               	movwf	_width
  2207     074F                     l1334:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  2210     074F  1FDD               	btfss	_width+1,7
  2211     0750  2F52               	goto	u781
  2212     0751  2F53               	goto	u780
  2213     0752                     u781:
  2214     0752  2F59               	goto	l1340
  2215     0753                     u780:
  2216     0753                     l1336:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  2219     0753  1460               	bsf	_flags,0
  2220     0754                     l1338:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  2223     0754  09DC               	comf	_width,f
  2224     0755  09DD               	comf	_width+1,f
  2225     0756  0ADC               	incf	_width,f
  2226     0757  1903               	skipnz
  2227     0758  0ADD               	incf	_width+1,f
  2228     0759                     l1340:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1265:   if (0
  2231     0759  0834               	movf	vfpfcnvrt@fmt,w
  2232     075A  0086               	movwf	6
  2233     075B  0187               	clrf	7
  2234     075C  3F40               	moviw [0]fsr1
  2235     075D  00BE               	movwf	vfpfcnvrt@cp
  2236     075E  3F41               	moviw [1]fsr1
  2237     075F  00BF               	movwf	vfpfcnvrt@cp+1
  2238     0760                     l1342:
  2239     0760  083E               	movf	vfpfcnvrt@cp,w
  2240     0761  0084               	movwf	4
  2241     0762  083F               	movf	vfpfcnvrt@cp+1,w
  2242     0763  0085               	movwf	5
  2243     0764  0012               	moviw fsr0++
  2244     0765  3A75               	xorlw	117
  2245     0766  1D03               	btfss	3,2
  2246     0767  2F69               	goto	u791
  2247     0768  2F6A               	goto	u790
  2248     0769                     u791:
  2249     0769  2F9E               	goto	l1356
  2250     076A                     u790:
  2251     076A                     l1344:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1278:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1321:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2254     076A  0835               	movf	vfpfcnvrt@ap,w
  2255     076B  0086               	movwf	6
  2256     076C  0187               	clrf	7
  2257     076D  0801               	movf	1,w
  2258     076E  0084               	movwf	4
  2259     076F  0185               	clrf	5
  2260     0770  3002               	movlw	2
  2261     0771  0781               	addwf	1,f
  2262     0772  3F00               	moviw [0]fsr0
  2263     0773  00BA               	movwf	vfpfcnvrt@convarg
  2264     0774  3F01               	moviw [1]fsr0
  2265     0775  00BB               	movwf	vfpfcnvrt@convarg+1
  2266     0776                     l1346:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  2269     0776  083E               	movf	vfpfcnvrt@cp,w
  2270     0777  3E01               	addlw	1
  2271     0778  00B6               	movwf	??_vfpfcnvrt
  2272     0779  3000               	movlw	0
  2273     077A  3D3F               	addwfc	vfpfcnvrt@cp+1,w
  2274     077B  00B7               	movwf	??_vfpfcnvrt+1
  2275     077C  0834               	movf	vfpfcnvrt@fmt,w
  2276     077D  0086               	movwf	6
  2277     077E  0187               	clrf	7
  2278     077F  0836               	movf	??_vfpfcnvrt,w
  2279     0780  3FC0               	movwi [0]fsr1
  2280     0781  0837               	movf	??_vfpfcnvrt+1,w
  2281     0782  3FC1               	movwi [1]fsr1
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  2284     0783  2F8D               	goto	l1354
  2285     0784                     l1348:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1331:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  2288     0784  083B               	movf	vfpfcnvrt@convarg+1,w
  2289     0785  00AB               	movwf	utoa@d+1
  2290     0786  083A               	movf	vfpfcnvrt@convarg,w
  2291     0787  00AA               	movwf	utoa@d
  2292     0788  0840               	movf	vfpfcnvrt@fp,w
  2293     0789  3186  2611  3187   	fcall	_utoa
  2294     078C  2FE3               	goto	l763
  2295     078D                     l1354:
  2296     078D  083E               	movf	vfpfcnvrt@cp,w
  2297     078E  0084               	movwf	4
  2298     078F  083F               	movf	vfpfcnvrt@cp+1,w
  2299     0790  0085               	movwf	5
  2300     0791  0800               	movf	0,w	;code access
  2301     0792  00B6               	movwf	??_vfpfcnvrt
  2302     0793  01B7               	clrf	??_vfpfcnvrt+1
  2303                           
  2304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2305                           ; Switch size 1, requested type "simple"
  2306                           ; Number of cases is 1, Range of values is 0 to 0
  2307                           ; switch strategies available:
  2308                           ; Name         Instructions Cycles
  2309                           ; simple_byte            4     3 (average)
  2310                           ; direct_byte            8     6 (fixed)
  2311                           ; jumptable            260     6 (fixed)
  2312                           ;	Chosen strategy is simple_byte
  2313     0794  0837               	movf	??_vfpfcnvrt+1,w
  2314     0795  3A00               	xorlw	0	; case 0
  2315     0796  1903               	skipnz
  2316     0797  2F99               	goto	l1508
  2317     0798  2F9E               	goto	l1356
  2318     0799                     l1508:
  2319                           
  2320                           ; Switch size 1, requested type "simple"
  2321                           ; Number of cases is 1, Range of values is 117 to 117
  2322                           ; switch strategies available:
  2323                           ; Name         Instructions Cycles
  2324                           ; simple_byte            4     3 (average)
  2325                           ; direct_byte           11     9 (fixed)
  2326                           ; jumptable            263     9 (fixed)
  2327                           ;	Chosen strategy is simple_byte
  2328     0799  0836               	movf	??_vfpfcnvrt,w
  2329     079A  3A75               	xorlw	117	; case 117
  2330     079B  1903               	skipnz
  2331     079C  2F84               	goto	l1348
  2332     079D  2F9E               	goto	l1356
  2333     079E                     l1356:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1527:         if 
      +                          ((*fmt)[0] == '%') {
  2336     079E  0834               	movf	vfpfcnvrt@fmt,w
  2337     079F  0086               	movwf	6
  2338     07A0  0187               	clrf	7
  2339     07A1  3F40               	moviw [0]fsr1
  2340     07A2  00B6               	movwf	??_vfpfcnvrt
  2341     07A3  3F41               	moviw [1]fsr1
  2342     07A4  00B7               	movwf	??_vfpfcnvrt+1
  2343     07A5  0836               	movf	??_vfpfcnvrt,w
  2344     07A6  0084               	movwf	4
  2345     07A7  0837               	movf	??_vfpfcnvrt+1,w
  2346     07A8  0085               	movwf	5
  2347     07A9  0012               	moviw fsr0++
  2348     07AA  3A25               	xorlw	37
  2349     07AB  1D03               	btfss	3,2
  2350     07AC  2FAE               	goto	u801
  2351     07AD  2FAF               	goto	u800
  2352     07AE                     u801:
  2353     07AE  2FC1               	goto	l1364
  2354     07AF                     u800:
  2355     07AF                     l1358:
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1528:            
      +                           ++*fmt;
  2358     07AF  0834               	movf	vfpfcnvrt@fmt,w
  2359     07B0  0086               	movwf	6
  2360     07B1  0187               	clrf	7
  2361     07B2  3001               	movlw	1
  2362     07B3  0781               	addwf	1,f
  2363     07B4  3141               	addfsr 1,1
  2364     07B5  1803               	skipnc
  2365     07B6  0A81               	incf	1,f
  2366     07B7                     l1360:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1529:            
      +                           fputc((int)'%', fp);
  2369     07B7  3025               	movlw	37
  2370     07B8  00F0               	movwf	fputc@c
  2371     07B9  3000               	movlw	0
  2372     07BA  00F1               	movwf	fputc@c+1
  2373     07BB  0840               	movf	vfpfcnvrt@fp,w
  2374     07BC  00F2               	movwf	fputc@fp
  2375     07BD  3185  2561  3187   	fcall	_fputc
  2376     07C0  2FE3               	goto	l763
  2377     07C1                     l1364:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2380     07C1  0140               	movlb	0	; select bank0
  2381     07C2  0834               	movf	vfpfcnvrt@fmt,w
  2382     07C3  0086               	movwf	6
  2383     07C4  0187               	clrf	7
  2384     07C5  3001               	movlw	1
  2385     07C6  0781               	addwf	1,f
  2386     07C7  3141               	addfsr 1,1
  2387     07C8  1803               	skipnc
  2388     07C9  0A81               	incf	1,f
  2389     07CA  2FE3               	goto	l763
  2390     07CB                     l1368:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2393     07CB  0834               	movf	vfpfcnvrt@fmt,w
  2394     07CC  0086               	movwf	6
  2395     07CD  0187               	clrf	7
  2396     07CE  3F40               	moviw [0]fsr1
  2397     07CF  00B6               	movwf	??_vfpfcnvrt
  2398     07D0  3F41               	moviw [1]fsr1
  2399     07D1  00B7               	movwf	??_vfpfcnvrt+1
  2400     07D2  0836               	movf	??_vfpfcnvrt,w
  2401     07D3  0084               	movwf	4
  2402     07D4  0837               	movf	??_vfpfcnvrt+1,w
  2403     07D5  0085               	movwf	5
  2404     07D6  0800               	movf	0,w	;code access
  2405     07D7  00B8               	movwf	??_vfpfcnvrt+2
  2406     07D8  01B9               	clrf	??_vfpfcnvrt+3
  2407     07D9  0838               	movf	??_vfpfcnvrt+2,w
  2408     07DA  00F0               	movwf	fputc@c
  2409     07DB  0839               	movf	??_vfpfcnvrt+3,w
  2410     07DC  00F1               	movwf	fputc@c+1
  2411     07DD  0840               	movf	vfpfcnvrt@fp,w
  2412     07DE  00F2               	movwf	fputc@fp
  2413     07DF  3185  2561  3187   	fcall	_fputc
  2414     07E2  2FC1               	goto	l1364
  2415     07E3                     l763:
  2416     07E3  0008               	return
  2417     07E4                     __end_of_vfpfcnvrt:
  2418                           
  2419                           	psect	text4
  2420     0611                     __ptext4:	
  2421 ;; *************** function _utoa *****************
  2422 ;; Defined at:
  2423 ;;		line 917 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  fp              1    wreg     PTR struct _IO_FILE
  2426 ;;		 -> sprintf@f(11), 
  2427 ;;  d               2   10[BANK0 ] unsigned int 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  2430 ;;		 -> sprintf@f(11), 
  2431 ;;  i               2   18[BANK0 ] int 
  2432 ;;  p               2   16[BANK0 ] int 
  2433 ;;  w               2   13[BANK0 ] int 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2444 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2446 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2447 ;;Total ram usage:       10 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 4
  2450 ;; This function calls:
  2451 ;;		___lwdiv
  2452 ;;		___lwmod
  2453 ;;		_pad
  2454 ;; This function is called by:
  2455 ;;		_vfpfcnvrt
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459     0611                     _utoa:	
  2460                           ;psect for function _utoa
  2461                           
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2465                           ;utoa@fp stored from wreg
  2466     0611  0140               	movlb	0	; select bank0
  2467     0612  00AF               	movwf	utoa@fp
  2468     0613                     l1256:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 917: static void 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 918: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           919:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprn
      +                          t.c: 927:     p = (0 <= prec) ? prec : 1;
  2471     0613  1FDF               	btfss	_prec+1,7
  2472     0614  2E16               	goto	u701
  2473     0615  2E17               	goto	u700
  2474     0616                     u701:
  2475     0616  2E1C               	goto	l1260
  2476     0617                     u700:
  2477     0617                     l1258:
  2478     0617  3001               	movlw	1
  2479     0618  00B0               	movwf	utoa@p
  2480     0619  3000               	movlw	0
  2481     061A  00B1               	movwf	utoa@p+1
  2482     061B  2E20               	goto	l739
  2483     061C                     l1260:
  2484     061C  085F               	movf	_prec+1,w
  2485     061D  00B1               	movwf	utoa@p+1
  2486     061E  085E               	movf	_prec,w
  2487     061F  00B0               	movwf	utoa@p
  2488     0620                     l739:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 928:     w = widt
      +                          h;
  2491     0620  085D               	movf	_width+1,w
  2492     0621  00AE               	movwf	utoa@w+1
  2493     0622  085C               	movf	_width,w
  2494     0623  00AD               	movwf	utoa@w
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 931:     i = size
      +                          of(dbuf) - 1;
  2497     0624  301F               	movlw	31
  2498     0625  00B2               	movwf	utoa@i
  2499     0626  3000               	movlw	0
  2500     0627  00B3               	movwf	utoa@i+1
  2501     0628                     l1262:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 932:     dbuf[i] 
      +                          = '\0';
  2504     0628  0142               	movlb	2	; select bank2
  2505     0629  01BF               	clrf	(_dbuf^(0+256)+31)
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  2508     062A  2E5C               	goto	l1274
  2509     062B                     l1264:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 937:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 938:         --i;
  2512     062B  30FF               	movlw	255
  2513     062C  0140               	movlb	0	; select bank0
  2514     062D  07B2               	addwf	utoa@i,f
  2515     062E  30FF               	movlw	255
  2516     062F  3DB3               	addwfc	utoa@i+1,f
  2517     0630                     l1266:
  2518                           
  2519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 939:         dbuf
      +                          [i] = '0' + (d % 10);
  2520     0630  0832               	movf	utoa@i,w
  2521     0631  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2522     0632  0086               	movwf	6
  2523     0633  3001               	movlw	1	; select bank2/3
  2524     0634  0087               	movwf	7
  2525     0635  300A               	movlw	10
  2526     0636  00F0               	movwf	___lwmod@divisor
  2527     0637  3000               	movlw	0
  2528     0638  00F1               	movwf	___lwmod@divisor+1
  2529     0639  082B               	movf	utoa@d+1,w
  2530     063A  00F3               	movwf	___lwmod@dividend+1
  2531     063B  082A               	movf	utoa@d,w
  2532     063C  00F2               	movwf	___lwmod@dividend
  2533     063D  3184  24AC  3186   	fcall	___lwmod
  2534     0640  0870               	movf	?___lwmod,w
  2535     0641  3E30               	addlw	48
  2536     0642  0081               	movwf	1
  2537     0643                     l1268:
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 940:         --p;
  2540     0643  30FF               	movlw	255
  2541     0644  0140               	movlb	0	; select bank0
  2542     0645  07B0               	addwf	utoa@p,f
  2543     0646  30FF               	movlw	255
  2544     0647  3DB1               	addwfc	utoa@p+1,f
  2545     0648                     l1270:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 941:         --w;
  2548     0648  30FF               	movlw	255
  2549     0649  07AD               	addwf	utoa@w,f
  2550     064A  30FF               	movlw	255
  2551     064B  3DAE               	addwfc	utoa@w+1,f
  2552     064C                     l1272:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 942:         d = 
      +                          d / 10;
  2555     064C  300A               	movlw	10
  2556     064D  00F6               	movwf	___lwdiv@divisor
  2557     064E  3000               	movlw	0
  2558     064F  00F7               	movwf	___lwdiv@divisor+1
  2559     0650  082B               	movf	utoa@d+1,w
  2560     0651  00F9               	movwf	___lwdiv@dividend+1
  2561     0652  082A               	movf	utoa@d,w
  2562     0653  00F8               	movwf	___lwdiv@dividend
  2563     0654  3184  24E0  3186   	fcall	___lwdiv
  2564     0657  0877               	movf	?___lwdiv+1,w
  2565     0658  0140               	movlb	0	; select bank0
  2566     0659  00AB               	movwf	utoa@d+1
  2567     065A  0876               	movf	?___lwdiv,w
  2568     065B  00AA               	movwf	utoa@d
  2569     065C                     l1274:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  2572     065C  0140               	movlb	0	; select bank0
  2573     065D  0832               	movf	utoa@i,w
  2574     065E  0433               	iorwf	utoa@i+1,w
  2575     065F  1903               	btfsc	3,2
  2576     0660  2E62               	goto	u711
  2577     0661  2E63               	goto	u710
  2578     0662                     u711:
  2579     0662  2E76               	goto	l1280
  2580     0663                     u710:
  2581     0663                     l1276:
  2582     0663  082A               	movf	utoa@d,w
  2583     0664  042B               	iorwf	utoa@d+1,w
  2584     0665  1D03               	btfss	3,2
  2585     0666  2E68               	goto	u721
  2586     0667  2E69               	goto	u720
  2587     0668                     u721:
  2588     0668  2E2B               	goto	l1264
  2589     0669                     u720:
  2590     0669                     l1278:
  2591     0669  0831               	movf	utoa@p+1,w
  2592     066A  3A80               	xorlw	128
  2593     066B  00AC               	movwf	??_utoa
  2594     066C  3080               	movlw	128
  2595     066D  022C               	subwf	??_utoa,w
  2596     066E  1D03               	skipz
  2597     066F  2E72               	goto	u735
  2598     0670  3001               	movlw	1
  2599     0671  0230               	subwf	utoa@p,w
  2600     0672                     u735:
  2601     0672  1803               	skipnc
  2602     0673  2E75               	goto	u731
  2603     0674  2E76               	goto	u730
  2604     0675                     u731:
  2605     0675  2E2B               	goto	l1264
  2606     0676                     u730:
  2607     0676                     l1280:
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 946:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2610     0676  0140               	movlb	0	; select bank0
  2611     0677  0832               	movf	utoa@i,w
  2612     0678  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2613     0679  00FB               	movwf	pad@buf
  2614     067A  082E               	movf	utoa@w+1,w
  2615     067B  00FD               	movwf	pad@p+1
  2616     067C  082D               	movf	utoa@w,w
  2617     067D  00FC               	movwf	pad@p
  2618     067E  082F               	movf	utoa@fp,w
  2619     067F  3185  251C  3186   	fcall	_pad
  2620     0682                     l745:
  2621     0682  0008               	return
  2622     0683                     __end_of_utoa:
  2623                           
  2624                           	psect	text5
  2625     051C                     __ptext5:	
  2626 ;; *************** function _pad *****************
  2627 ;; Defined at:
  2628 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  fp              1    wreg     PTR struct _IO_FILE
  2631 ;;		 -> sprintf@f(11), 
  2632 ;;  buf             1   11[COMMON] PTR unsigned char 
  2633 ;;		 -> dbuf(32), 
  2634 ;;  p               2   12[COMMON] int 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  2637 ;;		 -> sprintf@f(11), 
  2638 ;;  w               2    7[BANK0 ] int 
  2639 ;;  i               2    5[BANK0 ] int 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2649 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2650 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2652 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2653 ;;Total ram usage:        9 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 3
  2656 ;; This function calls:
  2657 ;;		_fputc
  2658 ;;		_fputs
  2659 ;; This function is called by:
  2660 ;;		_utoa
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664     051C                     _pad:	
  2665                           ;psect for function _pad
  2666                           
  2667                           
  2668                           ;incstack = 0
  2669                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2670                           ;pad@fp stored from wreg
  2671     051C  0140               	movlb	0	; select bank0
  2672     051D  00A9               	movwf	pad@fp
  2673     051E                     l1238:
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2676     051E  1C60               	btfss	_flags,0
  2677     051F  2D21               	goto	u661
  2678     0520  2D22               	goto	u660
  2679     0521                     u661:
  2680     0521  2D28               	goto	l1242
  2681     0522                     u660:
  2682     0522                     l1240:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2685     0522  0829               	movf	pad@fp,w
  2686     0523  00F8               	movwf	fputs@fp
  2687     0524  087B               	movf	pad@buf,w
  2688     0525  3184  2458  3185   	fcall	_fputs
  2689     0528                     l1242:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2692     0528  1BFD               	btfsc	pad@p+1,7
  2693     0529  2D2B               	goto	u671
  2694     052A  2D2C               	goto	u670
  2695     052B                     u671:
  2696     052B  2D32               	goto	l1246
  2697     052C                     u670:
  2698     052C                     l1244:
  2699     052C  087D               	movf	pad@p+1,w
  2700     052D  0140               	movlb	0	; select bank0
  2701     052E  00A8               	movwf	pad@w+1
  2702     052F  087C               	movf	pad@p,w
  2703     0530  00A7               	movwf	pad@w
  2704     0531  2D35               	goto	l728
  2705     0532                     l1246:
  2706     0532  0140               	movlb	0	; select bank0
  2707     0533  01A7               	clrf	pad@w
  2708     0534  01A8               	clrf	pad@w+1
  2709     0535                     l728:
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2712     0535  01A5               	clrf	pad@i
  2713     0536  01A6               	clrf	pad@i+1
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2716     0537  2D47               	goto	l1252
  2717     0538                     l1248:
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2720     0538  3020               	movlw	32
  2721     0539  00F0               	movwf	fputc@c
  2722     053A  3000               	movlw	0
  2723     053B  00F1               	movwf	fputc@c+1
  2724     053C  0140               	movlb	0	; select bank0
  2725     053D  0829               	movf	pad@fp,w
  2726     053E  00F2               	movwf	fputc@fp
  2727     053F  3185  2561  3185   	fcall	_fputc
  2728     0542                     l1250:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2731     0542  3001               	movlw	1
  2732     0543  0140               	movlb	0	; select bank0
  2733     0544  07A5               	addwf	pad@i,f
  2734     0545  3000               	movlw	0
  2735     0546  3DA6               	addwfc	pad@i+1,f
  2736     0547                     l1252:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2739     0547  0826               	movf	pad@i+1,w
  2740     0548  3A80               	xorlw	128
  2741     0549  00A4               	movwf	??_pad
  2742     054A  0828               	movf	pad@w+1,w
  2743     054B  3A80               	xorlw	128
  2744     054C  0224               	subwf	??_pad,w
  2745     054D  1D03               	skipz
  2746     054E  2D51               	goto	u685
  2747     054F  0827               	movf	pad@w,w
  2748     0550  0225               	subwf	pad@i,w
  2749     0551                     u685:
  2750     0551  1C03               	skipc
  2751     0552  2D54               	goto	u681
  2752     0553  2D55               	goto	u680
  2753     0554                     u681:
  2754     0554  2D38               	goto	l1248
  2755     0555                     u680:
  2756     0555                     l731:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2759     0555  0140               	movlb	0	; select bank0
  2760     0556  1860               	btfsc	_flags,0
  2761     0557  2D59               	goto	u691
  2762     0558  2D5A               	goto	u690
  2763     0559                     u691:
  2764     0559  2D60               	goto	l733
  2765     055A                     u690:
  2766     055A                     l1254:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2769     055A  0829               	movf	pad@fp,w
  2770     055B  00F8               	movwf	fputs@fp
  2771     055C  087B               	movf	pad@buf,w
  2772     055D  3184  2458  3185   	fcall	_fputs
  2773     0560                     l733:
  2774     0560  0008               	return
  2775     0561                     __end_of_pad:
  2776                           
  2777                           	psect	text6
  2778     0458                     __ptext6:	
  2779 ;; *************** function _fputs *****************
  2780 ;; Defined at:
  2781 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  s               1    wreg     PTR const unsigned char 
  2784 ;;		 -> dbuf(32), 
  2785 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2786 ;;		 -> sprintf@f(11), 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2789 ;;		 -> dbuf(32), 
  2790 ;;  i               2    1[BANK0 ] int 
  2791 ;;  c               1    0[BANK0 ] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  2    8[COMMON] int 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2801 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2802 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2804 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2805 ;;Total ram usage:        7 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 2
  2808 ;; This function calls:
  2809 ;;		_fputc
  2810 ;; This function is called by:
  2811 ;;		_pad
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815     0458                     _fputs:	
  2816                           ;psect for function _fputs
  2817                           
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2821                           ;fputs@s stored from wreg
  2822     0458  0140               	movlb	0	; select bank0
  2823     0459  00A3               	movwf	fputs@s
  2824     045A                     l1168:
  2825     045A  01A1               	clrf	fputs@i
  2826     045B  01A2               	clrf	fputs@i+1
  2827     045C  2C6E               	goto	l1174
  2828     045D                     l1170:
  2829     045D  0820               	movf	fputs@c,w
  2830     045E  00F9               	movwf	??_fputs
  2831     045F  01FA               	clrf	??_fputs+1
  2832     0460  0879               	movf	??_fputs,w
  2833     0461  00F0               	movwf	fputc@c
  2834     0462  087A               	movf	??_fputs+1,w
  2835     0463  00F1               	movwf	fputc@c+1
  2836     0464  0878               	movf	fputs@fp,w
  2837     0465  00F2               	movwf	fputc@fp
  2838     0466  3185  2561  3184   	fcall	_fputc
  2839     0469                     l1172:
  2840     0469  3001               	movlw	1
  2841     046A  0140               	movlb	0	; select bank0
  2842     046B  07A1               	addwf	fputs@i,f
  2843     046C  3000               	movlw	0
  2844     046D  3DA2               	addwfc	fputs@i+1,f
  2845     046E                     l1174:
  2846     046E  0821               	movf	fputs@i,w
  2847     046F  0723               	addwf	fputs@s,w
  2848     0470  00F9               	movwf	??_fputs
  2849     0471  0879               	movf	??_fputs,w
  2850     0472  0086               	movwf	6
  2851     0473  3001               	movlw	1	; select bank2/3
  2852     0474  0087               	movwf	7
  2853     0475  0801               	movf	1,w
  2854     0476  00A0               	movwf	fputs@c
  2855     0477  0820               	movf	fputs@c,w
  2856     0478  1D03               	btfss	3,2
  2857     0479  2C7B               	goto	u481
  2858     047A  2C7C               	goto	u480
  2859     047B                     u481:
  2860     047B  2C5D               	goto	l1170
  2861     047C                     u480:
  2862     047C                     l791:
  2863     047C  0008               	return
  2864     047D                     __end_of_fputs:
  2865                           
  2866                           	psect	text7
  2867     0561                     __ptext7:	
  2868 ;; *************** function _fputc *****************
  2869 ;; Defined at:
  2870 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  c               2    0[COMMON] int 
  2873 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2874 ;;		 -> sprintf@f(11), 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  2    0[COMMON] int 
  2879 ;; Registers used:
  2880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2886 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2888 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2889 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2890 ;;Total ram usage:        8 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 1
  2893 ;; This function calls:
  2894 ;;		_putch
  2895 ;; This function is called by:
  2896 ;;		_pad
  2897 ;;		_vfpfcnvrt
  2898 ;;		_fputs
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902     0561                     _fputc:	
  2903                           ;psect for function _fputc
  2904                           
  2905     0561                     l1152:	
  2906                           ;incstack = 0
  2907                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2908                           
  2909     0561  0872               	movf	fputc@fp,w
  2910     0562  1903               	btfsc	3,2
  2911     0563  2D65               	goto	u441
  2912     0564  2D66               	goto	u440
  2913     0565                     u441:
  2914     0565  2D6B               	goto	l1156
  2915     0566                     u440:
  2916     0566                     l1154:
  2917     0566  0872               	movf	fputc@fp,w
  2918     0567  1D03               	btfss	3,2
  2919     0568  2D6A               	goto	u451
  2920     0569  2D6B               	goto	u450
  2921     056A                     u451:
  2922     056A  2D70               	goto	l1158
  2923     056B                     u450:
  2924     056B                     l1156:
  2925     056B  0870               	movf	fputc@c,w
  2926     056C  3183  2350  3185   	fcall	_putch
  2927     056F  2DB0               	goto	l783
  2928     0570                     l1158:
  2929     0570  0872               	movf	fputc@fp,w
  2930     0571  3E09               	addlw	9
  2931     0572  0086               	movwf	6
  2932     0573  0187               	clrf	7
  2933     0574  0016               	moviw fsr1++
  2934     0575  0401               	iorwf	1,w
  2935     0576  1903               	btfsc	3,2
  2936     0577  2D79               	goto	u461
  2937     0578  2D7A               	goto	u460
  2938     0579                     u461:
  2939     0579  2D98               	goto	l1162
  2940     057A                     u460:
  2941     057A                     l1160:
  2942     057A  0872               	movf	fputc@fp,w
  2943     057B  3E09               	addlw	9
  2944     057C  0086               	movwf	6
  2945     057D  0187               	clrf	7
  2946     057E  3F40               	moviw [0]fsr1
  2947     057F  00F3               	movwf	??_fputc
  2948     0580  3F41               	moviw [1]fsr1
  2949     0581  00F4               	movwf	??_fputc+1
  2950     0582  0872               	movf	fputc@fp,w
  2951     0583  3E02               	addlw	2
  2952     0584  0086               	movwf	6
  2953     0585  0187               	clrf	7
  2954     0586  3F40               	moviw [0]fsr1
  2955     0587  00F5               	movwf	??_fputc+2
  2956     0588  3F41               	moviw [1]fsr1
  2957     0589  00F6               	movwf	??_fputc+3
  2958     058A  0876               	movf	??_fputc+3,w
  2959     058B  3A80               	xorlw	128
  2960     058C  00F7               	movwf	??_fputc+4
  2961     058D  0874               	movf	??_fputc+1,w
  2962     058E  3A80               	xorlw	128
  2963     058F  0277               	subwf	??_fputc+4,w
  2964     0590  1D03               	skipz
  2965     0591  2D94               	goto	u475
  2966     0592  0873               	movf	??_fputc,w
  2967     0593  0275               	subwf	??_fputc+2,w
  2968     0594                     u475:
  2969     0594  1803               	skipnc
  2970     0595  2D97               	goto	u471
  2971     0596  2D98               	goto	u470
  2972     0597                     u471:
  2973     0597  2DB0               	goto	l783
  2974     0598                     u470:
  2975     0598                     l1162:
  2976     0598  0872               	movf	fputc@fp,w
  2977     0599  0086               	movwf	6
  2978     059A  0187               	clrf	7
  2979     059B  0872               	movf	fputc@fp,w
  2980     059C  3E02               	addlw	2
  2981     059D  0084               	movwf	4
  2982     059E  0185               	clrf	5
  2983     059F  0800               	movf	0,w
  2984     05A0  0701               	addwf	1,w
  2985     05A1  00F3               	movwf	??_fputc
  2986     05A2  0873               	movf	??_fputc,w
  2987     05A3  0086               	movwf	6
  2988     05A4  0187               	clrf	7
  2989     05A5  0870               	movf	fputc@c,w
  2990     05A6  0081               	movwf	1
  2991     05A7                     l1164:
  2992     05A7  0872               	movf	fputc@fp,w
  2993     05A8  3E02               	addlw	2
  2994     05A9  0086               	movwf	6
  2995     05AA  0187               	clrf	7
  2996     05AB  3001               	movlw	1
  2997     05AC  0781               	addwf	1,f
  2998     05AD  3141               	addfsr 1,1
  2999     05AE  1803               	skipnc
  3000     05AF  0A81               	incf	1,f
  3001     05B0                     l783:
  3002     05B0  0008               	return
  3003     05B1                     __end_of_fputc:
  3004                           
  3005                           	psect	text8
  3006     0350                     __ptext8:	
  3007 ;; *************** function _putch *****************
  3008 ;; Defined at:
  3009 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  c               1    wreg     unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  c               1    0[COMMON] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_fputc
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036     0350                     _putch:	
  3037                           ;psect for function _putch
  3038                           
  3039     0350                     l794:	
  3040                           ;incstack = 0
  3041                           ; Regs used in _putch: [wreg]
  3042                           
  3043     0350  0008               	return
  3044     0351                     __end_of_putch:
  3045                           
  3046                           	psect	text9
  3047     04AC                     __ptext9:	
  3048 ;; *************** function ___lwmod *****************
  3049 ;; Defined at:
  3050 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  divisor         2    0[COMMON] unsigned int 
  3053 ;;  dividend        2    2[COMMON] unsigned int 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  counter         1    5[COMMON] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  2    0[COMMON] unsigned int 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3069 ;;Total ram usage:        6 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_utoa
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078     04AC                     ___lwmod:	
  3079                           ;psect for function ___lwmod
  3080                           
  3081     04AC                     l1216:	
  3082                           ;incstack = 0
  3083                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3084                           
  3085     04AC  0870               	movf	___lwmod@divisor,w
  3086     04AD  0471               	iorwf	___lwmod@divisor+1,w
  3087     04AE  1903               	btfsc	3,2
  3088     04AF  2CB1               	goto	u601
  3089     04B0  2CB2               	goto	u600
  3090     04B1                     u601:
  3091     04B1  2CDB               	goto	l1234
  3092     04B2                     u600:
  3093     04B2                     l1218:
  3094     04B2  01F5               	clrf	___lwmod@counter
  3095     04B3  0AF5               	incf	___lwmod@counter,f
  3096     04B4  2CBE               	goto	l1224
  3097     04B5                     l1220:
  3098     04B5  3001               	movlw	1
  3099     04B6                     u615:
  3100     04B6  35F0               	lslf	___lwmod@divisor,f
  3101     04B7  0DF1               	rlf	___lwmod@divisor+1,f
  3102     04B8  0B89               	decfsz	9,f
  3103     04B9  2CB6               	goto	u615
  3104     04BA                     l1222:
  3105     04BA  3001               	movlw	1
  3106     04BB  00F4               	movwf	??___lwmod
  3107     04BC  0874               	movf	??___lwmod,w
  3108     04BD  07F5               	addwf	___lwmod@counter,f
  3109     04BE                     l1224:
  3110     04BE  1FF1               	btfss	___lwmod@divisor+1,7
  3111     04BF  2CC1               	goto	u621
  3112     04C0  2CC2               	goto	u620
  3113     04C1                     u621:
  3114     04C1  2CB5               	goto	l1220
  3115     04C2                     u620:
  3116     04C2                     l1226:
  3117     04C2  0871               	movf	___lwmod@divisor+1,w
  3118     04C3  0273               	subwf	___lwmod@dividend+1,w
  3119     04C4  1D03               	skipz
  3120     04C5  2CC8               	goto	u635
  3121     04C6  0870               	movf	___lwmod@divisor,w
  3122     04C7  0272               	subwf	___lwmod@dividend,w
  3123     04C8                     u635:
  3124     04C8  1C03               	skipc
  3125     04C9  2CCB               	goto	u631
  3126     04CA  2CCC               	goto	u630
  3127     04CB                     u631:
  3128     04CB  2CD0               	goto	l1230
  3129     04CC                     u630:
  3130     04CC                     l1228:
  3131     04CC  0870               	movf	___lwmod@divisor,w
  3132     04CD  02F2               	subwf	___lwmod@dividend,f
  3133     04CE  0871               	movf	___lwmod@divisor+1,w
  3134     04CF  3BF3               	subwfb	___lwmod@dividend+1,f
  3135     04D0                     l1230:
  3136     04D0  3001               	movlw	1
  3137     04D1                     u645:
  3138     04D1  36F1               	lsrf	___lwmod@divisor+1,f
  3139     04D2  0CF0               	rrf	___lwmod@divisor,f
  3140     04D3  0B89               	decfsz	9,f
  3141     04D4  2CD1               	goto	u645
  3142     04D5                     l1232:
  3143     04D5  3001               	movlw	1
  3144     04D6  02F5               	subwf	___lwmod@counter,f
  3145     04D7  1D03               	btfss	3,2
  3146     04D8  2CDA               	goto	u651
  3147     04D9  2CDB               	goto	u650
  3148     04DA                     u651:
  3149     04DA  2CC2               	goto	l1226
  3150     04DB                     u650:
  3151     04DB                     l1234:
  3152     04DB  0873               	movf	___lwmod@dividend+1,w
  3153     04DC  00F1               	movwf	?___lwmod+1
  3154     04DD  0872               	movf	___lwmod@dividend,w
  3155     04DE  00F0               	movwf	?___lwmod
  3156     04DF                     l534:
  3157     04DF  0008               	return
  3158     04E0                     __end_of___lwmod:
  3159                           
  3160                           	psect	text10
  3161     04E0                     __ptext10:	
  3162 ;; *************** function ___lwdiv *****************
  3163 ;; Defined at:
  3164 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  divisor         2    6[COMMON] unsigned int 
  3167 ;;  dividend        2    8[COMMON] unsigned int 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  quotient        2   11[COMMON] unsigned int 
  3170 ;;  counter         1   13[COMMON] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  2    6[COMMON] unsigned int 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3181 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3183 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3184 ;;Total ram usage:        8 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;;		_utoa
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194     04E0                     ___lwdiv:	
  3195                           ;psect for function ___lwdiv
  3196                           
  3197     04E0                     l1190:	
  3198                           ;incstack = 0
  3199                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3200                           
  3201     04E0  01FB               	clrf	___lwdiv@quotient
  3202     04E1  01FC               	clrf	___lwdiv@quotient+1
  3203     04E2                     l1192:
  3204     04E2  0876               	movf	___lwdiv@divisor,w
  3205     04E3  0477               	iorwf	___lwdiv@divisor+1,w
  3206     04E4  1903               	btfsc	3,2
  3207     04E5  2CE7               	goto	u531
  3208     04E6  2CE8               	goto	u530
  3209     04E7                     u531:
  3210     04E7  2D17               	goto	l1212
  3211     04E8                     u530:
  3212     04E8                     l1194:
  3213     04E8  01FD               	clrf	___lwdiv@counter
  3214     04E9  0AFD               	incf	___lwdiv@counter,f
  3215     04EA  2CF4               	goto	l1200
  3216     04EB                     l1196:
  3217     04EB  3001               	movlw	1
  3218     04EC                     u545:
  3219     04EC  35F6               	lslf	___lwdiv@divisor,f
  3220     04ED  0DF7               	rlf	___lwdiv@divisor+1,f
  3221     04EE  0B89               	decfsz	9,f
  3222     04EF  2CEC               	goto	u545
  3223     04F0                     l1198:
  3224     04F0  3001               	movlw	1
  3225     04F1  00FA               	movwf	??___lwdiv
  3226     04F2  087A               	movf	??___lwdiv,w
  3227     04F3  07FD               	addwf	___lwdiv@counter,f
  3228     04F4                     l1200:
  3229     04F4  1FF7               	btfss	___lwdiv@divisor+1,7
  3230     04F5  2CF7               	goto	u551
  3231     04F6  2CF8               	goto	u550
  3232     04F7                     u551:
  3233     04F7  2CEB               	goto	l1196
  3234     04F8                     u550:
  3235     04F8                     l1202:
  3236     04F8  3001               	movlw	1
  3237     04F9                     u565:
  3238     04F9  35FB               	lslf	___lwdiv@quotient,f
  3239     04FA  0DFC               	rlf	___lwdiv@quotient+1,f
  3240     04FB  0B89               	decfsz	9,f
  3241     04FC  2CF9               	goto	u565
  3242     04FD  0877               	movf	___lwdiv@divisor+1,w
  3243     04FE  0279               	subwf	___lwdiv@dividend+1,w
  3244     04FF  1D03               	skipz
  3245     0500  2D03               	goto	u575
  3246     0501  0876               	movf	___lwdiv@divisor,w
  3247     0502  0278               	subwf	___lwdiv@dividend,w
  3248     0503                     u575:
  3249     0503  1C03               	skipc
  3250     0504  2D06               	goto	u571
  3251     0505  2D07               	goto	u570
  3252     0506                     u571:
  3253     0506  2D0C               	goto	l1208
  3254     0507                     u570:
  3255     0507                     l1204:
  3256     0507  0876               	movf	___lwdiv@divisor,w
  3257     0508  02F8               	subwf	___lwdiv@dividend,f
  3258     0509  0877               	movf	___lwdiv@divisor+1,w
  3259     050A  3BF9               	subwfb	___lwdiv@dividend+1,f
  3260     050B                     l1206:
  3261     050B  147B               	bsf	___lwdiv@quotient,0
  3262     050C                     l1208:
  3263     050C  3001               	movlw	1
  3264     050D                     u585:
  3265     050D  36F7               	lsrf	___lwdiv@divisor+1,f
  3266     050E  0CF6               	rrf	___lwdiv@divisor,f
  3267     050F  0B89               	decfsz	9,f
  3268     0510  2D0D               	goto	u585
  3269     0511                     l1210:
  3270     0511  3001               	movlw	1
  3271     0512  02FD               	subwf	___lwdiv@counter,f
  3272     0513  1D03               	btfss	3,2
  3273     0514  2D16               	goto	u591
  3274     0515  2D17               	goto	u590
  3275     0516                     u591:
  3276     0516  2CF8               	goto	l1202
  3277     0517                     u590:
  3278     0517                     l1212:
  3279     0517  087C               	movf	___lwdiv@quotient+1,w
  3280     0518  00F7               	movwf	?___lwdiv+1
  3281     0519  087B               	movf	___lwdiv@quotient,w
  3282     051A  00F6               	movwf	?___lwdiv
  3283     051B                     l524:
  3284     051B  0008               	return
  3285     051C                     __end_of___lwdiv:
  3286                           
  3287                           	psect	text11
  3288     05B1                     __ptext11:	
  3289 ;; *************** function _read_prec_or_width *****************
  3290 ;; Defined at:
  3291 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  fmt             1    wreg     PTR PTR const unsigned c
  3294 ;;		 -> vfprintf@cfmt(2), 
  3295 ;;  ap              1    6[COMMON] PTR PTR void [1]
  3296 ;;		 -> sprintf@ap(1), 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  3299 ;;		 -> vfprintf@cfmt(2), 
  3300 ;;  c               1    0[BANK0 ] unsigned char 
  3301 ;;  n               2    1[BANK0 ] int 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  2    6[COMMON] int 
  3304 ;; Registers used:
  3305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3312 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3313 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3314 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3315 ;;Total ram usage:        9 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; Hardware stack levels required when called: 1
  3318 ;; This function calls:
  3319 ;;		___wmul
  3320 ;; This function is called by:
  3321 ;;		_vfpfcnvrt
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325     05B1                     _read_prec_or_width:	
  3326                           ;psect for function _read_prec_or_width
  3327                           
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3331                           ;read_prec_or_width@fmt stored from wreg
  3332     05B1  0140               	movlb	0	; select bank0
  3333     05B2  00A3               	movwf	read_prec_or_width@fmt
  3334     05B3                     l1284:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  3337     05B3  01A1               	clrf	read_prec_or_width@n
  3338     05B4  01A2               	clrf	read_prec_or_width@n+1
  3339     05B5                     l1286:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  3342     05B5  0823               	movf	read_prec_or_width@fmt,w
  3343     05B6  0086               	movwf	6
  3344     05B7  0187               	clrf	7
  3345     05B8  3F40               	moviw [0]fsr1
  3346     05B9  00F8               	movwf	??_read_prec_or_width
  3347     05BA  3F41               	moviw [1]fsr1
  3348     05BB  00F9               	movwf	??_read_prec_or_width+1
  3349     05BC  0878               	movf	??_read_prec_or_width,w
  3350     05BD  0084               	movwf	4
  3351     05BE  0879               	movf	??_read_prec_or_width+1,w
  3352     05BF  0085               	movwf	5
  3353     05C0  0012               	moviw fsr0++
  3354     05C1  3A2A               	xorlw	42
  3355     05C2  1D03               	btfss	3,2
  3356     05C3  2DC5               	goto	u741
  3357     05C4  2DC6               	goto	u740
  3358     05C5                     u741:
  3359     05C5  2DF8               	goto	l1296
  3360     05C6                     u740:
  3361     05C6                     l1288:
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  3364     05C6  0823               	movf	read_prec_or_width@fmt,w
  3365     05C7  0086               	movwf	6
  3366     05C8  0187               	clrf	7
  3367     05C9  3001               	movlw	1
  3368     05CA  0781               	addwf	1,f
  3369     05CB  3141               	addfsr 1,1
  3370     05CC  1803               	skipnc
  3371     05CD  0A81               	incf	1,f
  3372     05CE                     l1290:
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3375     05CE  0876               	movf	read_prec_or_width@ap,w
  3376     05CF  0086               	movwf	6
  3377     05D0  0187               	clrf	7
  3378     05D1  0801               	movf	1,w
  3379     05D2  0084               	movwf	4
  3380     05D3  0185               	clrf	5
  3381     05D4  3002               	movlw	2
  3382     05D5  0781               	addwf	1,f
  3383     05D6  3F00               	moviw [0]fsr0
  3384     05D7  00A1               	movwf	read_prec_or_width@n
  3385     05D8  3F01               	moviw [1]fsr0
  3386     05D9  00A2               	movwf	read_prec_or_width@n+1
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  3389     05DA  2E0C               	goto	l1298
  3390     05DB                     l1292:
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  3393     05DB  0820               	movf	read_prec_or_width@c,w
  3394     05DC  00F8               	movwf	??_read_prec_or_width
  3395     05DD  01F9               	clrf	??_read_prec_or_width+1
  3396     05DE  0822               	movf	read_prec_or_width@n+1,w
  3397     05DF  00F1               	movwf	___wmul@multiplier+1
  3398     05E0  0821               	movf	read_prec_or_width@n,w
  3399     05E1  00F0               	movwf	___wmul@multiplier
  3400     05E2  300A               	movlw	10
  3401     05E3  00F2               	movwf	___wmul@multiplicand
  3402     05E4  3000               	movlw	0
  3403     05E5  00F3               	movwf	___wmul@multiplicand+1
  3404     05E6  3184  2439  3185   	fcall	___wmul
  3405     05E9  0878               	movf	??_read_prec_or_width,w
  3406     05EA  0770               	addwf	?___wmul,w
  3407     05EB  0140               	movlb	0	; select bank0
  3408     05EC  00A1               	movwf	read_prec_or_width@n
  3409     05ED  0879               	movf	??_read_prec_or_width+1,w
  3410     05EE  3D71               	addwfc	?___wmul+1,w
  3411     05EF  00A2               	movwf	read_prec_or_width@n+1
  3412     05F0                     l1294:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  3415     05F0  0823               	movf	read_prec_or_width@fmt,w
  3416     05F1  0086               	movwf	6
  3417     05F2  0187               	clrf	7
  3418     05F3  3001               	movlw	1
  3419     05F4  0781               	addwf	1,f
  3420     05F5  3141               	addfsr 1,1
  3421     05F6  1803               	skipnc
  3422     05F7  0A81               	incf	1,f
  3423     05F8                     l1296:
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3426     05F8  0823               	movf	read_prec_or_width@fmt,w
  3427     05F9  0086               	movwf	6
  3428     05FA  0187               	clrf	7
  3429     05FB  3F40               	moviw [0]fsr1
  3430     05FC  00F8               	movwf	??_read_prec_or_width
  3431     05FD  3F41               	moviw [1]fsr1
  3432     05FE  00F9               	movwf	??_read_prec_or_width+1
  3433     05FF  0878               	movf	??_read_prec_or_width,w
  3434     0600  0084               	movwf	4
  3435     0601  0879               	movf	??_read_prec_or_width+1,w
  3436     0602  0085               	movwf	5
  3437     0603  0800               	movf	0,w	;code access
  3438     0604  3ED0               	addlw	208
  3439     0605  00A0               	movwf	read_prec_or_width@c
  3440     0606  300A               	movlw	10
  3441     0607  0220               	subwf	read_prec_or_width@c,w
  3442     0608  1C03               	skipc
  3443     0609  2E0B               	goto	u751
  3444     060A  2E0C               	goto	u750
  3445     060B                     u751:
  3446     060B  2DDB               	goto	l1292
  3447     060C                     u750:
  3448     060C                     l1298:
  3449                           
  3450                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  3451     060C  0822               	movf	read_prec_or_width@n+1,w
  3452     060D  00F7               	movwf	?_read_prec_or_width+1
  3453     060E  0821               	movf	read_prec_or_width@n,w
  3454     060F  00F6               	movwf	?_read_prec_or_width
  3455     0610                     l753:
  3456     0610  0008               	return
  3457     0611                     __end_of_read_prec_or_width:
  3458                           
  3459                           	psect	text12
  3460     0439                     __ptext12:	
  3461 ;; *************** function ___wmul *****************
  3462 ;; Defined at:
  3463 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  multiplier      2    0[COMMON] unsigned int 
  3466 ;;  multiplicand    2    2[COMMON] unsigned int 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  product         2    4[COMMON] unsigned int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  2    0[COMMON] unsigned int 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3481 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3482 ;;Total ram usage:        6 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;;		_read_prec_or_width
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492     0439                     ___wmul:	
  3493                           ;psect for function ___wmul
  3494                           
  3495     0439                     l1176:	
  3496                           ;incstack = 0
  3497                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3498                           
  3499     0439  01F4               	clrf	___wmul@product
  3500     043A  01F5               	clrf	___wmul@product+1
  3501     043B                     l1178:
  3502     043B  1C70               	btfss	___wmul@multiplier,0
  3503     043C  2C3E               	goto	u491
  3504     043D  2C3F               	goto	u490
  3505     043E                     u491:
  3506     043E  2C43               	goto	l244
  3507     043F                     u490:
  3508     043F                     l1180:
  3509     043F  0872               	movf	___wmul@multiplicand,w
  3510     0440  07F4               	addwf	___wmul@product,f
  3511     0441  0873               	movf	___wmul@multiplicand+1,w
  3512     0442  3DF5               	addwfc	___wmul@product+1,f
  3513     0443                     l244:
  3514     0443  3001               	movlw	1
  3515     0444                     u505:
  3516     0444  35F2               	lslf	___wmul@multiplicand,f
  3517     0445  0DF3               	rlf	___wmul@multiplicand+1,f
  3518     0446  0B89               	decfsz	9,f
  3519     0447  2C44               	goto	u505
  3520     0448                     l1182:
  3521     0448  3001               	movlw	1
  3522     0449                     u515:
  3523     0449  36F1               	lsrf	___wmul@multiplier+1,f
  3524     044A  0CF0               	rrf	___wmul@multiplier,f
  3525     044B  0B89               	decfsz	9,f
  3526     044C  2C49               	goto	u515
  3527     044D                     l1184:
  3528     044D  0870               	movf	___wmul@multiplier,w
  3529     044E  0471               	iorwf	___wmul@multiplier+1,w
  3530     044F  1D03               	btfss	3,2
  3531     0450  2C52               	goto	u521
  3532     0451  2C53               	goto	u520
  3533     0452                     u521:
  3534     0452  2C3B               	goto	l1178
  3535     0453                     u520:
  3536     0453                     l1186:
  3537     0453  0875               	movf	___wmul@product+1,w
  3538     0454  00F1               	movwf	?___wmul+1
  3539     0455  0874               	movf	___wmul@product,w
  3540     0456  00F0               	movwf	?___wmul
  3541     0457                     l246:
  3542     0457  0008               	return
  3543     0458                     __end_of___wmul:
  3544                           
  3545                           	psect	text13
  3546     03CA                     __ptext13:	
  3547 ;; *************** function _lcd_set_cursor *****************
  3548 ;; Defined at:
  3549 ;;		line 171 in file "lcdmain.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  col             1    wreg     unsigned char 
  3552 ;;  line            1    6[COMMON] unsigned char 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  col             1    7[COMMON] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0, pclath, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3564 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3568 ;;Total ram usage:        2 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; Hardware stack levels required when called: 2
  3571 ;; This function calls:
  3572 ;;		_LCD_Cmd
  3573 ;; This function is called by:
  3574 ;;		_main
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578     03CA                     _lcd_set_cursor:	
  3579                           ;psect for function _lcd_set_cursor
  3580                           
  3581                           
  3582                           ;incstack = 0
  3583                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3584                           ;lcd_set_cursor@col stored from wreg
  3585     03CA  00F7               	movwf	lcd_set_cursor@col
  3586     03CB                     l1442:
  3587                           
  3588                           ;lcdmain.c: 171: void lcd_set_cursor(char col,char line);lcdmain.c: 172: {;lcdmain.c: 17
      +                          3:     if(line==1){
  3589     03CB  0376               	decf	lcd_set_cursor@line,w
  3590     03CC  1D03               	btfss	3,2
  3591     03CD  2BCF               	goto	u831
  3592     03CE  2BD0               	goto	u830
  3593     03CF                     u831:
  3594     03CF  2BD6               	goto	l1446
  3595     03D0                     u830:
  3596     03D0                     l1444:
  3597                           
  3598                           ;lcdmain.c: 174:         LCD_Cmd(0b10000000 | col);
  3599     03D0  0877               	movf	lcd_set_cursor@col,w
  3600     03D1  3880               	iorlw	128
  3601     03D2  3183  235D  3183   	fcall	_LCD_Cmd
  3602                           
  3603                           ;lcdmain.c: 175:     }
  3604     03D5  2BE1               	goto	l92
  3605     03D6                     l1446:
  3606     03D6  3002               	movlw	2
  3607     03D7  0676               	xorwf	lcd_set_cursor@line,w
  3608     03D8  1D03               	btfss	3,2
  3609     03D9  2BDB               	goto	u841
  3610     03DA  2BDC               	goto	u840
  3611     03DB                     u841:
  3612     03DB  2BE1               	goto	l92
  3613     03DC                     u840:
  3614     03DC                     l1448:
  3615                           
  3616                           ;lcdmain.c: 177:         LCD_Cmd(0b11000000 | col);
  3617     03DC  0877               	movf	lcd_set_cursor@col,w
  3618     03DD  38C0               	iorlw	192
  3619     03DE  3183  235D  3183   	fcall	_LCD_Cmd
  3620     03E1                     l92:
  3621     03E1  0008               	return
  3622     03E2                     __end_of_lcd_set_cursor:
  3623                           
  3624                           	psect	text14
  3625     03B4                     __ptext14:	
  3626 ;; *************** function _LCD_String *****************
  3627 ;; Defined at:
  3628 ;;		line 160 in file "lcdmain.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  text            1    wreg     PTR const unsigned char 
  3631 ;;		 -> main@buffer(16), 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  text            1    7[COMMON] PTR const unsigned char 
  3634 ;;		 -> main@buffer(16), 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3648 ;;Total ram usage:        2 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 2
  3651 ;; This function calls:
  3652 ;;		_LCD_Char
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658     03B4                     _LCD_String:	
  3659                           ;psect for function _LCD_String
  3660                           
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in _LCD_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3664                           ;LCD_String@text stored from wreg
  3665     03B4  00F7               	movwf	LCD_String@text
  3666     03B5                     l1450:
  3667                           
  3668                           ;lcdmain.c: 161:     while (*text != '\0') {
  3669     03B5  2BC1               	goto	l1456
  3670     03B6                     l1452:
  3671                           
  3672                           ;lcdmain.c: 162:         LCD_Char(*text++);
  3673     03B6  0877               	movf	LCD_String@text,w
  3674     03B7  0086               	movwf	6
  3675     03B8  0187               	clrf	7
  3676     03B9  0801               	movf	1,w
  3677     03BA  3183  2367  3183   	fcall	_LCD_Char
  3678     03BD                     l1454:
  3679     03BD  3001               	movlw	1
  3680     03BE  00F6               	movwf	??_LCD_String
  3681     03BF  0876               	movf	??_LCD_String,w
  3682     03C0  07F7               	addwf	LCD_String@text,f
  3683     03C1                     l1456:
  3684                           
  3685                           ;lcdmain.c: 161:     while (*text != '\0') {
  3686     03C1  0877               	movf	LCD_String@text,w
  3687     03C2  0086               	movwf	6
  3688     03C3  0187               	clrf	7
  3689     03C4  0801               	movf	1,w
  3690     03C5  1D03               	btfss	3,2
  3691     03C6  2BC8               	goto	u851
  3692     03C7  2BC9               	goto	u850
  3693     03C8                     u851:
  3694     03C8  2BB6               	goto	l1452
  3695     03C9                     u850:
  3696     03C9                     l83:
  3697     03C9  0008               	return
  3698     03CA                     __end_of_LCD_String:
  3699                           
  3700                           	psect	text15
  3701     0367                     __ptext15:	
  3702 ;; *************** function _LCD_Char *****************
  3703 ;; Defined at:
  3704 ;;		line 137 in file "lcdmain.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  data            1    wreg     unsigned char 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  data            1    5[COMMON] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3722 ;;Total ram usage:        1 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 1
  3725 ;; This function calls:
  3726 ;;		_LCD_Send
  3727 ;; This function is called by:
  3728 ;;		_LCD_String
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732     0367                     _LCD_Char:	
  3733                           ;psect for function _LCD_Char
  3734                           
  3735                           
  3736                           ;incstack = 0
  3737                           ; Regs used in _LCD_Char: [wreg+status,2+status,0+pclath+cstack]
  3738                           ;LCD_Char@data stored from wreg
  3739     0367  00F5               	movwf	LCD_Char@data
  3740     0368                     l1380:
  3741                           
  3742                           ;lcdmain.c: 138:     LCD_Send(1,data);
  3743     0368  3001               	movlw	1
  3744     0369  00F0               	movwf	LCD_Send@RS
  3745     036A  3000               	movlw	0
  3746     036B  00F1               	movwf	LCD_Send@RS+1
  3747     036C  0875               	movf	LCD_Char@data,w
  3748     036D  00F2               	movwf	LCD_Send@data
  3749     036E  3184  247D  3183   	fcall	_LCD_Send
  3750     0371                     l74:
  3751     0371  0008               	return
  3752     0372                     __end_of_LCD_Char:
  3753                           
  3754                           	psect	text16
  3755     041B                     __ptext16:	
  3756 ;; *************** function _LCD_Init *****************
  3757 ;; Defined at:
  3758 ;;		line 121 in file "lcdmain.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3776 ;;Total ram usage:        1 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 2
  3779 ;; This function calls:
  3780 ;;		_LCD_Cmd
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786     041B                     _LCD_Init:	
  3787                           ;psect for function _LCD_Init
  3788                           
  3789     041B                     l1402:	
  3790                           ;incstack = 0
  3791                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3792                           
  3793                           
  3794                           ;lcdmain.c: 123:     TRISC = 0x00;
  3795     041B  0140               	movlb	0	; select bank0
  3796     041C  0193               	clrf	19	;volatile
  3797     041D                     l1404:
  3798                           
  3799                           ;lcdmain.c: 124:     _delay((unsigned long)((15)*(4000000/4000.0)));
  3800     041D  3014               	movlw	20
  3801     041E  00F6               	movwf	??_LCD_Init
  3802     041F  307A               	movlw	122
  3803     0420                     u897:
  3804     0420  0B89               	decfsz	9,f
  3805     0421  2C20               	goto	u897
  3806     0422  0BF6               	decfsz	??_LCD_Init,f
  3807     0423  2C20               	goto	u897
  3808     0424                     l1406:
  3809                           
  3810                           ;lcdmain.c: 126:     LCD_Cmd(0x02);
  3811     0424  3002               	movlw	2
  3812     0425  3183  235D  3184   	fcall	_LCD_Cmd
  3813     0428                     l1408:
  3814                           
  3815                           ;lcdmain.c: 127:     LCD_Cmd(0x28);
  3816     0428  3028               	movlw	40
  3817     0429  3183  235D  3184   	fcall	_LCD_Cmd
  3818     042C                     l1410:
  3819                           
  3820                           ;lcdmain.c: 128:     LCD_Cmd(0x0C);
  3821     042C  300C               	movlw	12
  3822     042D  3183  235D  3184   	fcall	_LCD_Cmd
  3823     0430                     l1412:
  3824                           
  3825                           ;lcdmain.c: 129:     LCD_Cmd(0x06);
  3826     0430  3006               	movlw	6
  3827     0431  3183  235D  3184   	fcall	_LCD_Cmd
  3828     0434                     l1414:
  3829                           
  3830                           ;lcdmain.c: 130:     LCD_Cmd(0x80);
  3831     0434  3080               	movlw	128
  3832     0435  3183  235D  3184   	fcall	_LCD_Cmd
  3833     0438                     l68:
  3834     0438  0008               	return
  3835     0439                     __end_of_LCD_Init:
  3836                           
  3837                           	psect	text17
  3838     0372                     __ptext17:	
  3839 ;; *************** function _LCD_Clear *****************
  3840 ;; Defined at:
  3841 ;;		line 166 in file "lcdmain.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, pclath, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3859 ;;Total ram usage:        1 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 2
  3862 ;; This function calls:
  3863 ;;		_LCD_Cmd
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869     0372                     _LCD_Clear:	
  3870                           ;psect for function _LCD_Clear
  3871                           
  3872     0372                     l1416:	
  3873                           ;incstack = 0
  3874                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3875                           
  3876                           
  3877                           ;lcdmain.c: 167:     LCD_Cmd(0x01);
  3878     0372  3001               	movlw	1
  3879     0373  3183  235D  3183   	fcall	_LCD_Cmd
  3880     0376                     l1418:
  3881                           
  3882                           ;lcdmain.c: 168:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3883     0376  3003               	movlw	3
  3884     0377  00F6               	movwf	??_LCD_Clear
  3885     0378  3098               	movlw	152
  3886     0379                     u907:
  3887     0379  0B89               	decfsz	9,f
  3888     037A  2B79               	goto	u907
  3889     037B  0BF6               	decfsz	??_LCD_Clear,f
  3890     037C  2B79               	goto	u907
  3891     037D                     l86:
  3892     037D  0008               	return
  3893     037E                     __end_of_LCD_Clear:
  3894                           
  3895                           	psect	text18
  3896     035D                     __ptext18:	
  3897 ;; *************** function _LCD_Cmd *****************
  3898 ;; Defined at:
  3899 ;;		line 133 in file "lcdmain.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  command         1    wreg     unsigned char 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  command         1    5[COMMON] unsigned char 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0, pclath, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3917 ;;Total ram usage:        1 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 1
  3920 ;; This function calls:
  3921 ;;		_LCD_Send
  3922 ;; This function is called by:
  3923 ;;		_LCD_Init
  3924 ;;		_LCD_Clear
  3925 ;;		_lcd_set_cursor
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929     035D                     _LCD_Cmd:	
  3930                           ;psect for function _LCD_Cmd
  3931                           
  3932                           
  3933                           ;incstack = 0
  3934                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3935                           ;LCD_Cmd@command stored from wreg
  3936     035D  00F5               	movwf	LCD_Cmd@command
  3937     035E                     l1378:
  3938                           
  3939                           ;lcdmain.c: 134:     LCD_Send(0,command);
  3940     035E  3000               	movlw	0
  3941     035F  00F0               	movwf	LCD_Send@RS
  3942     0360  00F1               	movwf	LCD_Send@RS+1
  3943     0361  0875               	movf	LCD_Cmd@command,w
  3944     0362  00F2               	movwf	LCD_Send@data
  3945     0363  3184  247D  3183   	fcall	_LCD_Send
  3946     0366                     l71:
  3947     0366  0008               	return
  3948     0367                     __end_of_LCD_Cmd:
  3949                           
  3950                           	psect	text19
  3951     047D                     __ptext19:	
  3952 ;; *************** function _LCD_Send *****************
  3953 ;; Defined at:
  3954 ;;		line 141 in file "lcdmain.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  RS              2    0[COMMON] int 
  3957 ;;  data            1    2[COMMON] unsigned char 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3969 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3972 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3973 ;;Total ram usage:        5 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_LCD_Cmd
  3979 ;;		_LCD_Char
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983     047D                     _LCD_Send:	
  3984                           ;psect for function _LCD_Send
  3985                           
  3986     047D                     l1302:	
  3987                           ;incstack = 0
  3988                           ; Regs used in _LCD_Send: [wreg+status,2+status,0]
  3989                           
  3990                           
  3991                           ;lcdmain.c: 141: void LCD_Send(int RS,unsigned char data);lcdmain.c: 142: {;lcdmain.c: 1
      +                          44:     PORTCbits.RC0 = RS;
  3992     047D  0C70               	rrf	LCD_Send@RS,w
  3993     047E  0140               	movlb	0	; select bank0
  3994     047F  1C03               	skipc
  3995     0480  100E               	bcf	14,0	;volatile
  3996     0481  1803               	skipnc
  3997     0482  140E               	bsf	14,0	;volatile
  3998     0483                     l1304:
  3999                           
  4000                           ;lcdmain.c: 145:     PORTC = (PORTC & 0x0F) | (data & 0xF0);
  4001     0483  30F0               	movlw	240
  4002     0484  0572               	andwf	LCD_Send@data,w
  4003     0485  00F3               	movwf	??_LCD_Send
  4004     0486  080E               	movf	14,w	;volatile
  4005     0487  390F               	andlw	15
  4006     0488  0473               	iorwf	??_LCD_Send,w
  4007     0489  008E               	movwf	14	;volatile
  4008     048A                     l1306:
  4009                           
  4010                           ;lcdmain.c: 147:     PORTCbits.RC3 = 1;
  4011     048A  158E               	bsf	14,3	;volatile
  4012     048B                     l1308:
  4013                           
  4014                           ;lcdmain.c: 148:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  4015     048B  0000               	nop
  4016     048C                     l1310:
  4017                           
  4018                           ;lcdmain.c: 149:     PORTCbits.RC3 = 0;
  4019     048C  0140               	movlb	0	; select bank0
  4020     048D  118E               	bcf	14,3	;volatile
  4021     048E                     l1312:
  4022                           
  4023                           ;lcdmain.c: 150:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  4024     048E  3042               	movlw	66
  4025     048F                     u917:
  4026     048F  0B89               	decfsz	9,f
  4027     0490  2C8F               	goto	u917
  4028     0491  3200               	nop2
  4029     0492                     l1314:
  4030                           
  4031                           ;lcdmain.c: 151:     PORTC = (PORTC & 0x0F) | ((data << 4) & 0xF0);
  4032     0492  0872               	movf	LCD_Send@data,w
  4033     0493  00F3               	movwf	??_LCD_Send
  4034     0494  3004               	movlw	4
  4035     0495                     u765:
  4036     0495  35F3               	lslf	??_LCD_Send,f
  4037     0496  0B89               	decfsz	9,f
  4038     0497  2C95               	goto	u765
  4039     0498  30F0               	movlw	240
  4040     0499  0573               	andwf	??_LCD_Send,w
  4041     049A  00F4               	movwf	??_LCD_Send+1
  4042     049B  0140               	movlb	0	; select bank0
  4043     049C  080E               	movf	14,w	;volatile
  4044     049D  390F               	andlw	15
  4045     049E  0474               	iorwf	??_LCD_Send+1,w
  4046     049F  008E               	movwf	14	;volatile
  4047     04A0                     l1316:
  4048                           
  4049                           ;lcdmain.c: 153:     PORTCbits.RC3 = 1;
  4050     04A0  158E               	bsf	14,3	;volatile
  4051     04A1                     l1318:
  4052                           
  4053                           ;lcdmain.c: 154:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  4054     04A1  0000               	nop
  4055     04A2                     l1320:
  4056                           
  4057                           ;lcdmain.c: 155:     PORTCbits.RC3 = 0;
  4058     04A2  0140               	movlb	0	; select bank0
  4059     04A3  118E               	bcf	14,3	;volatile
  4060     04A4                     l1322:
  4061                           
  4062                           ;lcdmain.c: 156:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4063     04A4  3003               	movlw	3
  4064     04A5  00F3               	movwf	??_LCD_Send
  4065     04A6  3098               	movlw	152
  4066     04A7                     u927:
  4067     04A7  0B89               	decfsz	9,f
  4068     04A8  2CA7               	goto	u927
  4069     04A9  0BF3               	decfsz	??_LCD_Send,f
  4070     04AA  2CA7               	goto	u927
  4071     04AB                     l77:
  4072     04AB  0008               	return
  4073     04AC                     __end_of_LCD_Send:
  4074                           
  4075                           	psect	text20
  4076     03A0                     __ptext20:	
  4077 ;; *************** function _ADC_Read *****************
  4078 ;; Defined at:
  4079 ;;		line 108 in file "lcdmain.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  channel         1    wreg     unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  channel         1    4[COMMON] unsigned char 
  4084 ;;  result          2    2[COMMON] unsigned int 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  2    0[COMMON] unsigned int 
  4087 ;; Registers used:
  4088 ;;		wreg
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4095 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4097 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4098 ;;Total ram usage:        5 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107     03A0                     _ADC_Read:	
  4108                           ;psect for function _ADC_Read
  4109                           
  4110                           
  4111                           ;incstack = 0
  4112                           ; Regs used in _ADC_Read: [wreg]
  4113                           ;ADC_Read@channel stored from wreg
  4114     03A0  00F4               	movwf	ADC_Read@channel
  4115     03A1                     l1420:
  4116                           
  4117                           ;lcdmain.c: 109:     unsigned int result;;lcdmain.c: 110:      ADPCH = channel;
  4118     03A1  0874               	movf	ADC_Read@channel,w
  4119     03A2  0141               	movlb	1	; select bank1
  4120     03A3  009E               	movwf	30	;volatile
  4121     03A4                     l1422:
  4122                           
  4123                           ;lcdmain.c: 111:     _delay((unsigned long)((2)*(4000000/4000000.0)));
  4124     03A4  3200               	nop2	;2 cycle nop
  4125     03A5                     l1424:
  4126                           
  4127                           ;lcdmain.c: 113:     ADCON0bits.GO = 1;
  4128     03A5  0141               	movlb	1	; select bank1
  4129     03A6  1413               	bsf	19,0	;volatile
  4130     03A7                     l62:	
  4131                           ;lcdmain.c: 115:     while (ADCON0bits.GO);
  4132                           
  4133     03A7  1813               	btfsc	19,0	;volatile
  4134     03A8  2BAA               	goto	u821
  4135     03A9  2BAB               	goto	u820
  4136     03AA                     u821:
  4137     03AA  2BA7               	goto	l62
  4138     03AB                     u820:
  4139     03AB                     l1426:
  4140                           
  4141                           ;lcdmain.c: 116:     result = ((unsigned int)ADRESH << 8) | ADRESL;
  4142     03AB  080D               	movf	13,w	;volatile
  4143     03AC  00F3               	movwf	ADC_Read@result+1
  4144     03AD  080C               	movf	12,w	;volatile
  4145     03AE  00F2               	movwf	ADC_Read@result
  4146                           
  4147                           ;lcdmain.c: 118:     return(result);
  4148     03AF  0873               	movf	ADC_Read@result+1,w
  4149     03B0  00F1               	movwf	?_ADC_Read+1
  4150     03B1  0872               	movf	ADC_Read@result,w
  4151     03B2  00F0               	movwf	?_ADC_Read
  4152     03B3                     l65:
  4153     03B3  0008               	return
  4154     03B4                     __end_of_ADC_Read:
  4155                           
  4156                           	psect	text21
  4157     038E                     __ptext21:	
  4158 ;; *************** function _ADC_Init *****************
  4159 ;; Defined at:
  4160 ;;		line 96 in file "lcdmain.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4178 ;;Total ram usage:        0 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187     038E                     _ADC_Init:	
  4188                           ;psect for function _ADC_Init
  4189                           
  4190     038E                     l1392:	
  4191                           ;incstack = 0
  4192                           ; Regs used in _ADC_Init: [wreg+status,2]
  4193                           
  4194                           
  4195                           ;lcdmain.c: 99:     ANSELA = 0b00000011;
  4196     038E  3003               	movlw	3
  4197     038F  017E               	movlb	62	; select bank62
  4198     0390  00B8               	movwf	56	;volatile
  4199                           
  4200                           ;lcdmain.c: 100:     TRISA = 0b11111111;
  4201     0391  30FF               	movlw	255
  4202     0392  0140               	movlb	0	; select bank0
  4203     0393  0091               	movwf	17	;volatile
  4204     0394                     l1394:
  4205                           
  4206                           ;lcdmain.c: 101:     ADREF = 0b00000000;
  4207     0394  0141               	movlb	1	; select bank1
  4208     0395  019A               	clrf	26	;volatile
  4209     0396                     l1396:
  4210                           
  4211                           ;lcdmain.c: 102:     ADCLK = 0b00000011;
  4212     0396  3003               	movlw	3
  4213     0397  0098               	movwf	24	;volatile
  4214                           
  4215                           ;lcdmain.c: 103:     ADACQ = 0b00000000;
  4216     0398  019D               	clrf	29	;volatile
  4217     0399                     l1398:
  4218                           
  4219                           ;lcdmain.c: 104:     ADCON0 = 0b10000100;
  4220     0399  3084               	movlw	132
  4221     039A  0093               	movwf	19	;volatile
  4222     039B                     l1400:
  4223                           
  4224                           ;lcdmain.c: 106:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  4225     039B  3006               	movlw	6
  4226     039C                     u937:
  4227     039C  0B89               	decfsz	9,f
  4228     039D  2B9C               	goto	u937
  4229     039E  3200               	nop2
  4230     039F                     l59:
  4231     039F  0008               	return
  4232     03A0                     __end_of_ADC_Init:
  4233     007E                     btemp	set	126	;btemp
  4234     007E                     wtemp0	set	126
  4235                           
  4236                           	psect	config
  4237                           
  4238                           ;Config register CONFIG1 @ 0x8007
  4239                           ;	External Oscillator mode selection bits
  4240                           ;	FEXTOSC = OFF, Oscillator not enabled
  4241                           ;	Power-up default value for COSC bits
  4242                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  4243                           ;	Clock Out Enable bit
  4244                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  4245                           ;	Clock Switch Enable bit
  4246                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4247                           ;	Fail-Safe Clock Monitor Enable bit
  4248                           ;	FCMEN = ON, FSCM timer enabled
  4249     8007                     	org	32775
  4250     8007  3FEC               	dw	16364
  4251                           
  4252                           ;Config register CONFIG2 @ 0x8008
  4253                           ;	Master Clear Enable bit
  4254                           ;	MCLRE = ON, MCLR pin is Master Clear function
  4255                           ;	Power-up Timer Enable bit
  4256                           ;	PWRTE = OFF, PWRT disabled
  4257                           ;	Low-Power BOR enable bit
  4258                           ;	LPBOREN = OFF, ULPBOR disabled
  4259                           ;	Brown-out reset enable bits
  4260                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4261                           ;	Brown-out Reset Voltage Selection
  4262                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  4263                           ;	Zero-cross detect disable
  4264                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  4265                           ;	Peripheral Pin Select one-way control
  4266                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  4267                           ;	Stack Overflow/Underflow Reset Enable bit
  4268                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4269                           ;	Background Debugger
  4270                           ;	DEBUG = 0x1, unprogrammed default
  4271     8008                     	org	32776
  4272     8008  3FFF               	dw	16383
  4273                           
  4274                           ;Config register CONFIG3 @ 0x8009
  4275                           ;	WDT Period Select bits
  4276                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4277                           ;	WDT operating mode
  4278                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  4279                           ;	WDT Window Select bits
  4280                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4281                           ;	WDT input clock selector
  4282                           ;	WDTCCS = SC, Software Control
  4283     8009                     	org	32777
  4284     8009  3F9F               	dw	16287
  4285                           
  4286                           ;Config register CONFIG4 @ 0x800A
  4287                           ;	UserNVM self-write protection bits
  4288                           ;	WRT = OFF, Write protection off
  4289                           ;	Scanner Enable bit
  4290                           ;	SCANE = available, Scanner module is available for use
  4291                           ;	Low Voltage Programming Enable bit
  4292                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  4293     800A                     	org	32778
  4294     800A  3FFF               	dw	16383
  4295                           
  4296                           ;Config register CONFIG5 @ 0x800B
  4297                           ;	UserNVM Program memory code protection bit
  4298                           ;	CP = OFF, Program Memory code protection disabled
  4299                           ;	DataNVM code protection bit
  4300                           ;	CPD = OFF, Data EEPROM code protection disabled
  4301     800B                     	org	32779
  4302     800B  3FFF               	dw	16383

Data Sizes:
    Strings     34
    Constant    0
    Data        16
    BSS         37
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      65
    BANK1            80     36      52
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[15]), STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[15]), STR_1(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[15]), STR_1(CODE[19]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S694$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[15]), STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S640$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S640$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_String@text	PTR const unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _utoa->___lwdiv
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___lwdiv->___wmul
    _read_prec_or_width->___wmul
    _lcd_set_cursor->_LCD_Cmd
    _LCD_String->_LCD_Char
    _LCD_Char->_LCD_Send
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _LCD_Cmd->_LCD_Send

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0    9334
                                             58 BANK0      2     2      0
                                              0 BANK1     36    36      0
                           _ADC_Init
                           _ADC_Read
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                            ___lwdiv
                             ___wmul
                     _lcd_set_cursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    16      4    6343
                                             40 BANK0     18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    5924
                                             33 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    16      2    5608
                                             20 BANK0     13    11      2
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                10     8      2    3484
                                             10 BANK0     10     8      2
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2370
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1    1149
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     685
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       2     1      1     632
                                              6 COMMON     2     1      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     2      0     503
                                              6 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             1     1      0     392
                                              5 COMMON     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     392
                                              6 COMMON     1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     392
                                              6 COMMON     1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              1     1      0     392
                                              5 COMMON     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             5     2      3     370
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      45
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Clear
     _LCD_Cmd
       _LCD_Send
   _LCD_Init
     _LCD_Cmd
   _LCD_String
     _LCD_Char
       _LCD_Send
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _lcd_set_cursor
     _LCD_Cmd
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad
             _fputc
             _fputs
               _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      41       5       81.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      34       7       65.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      A3      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      A3      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 09 14:18:47 2023

                        l62 03A7                          l71 0366                          l65 03B3  
                        l74 0371                          l59 039F                          l83 03C9  
                        l68 0438                          l92 03E1                          l77 04AB  
                        l86 037D         ___wmul@multiplicand 0072                 ?_LCD_String 0070  
                       l244 0443                         l246 0457                         l524 051B  
                       l534 04DF                         l731 0555                         l707 041A  
                       l733 0560                         l728 0535                         l753 0610  
                       l745 0682                         l739 0620                         l763 07E3  
                       l771 03FD                         l783 05B0                         l791 047C  
                       l794 0350                         u520 0453                         u600 04B2  
                       u440 0566                         u521 0452                         u505 0444  
                       u601 04B1                         u441 0565                         u530 04E8  
                       u450 056B                         u515 0449                         u531 04E7  
                       u451 056A                         u620 04C2                         u460 057A  
                       u700 0617                         u621 04C1                         u461 0579  
                       u701 0616                         u550 04F8                         u630 04CC  
                       u470 0598                         u710 0663                         u551 04F7  
                       u631 04CB                         u615 04B6                         u471 0597  
                       u711 0662                         u480 047C                         u720 0669  
                       u800 07AF                         u545 04EC                         u481 047B  
                       u721 0668                         u801 07AE                         u490 043F  
                       u570 0507                         u650 04DB                         u730 0676  
                       u810 03FB                         u491 043E                         u571 0506  
                       u651 04DA                         u635 04C8                         u475 0594  
                       u731 0675                         u811 03FA                         u820 03AB  
                       u740 05C6                         u660 0522                         u821 03AA  
                       u741 05C5                         u565 04F9                         u645 04D1  
                       u661 0521                         u830 03D0                         u750 060C  
                       u590 0517                         u670 052C                         u831 03CF  
                       u751 060B                         u591 0516                         u575 0503  
                       u671 052B                         u735 0672                         u840 03DC  
                       u680 0555                         u841 03DB                         u585 050D  
                       u681 0554                         u850 03C9                         u690 055A  
                       u770 0731                         u907 0379                         u851 03C8  
                       u691 0559                         u771 0730                         u780 0753  
                       u860 068E                         u765 0495                         u917 048F  
                       u685 0551                         u781 0752                         u790 076A  
                       u927 04A7                         u791 0769                         u937 039C  
                       u877 06C8                         u887 0714                         u897 0420  
                       _pad 051C                         wreg 0009             ?_lcd_set_cursor 0076  
           __end_of_LCD_Cmd 0367                        l1200 04F4                        l1210 0511  
                      l1202 04F8                        l1204 0507                        l1212 0517  
                      l1220 04B5                        l1310 048C                        l1302 047D  
                      l1206 050B                        l1230 04D0                        l1222 04BA  
                      l1400 039B                        l1320 04A2                        l1312 048E  
                      l1304 0483                        l1208 050C                        l1232 04D5  
                      l1224 04BE                        l1216 04AC                        l1160 057A  
                      l1152 0561                        l1240 0522                        l1322 04A4  
                      l1314 0492                        l1306 048A                        l1410 042C  
                      l1402 041B                        l1226 04C2                        l1218 04B2  
                      l1234 04DB                        l1162 0598                        l1154 0566  
                      l1170 045D                        l1250 0542                        l1242 0528  
                      l1330 0740                        l1420 03A1                        l1316 04A0  
                      l1308 048B                        l1412 0430                        l1404 041D  
                      l1180 043F                        l1228 04CC                        l1164 05A7  
                      l1156 056B                        l1172 0469                        l1252 0547  
                      l1244 052C                        l1260 061C                        l1340 0759  
                      l1332 0744                        l1324 0720                        l1422 03A4  
                      l1318 04A1                        l1414 0434                        l1406 0424  
                      l1182 0448                        l1190 04E0                        l1158 0570  
                      l1174 046E                        l1254 055A                        l1246 0532  
                      l1238 051E                        l1270 0648                        l1262 0628  
                      l1342 0760                        l1334 074F                        l1326 0731  
                      l1430 0400                        l1424 03A5                        l1416 0372  
                      l1408 0428                        l1184 044D                        l1176 0439  
                      l1192 04E2                        l1168 045A                        l1248 0538  
                      l1280 0676                        l1272 064C                        l1264 062B  
                      l1256 0613                        l1360 07B7                        l1344 076A  
                      l1336 0753                        l1328 0739                        l1432 0404  
                      l1426 03AB                        l1418 0376                        l1450 03B5  
                      l1442 03CB                        l1186 0453                        l1178 043B  
                      l1290 05CE                        l1194 04E8                        l1266 0630  
                      l1274 065C                        l1258 0617                        l1354 078D  
                      l1346 0776                        l1338 0754                        l1434 0406  
                      l1380 0368                        l1452 03B6                        l1444 03D0  
                      l1292 05DB                        l1284 05B3                        l1196 04EB  
                      l1276 0663                        l1268 0643                        l1364 07C1  
                      l1508 0799                        l1348 0784                        l1356 079E  
                      l1436 0408                        l1460 0692                        l1454 03BD  
                      l1446 03D6                        l1294 05F0                        l1286 05B5  
                      l1198 04F0                        l1278 0669                        l1358 07AF  
                      l1382 03E4                        l1438 0412                        l1470 06A4  
                      l1462 0692                        l1392 038E                        l1456 03C1  
                      l1448 03DC                        l1288 05C6                        l1296 05F8  
                      l1368 07CB                        l1384 03E9                        l1480 06F3  
                      l1472 06BE                        l1464 0695                        l1394 0394  
                      l1378 035E                        l1298 060C                        l1386 03F1  
                      l1482 0704                        l1474 06C2                        l1466 0698  
                      l1458 0683                        l1396 0396                        l1388 03FB  
                      l1484 070A                        l1476 06CF                        l1468 069B  
                      l1398 0399                        l1486 070E                        l1478 06D8  
                      ?_pad 007B                        STR_1 0800                        STR_2 0813  
                      _dbuf 0120                        _main 0683                        _prec 005E  
                      pad@i 0025                        pad@p 007C                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        pad@w 0027  
                      btemp 007E                        _utoa 0611            __end_of_ADC_Init 03A0  
          __end_of_ADC_Read 03B4                        start 0002                       ??_pad 0024  
          __end_of_LCD_Char 0372            __end_of_LCD_Init 0439                LCD_Char@data 0075  
          __end_of_LCD_Send 04AC                       _ADACQ 009D                       ?_main 0070  
                     _ADCLK 0098                       _ADPCH 009E                       _ADREF 009A  
                     ?_utoa 002A             __end_of___lwdiv 051C             __end_of___lwmod 04E0  
              vfpfcnvrt@fmt 0034                       _PORTC 000E                       _TRISA 0011  
                     _TRISC 0013                       _flags 0060         read_prec_or_width@c 0020  
       read_prec_or_width@n 0021                       _fputc 0561                       _fputs 0458  
                     pad@fp 0029                       _width 005C                       _putch 0350  
                     utoa@d 002A                       utoa@i 0032                       utoa@p 0030  
                     utoa@w 002D                       status 0003                       wtemp0 007E  
           __end_of_sprintf 041B             __initialization 07E4                __end_of_main 071E  
              __end_of_utoa 0683                LCD_Send@data 0072                      ??_main 005A  
                    ??_utoa 002C           __end_of_LCD_Clear 037E                   ??_LCD_Cmd 0075  
__end_of_read_prec_or_width 0611                      _ADCON0 0093                      ?_fputc 0070  
                    ?_fputs 0078                      _ADRESH 008D                      _ADRESL 008C  
                    _ANSELA 1F38                      ?_putch 0070                vfprintf@cfmt 0046  
                    ___wmul 0439                   ??___lwdiv 007A                   ??___lwmod 0074  
           ADC_Read@channel 0074        read_prec_or_width@ap 0076                      pad@buf 007B  
                    fputc@c 0070                      fputs@c 0020                      fputs@i 0021  
                    fputs@s 0023                   ?_ADC_Init 0070                   ?_ADC_Read 0070  
                    putch@c 0070            __end_of_vfprintf 03FE                      utoa@fp 002F  
                 ??_sprintf 004C                   ?_LCD_Char 0070     __end_of__initialization 07FD  
                 ?_LCD_Init 0070                   ?_LCD_Send 0070              __pcstackCOMMON 0070  
              __pidataBANK1 037E               __end_of_fputc 05B1               __end_of_fputs 047D  
             __end_of_putch 0351                ??_LCD_String 0076            ??_lcd_set_cursor 0077  
                ??_ADC_Init 0070                  ??_ADC_Read 0072                     ??_fputc 0073  
                   ??_fputs 0079                     ??_putch 0070                  __pbssBANK0 005C  
                __pbssBANK2 0120              LCD_Cmd@command 0075                  ??_LCD_Char 0075  
                ??_LCD_Init 0076                  ??_LCD_Send 0073          __end_of_LCD_String 03CA  
                __pmaintext 0683                     ?___wmul 0070                     _LCD_Cmd 035D  
                   ___lwdiv 04E0                     ___lwmod 04AC                   ?_vfprintf 0041  
                   __ptext1 03FE                     __ptext2 03E2                     __ptext3 071E  
                   __ptext4 0611                     __ptext5 051C                     __ptext6 0458  
                   __ptext7 0561                     __ptext8 0350                     __ptext9 04AC  
     read_prec_or_width@fmt 0023                   _LCD_Clear 0372                     _sprintf 03FE  
                   clrloop0 0352        end_of_initialization 07FD                     fputc@fp 0072  
                   init_ram 0357                     fputs@fp 0078                     initloop 0358  
        _read_prec_or_width 05B1           __end_of_vfpfcnvrt 07E4         ?_read_prec_or_width 0076  
          vfpfcnvrt@convarg 003A                  main@F12491 00C4                  ??_vfprintf 0044  
                 _PORTCbits 000E                  ?_LCD_Clear 0070        ??_read_prec_or_width 0078  
                main@buffer 00B0                  LCD_Send@RS 0070                 vfpfcnvrt@ap 0035  
               vfpfcnvrt@cp 003E                 vfpfcnvrt@fp 0040              __end_of___wmul 0458  
       start_initialization 07E4                 __end_of_pad 0561                 vfprintf@fmt 0041  
                  ??___wmul 0074                 __pdataBANK1 00C4              ADC_Read@result 0072  
                  ?_LCD_Cmd 0070                   ___latbits 0004               __pcstackBANK0 0020  
             __pcstackBANK1 00A0                 ??_LCD_Clear 0076            ___lwdiv@dividend 0078  
                  ?___lwdiv 0076                    ?___lwmod 0070                    _ADC_Init 038E  
                  _ADC_Read 03A0            ___lwdiv@quotient 007B                    ?_sprintf 0048  
                  _LCD_Char 0367                    _LCD_Init 041B                    _LCD_Send 047D  
            ___wmul@product 0074                   clear_ram0 0351                   _vfpfcnvrt 071E  
                _ADCON0bits 0093           ___wmul@multiplier 0070              LCD_String@text 0077  
                vfprintf@ap 0043                  vfprintf@fp 0045                  ?_vfpfcnvrt 0034  
        lcd_set_cursor@line 0076                  sprintf@fmt 0048             ___lwdiv@divisor 0076  
           ___lwdiv@counter 007D                    __ptext10 04E0                    __ptext11 05B1  
                  __ptext20 03A0                    __ptext12 0439                    __ptext21 038E  
                  __ptext13 03CA                    __ptext14 03B4                    __ptext15 0367  
                  __ptext16 041B                    __ptext17 0372                    __ptext18 035D  
                  __ptext19 047D                    _vfprintf 03E2                    main@name 00A0  
                _LCD_String 03B4              _lcd_set_cursor 03CA           lcd_set_cursor@col 0077  
                 sprintf@ap 004D            ___lwmod@dividend 0072                 ??_vfpfcnvrt 0036  
             __pstringtext1 0800               __pstringtext2 0813               __pstringtext3 0000  
                  sprintf@f 004F                    sprintf@s 004E             ___lwmod@divisor 0070  
           ___lwmod@counter 0075                main@O2_level 00C0      __end_of_lcd_set_cursor 03E2  
              main@PH_level 00C2  
